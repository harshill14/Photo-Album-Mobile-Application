<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_DgAlgLuTEeyOg8wFipIJcg" name="photos37">
    <eAnnotations xmi:id="_DkdnsLuTEeyOg8wFipIJcg" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_DkdnsbuTEeyOg8wFipIJcg" source="codegen">
        <details xmi:id="_DkdnsruTEeyOg8wFipIJcg" key="codegenDirectory" value="/photos37/src"/>
        <details xmi:id="_EaVfwLuTEeyOg8wFipIJcg" key="AssociatedSourceCode" value="/photos37/src/app/Photos.java;3942969170/1;/photos37/src/controller/AdminController.java;1136882115/1;/photos37/src/controller/AlbumController.java;2408220748/1;/photos37/src/controller/LoginController.java;1411077710/1;/photos37/src/controller/PhotoOpenController.java;614668132/1;/photos37/src/controller/PhotoSearchController.java;1510713627/1;/photos37/src/controller/PhotoViewController.java;301329652/1;/photos37/src/model/Album.java;2463396633/1;/photos37/src/model/Photo.java;4079047600/1;/photos37/src/model/SerializableSave.java;1907191178/1;/photos37/src/model/Tag.java;807780655/1;/photos37/src/model/User.java;2028311121/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_D43KYLuTEeyOg8wFipIJcg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_D43KYbuTEeyOg8wFipIJcg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_D43xcLuTEeyOg8wFipIJcg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_D43xcbuTEeyOg8wFipIJcg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_D43xcruTEeyOg8wFipIJcg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_D43xc7uTEeyOg8wFipIJcg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_D43xdLuTEeyOg8wFipIJcg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_D43xdbuTEeyOg8wFipIJcg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_D43xdruTEeyOg8wFipIJcg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_D47b0LuTEeyOg8wFipIJcg" name="javafx">
      <packagedElement xmi:type="uml:Package" xmi:id="_D48C4LuTEeyOg8wFipIJcg" name="application">
        <packagedElement xmi:type="uml:Class" xmi:id="_D_SigLuTEeyOg8wFipIJcg" name="Application"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_D48C4buTEeyOg8wFipIJcg" name="fxml">
        <packagedElement xmi:type="uml:Class" xmi:id="_D_TwoLuTEeyOg8wFipIJcg" name="FXMLLoader"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_D_bFYLuTEeyOg8wFipIJcg" name="FXML"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_D48C4ruTEeyOg8wFipIJcg" name="stage">
        <packagedElement xmi:type="uml:Class" xmi:id="_D_UXsLuTEeyOg8wFipIJcg" name="Stage"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_D__tILuTEeyOg8wFipIJcg" name="FileChooser"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_D49RALuTEeyOg8wFipIJcg" name="scene">
        <packagedElement xmi:type="uml:Package" xmi:id="_D49RAbuTEeyOg8wFipIJcg" name="layout">
          <packagedElement xmi:type="uml:Class" xmi:id="_D_YCEbuTEeyOg8wFipIJcg" name="AnchorPane"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_D_bscLuTEeyOg8wFipIJcg" name="GridPane"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_D_hzEbuTEeyOg8wFipIJcg" name="Border"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_D_iaIbuTEeyOg8wFipIJcg" name="BorderStroke"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_D_iaI7uTEeyOg8wFipIJcg" name="BorderStrokeStyle"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_D_jBMbuTEeyOg8wFipIJcg" name="BorderWidths"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_D_joQbuTEeyOg8wFipIJcg" name="CornerRadii"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_D_kPULuTEeyOg8wFipIJcg" name="Pane"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_D5DXobuTEeyOg8wFipIJcg" name="control">
          <packagedElement xmi:type="uml:Package" xmi:id="_D5L6gbuTEeyOg8wFipIJcg" name="Alert">
            <packagedElement xmi:type="uml:Enumeration" xmi:id="_D_ldcbuTEeyOg8wFipIJcg" name="AlertType"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_D_v1gruTEeyOg8wFipIJcg" name="Alert"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_D_wckbuTEeyOg8wFipIJcg" name="Button"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_D_xDoLuTEeyOg8wFipIJcg" name="ButtonType"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_D_xDoruTEeyOg8wFipIJcg" name="Label"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_D_xqsLuTEeyOg8wFipIJcg" name="PasswordField"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_D_xqsruTEeyOg8wFipIJcg" name="TextField"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_EAmxILuTEeyOg8wFipIJcg" name="ListView"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_D5D-sLuTEeyOg8wFipIJcg" name="text">
          <packagedElement xmi:type="uml:Class" xmi:id="_D_cTgLuTEeyOg8wFipIJcg" name="Text"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_D5L6gLuTEeyOg8wFipIJcg" name="paint">
          <packagedElement xmi:type="uml:Class" xmi:id="_D_k2YbuTEeyOg8wFipIJcg" name="Color"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_D5MhkLuTEeyOg8wFipIJcg" name="image">
          <packagedElement xmi:type="uml:Class" xmi:id="_D_mEgbuTEeyOg8wFipIJcg" name="Image"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_D_mEg7uTEeyOg8wFipIJcg" name="ImageView"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_D5MhkbuTEeyOg8wFipIJcg" name="input">
          <packagedElement xmi:type="uml:Class" xmi:id="_D_mrkbuTEeyOg8wFipIJcg" name="MouseEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_D_Wz8buTEeyOg8wFipIJcg" name="Parent"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_D_XbAbuTEeyOg8wFipIJcg" name="Scene"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_D_v1gLuTEeyOg8wFipIJcg" name="Node"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_D5CwkbuTEeyOg8wFipIJcg" name="collections">
        <packagedElement xmi:type="uml:Class" xmi:id="_D_ZQMLuTEeyOg8wFipIJcg" name="FXCollections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_D_Z3QbuTEeyOg8wFipIJcg" name="ObservableList"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_D5DXoLuTEeyOg8wFipIJcg" name="event">
        <packagedElement xmi:type="uml:Class" xmi:id="_D_aeULuTEeyOg8wFipIJcg" name="ActionEvent"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_D_hMALuTEeyOg8wFipIJcg" name="EventHandler"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_D48p8LuTEeyOg8wFipIJcg" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_D48p8buTEeyOg8wFipIJcg" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_D48p8ruTEeyOg8wFipIJcg" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_D_U-wLuTEeyOg8wFipIJcg" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_D_Vl0LuTEeyOg8wFipIJcg" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_D_WM4buTEeyOg8wFipIJcg" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_D5ElwLuTEeyOg8wFipIJcg" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_D_c6kLuTEeyOg8wFipIJcg" name="IOException"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_D_dhoLuTEeyOg8wFipIJcg" name="Serializable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_D_mrk7uTEeyOg8wFipIJcg" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_D_nSobuTEeyOg8wFipIJcg" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_D_nSo7uTEeyOg8wFipIJcg" name="FileReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_EAMhcLuTEeyOg8wFipIJcg" name="FileInputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_EANvkbuTEeyOg8wFipIJcg" name="FileOutputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_EAO9sbuTEeyOg8wFipIJcg" name="ObjectInputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_EAPkwbuTEeyOg8wFipIJcg" name="ObjectOutputStream"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_D5ElwbuTEeyOg8wFipIJcg" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_D_dhoruTEeyOg8wFipIJcg" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_D_eIsbuTEeyOg8wFipIJcg" name="Optional"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_D_n5sbuTEeyOg8wFipIJcg" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_D_ogwLuTEeyOg8wFipIJcg" name="Comparator"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_D_3KQruTEeyOg8wFipIJcg" name="Date"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_EAJeILuTEeyOg8wFipIJcg" name="Calendar"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_D5gDkLuTEeyOg8wFipIJcg" name="time">
        <packagedElement xmi:type="uml:Class" xmi:id="_D_2jMLuTEeyOg8wFipIJcg" name="LocalDate"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_D_3KQLuTEeyOg8wFipIJcg" name="ZoneId"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_D59WkLuTEeyOg8wFipIJcg" name="lang">
        <packagedElement xmi:type="uml:Package" xmi:id="_D599oLuTEeyOg8wFipIJcg" name="reflect">
          <packagedElement xmi:type="uml:Class" xmi:id="_EASBALuTEeyOg8wFipIJcg" name="Array"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EAgDcLuTEeyOg8wFipIJcg" name="Exception"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_EAn_QLuTEeyOg8wFipIJcg" name="ClassNotFoundException"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_D48p87uTEeyOg8wFipIJcg" name="controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_D6sWYLuTEeyOg8wFipIJcg" name="AdminController">
        <ownedAttribute xmi:id="_EBe64LuTEeyOg8wFipIJcg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EBfh8LuTEeyOg8wFipIJcg" value="1L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_EBfh8buTEeyOg8wFipIJcg" name="listViewUsers" visibility="package" type="_EAmxILuTEeyOg8wFipIJcg" association="_EDBL8LuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBgJA7uTEeyOg8wFipIJcg" name="addButton" visibility="private" type="_D_wckbuTEeyOg8wFipIJcg" association="_EDBzAbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBgwE7uTEeyOg8wFipIJcg" name="deleteButton" visibility="private" type="_D_wckbuTEeyOg8wFipIJcg" association="_EDCaEbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBhXIruTEeyOg8wFipIJcg" name="editButton" visibility="private" type="_D_wckbuTEeyOg8wFipIJcg" association="_EDDBILuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBh-MLuTEeyOg8wFipIJcg" name="logoutButton" visibility="private" type="_D_wckbuTEeyOg8wFipIJcg" association="_EDDBI7uTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBh-NLuTEeyOg8wFipIJcg" name="users" visibility="package" type="_D_dhoruTEeyOg8wFipIJcg" association="_EDDoMbuTEeyOg8wFipIJcg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EBilQbuTEeyOg8wFipIJcg" value="new ArrayList&lt;User>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_EBilQ7uTEeyOg8wFipIJcg" name="obsList" visibility="package" type="_D_Z3QbuTEeyOg8wFipIJcg" association="_EDEPQLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBjMUruTEeyOg8wFipIJcg" name="mainStage" visibility="package" type="_D_UXsLuTEeyOg8wFipIJcg" association="_EDE2ULuTEeyOg8wFipIJcg"/>
        <interfaceRealization xmi:id="_EAmKELuTEeyOg8wFipIJcg" client="_D6sWYLuTEeyOg8wFipIJcg" supplier="_D_dhoLuTEeyOg8wFipIJcg" contract="_D_dhoLuTEeyOg8wFipIJcg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECm8QLuTEeyOg8wFipIJcg" name="start" specification="_EAn_QruTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECm8QbuTEeyOg8wFipIJcg" name="mainStage" type="_D_UXsLuTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>users = SerializableSave.read();&#xD;
&#xD;
		obsList = FXCollections.observableArrayList();&#xD;
&#xD;
		for (int i = 0; i &lt; users.size(); i++) {&#xD;
			obsList.add(users.get(i));&#xD;
		}&#xD;
&#xD;
		listViewUsers.setItems(obsList);&#xD;
		listViewUsers.getSelectionModel().select(0);&#xD;
		listViewUsers.setCellFactory(param -> new ListCell&lt;User>() {&#xD;
			@Override&#xD;
			protected void updateItem(User item, boolean empty) {&#xD;
				super.updateItem(item, empty);&#xD;
&#xD;
				if (empty || item == null || item.getUsername() == null) {&#xD;
					setText(null);&#xD;
				} else {&#xD;
					setText(item.getUsername());&#xD;
&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
&#xD;
		mainStage.setOnCloseRequest(event -> {&#xD;
			mainStage.close();&#xD;
//			FXMLLoader loader = new FXMLLoader();&#xD;
//			loader.setLocation(getClass().getResource(&quot;/view/LoginScreen.fxml&quot;));&#xD;
//			try {&#xD;
//				AnchorPane root = (AnchorPane) loader.load();&#xD;
//				LoginController loginview = loader.getController();&#xD;
//				Stage stage = new Stage();&#xD;
//&#xD;
//				SerializableSave.save(users);&#xD;
//&#xD;
//				loginview.start(stage);&#xD;
//				Scene scene = new Scene(root);&#xD;
//				stage.setScene(scene);&#xD;
//				stage.show();&#xD;
//&#xD;
//			} catch (IOException exception) {&#xD;
//				exception.printStackTrace();&#xD;
//			}&#xD;
&#xD;
		});&#xD;
		this.mainStage = mainStage;&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECm8QruTEeyOg8wFipIJcg" name="addUser" specification="_EAn_RLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECm8Q7uTEeyOg8wFipIJcg" name="event" type="_D_aeULuTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>// giving a pop window for addng new user&#xD;
		Alert alert = new Alert(Alert.AlertType.CONFIRMATION);&#xD;
		alert.setTitle(&quot;Add User&quot;);&#xD;
		alert.setHeaderText(&quot;Adding User&quot;);&#xD;
		alert.setResizable(false);&#xD;
		// creates a textfield with asking for user input&#xD;
		Text label = new Text(&quot;Username: &quot;);&#xD;
		TextField text = new TextField();&#xD;
&#xD;
		// create a new display grid&#xD;
		GridPane grid = new GridPane();&#xD;
		grid.add(label, 1, 1);&#xD;
		grid.add(text, 2, 1);&#xD;
&#xD;
		alert.getDialogPane().setContent(grid);&#xD;
&#xD;
		Optional&lt;ButtonType> result = alert.showAndWait();&#xD;
&#xD;
		if (result.get() == ButtonType.OK) {&#xD;
			if (text.getText().isEmpty()) {&#xD;
				Alert alert2 = new Alert(Alert.AlertType.ERROR);&#xD;
				alert2.setTitle(&quot;You must enter a User name&quot;);&#xD;
				Optional&lt;ButtonType> z = alert2.showAndWait();&#xD;
				if (z.get() == ButtonType.OK) {&#xD;
					alert2.close();&#xD;
				}&#xD;
			} else {&#xD;
				User user = new User(text.getText());&#xD;
				for (int i = 0; i &lt; users.size(); i++) {&#xD;
&#xD;
					if (text.getText().equalsIgnoreCase(users.get(i).getUsername())) {&#xD;
						Alert alert2 = new Alert(Alert.AlertType.ERROR);&#xD;
						alert2.setTitle(&quot;There is already a user with that username.&quot;);&#xD;
						Optional&lt;ButtonType> result3 = alert2.showAndWait();&#xD;
						if (result3.get() == ButtonType.OK) {&#xD;
							alert2.close();&#xD;
						}&#xD;
						return;&#xD;
					}&#xD;
				}&#xD;
				obsList.add(user);&#xD;
				users.add(user);&#xD;
				alert.close();&#xD;
&#xD;
			}&#xD;
		} else {&#xD;
			alert.close();&#xD;
		}&#xD;
&#xD;
		try {&#xD;
			SerializableSave.save(users);&#xD;
		} catch (IOException e) {&#xD;
&#xD;
			System.out.println(&quot;Problem in Saving Users&quot;);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECm8RLuTEeyOg8wFipIJcg" name="rename" specification="_EAomUbuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECm8RbuTEeyOg8wFipIJcg" name="event" type="_D_aeULuTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>User user = listViewUsers.getSelectionModel().getSelectedItem();&#xD;
		Alert alert = new Alert(Alert.AlertType.CONFIRMATION);&#xD;
		alert.setTitle(&quot;Rename Username&quot;);&#xD;
		alert.setHeaderText(&quot;New Username: &quot;);&#xD;
		alert.setResizable(true);&#xD;
		Label label = new Label(&quot;New Username: &quot;);&#xD;
&#xD;
		TextField text = new TextField();&#xD;
&#xD;
		GridPane grid = new GridPane();&#xD;
		grid.add(label, 1, 1);&#xD;
		grid.add(text, 2, 1);&#xD;
		text.setPromptText(user.getUsername());&#xD;
&#xD;
		alert.getDialogPane().setContent(grid);&#xD;
&#xD;
		Optional&lt;ButtonType> result = alert.showAndWait();&#xD;
&#xD;
		if (result.get() == ButtonType.OK) {&#xD;
			if (text.getText().isEmpty()) {&#xD;
				Alert alert2 = new Alert(Alert.AlertType.ERROR);&#xD;
				alert2.setTitle(&quot;Enter a valid username.&quot;);&#xD;
				Optional&lt;ButtonType> result2 = alert2.showAndWait();&#xD;
				if (result2.get() == ButtonType.OK) {&#xD;
					alert2.close();&#xD;
				}&#xD;
			} else {&#xD;
				// runs through a series checkers to see if the renamed user is exisiting&#xD;
				for (int i = 0; i &lt; users.size(); i++) {&#xD;
					if (text.getText().equalsIgnoreCase(users.get(i).getUsername())) {&#xD;
						Alert alert2 = new Alert(Alert.AlertType.ERROR);&#xD;
						alert2.setTitle(&quot;There is already a user with that username.&quot;);&#xD;
						Optional&lt;ButtonType> result3 = alert2.showAndWait();&#xD;
						if (result3.get() == ButtonType.OK) {&#xD;
							alert2.close();&#xD;
						}&#xD;
						return;&#xD;
					}&#xD;
				}&#xD;
				user.setUsername(text.getText());&#xD;
				listViewUsers.refresh();&#xD;
			}&#xD;
		} else {&#xD;
			alert.close();&#xD;
		}&#xD;
&#xD;
		try {&#xD;
			SerializableSave.save(users);&#xD;
		} catch (IOException e) {&#xD;
			// TODO Auto-generated catch block&#xD;
			System.out.println(&quot;Error saving in add!&quot;);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECm8RruTEeyOg8wFipIJcg" name="deleteUser" specification="_EAomU7uTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECm8R7uTEeyOg8wFipIJcg" name="event" type="_D_aeULuTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>User user = listViewUsers.getSelectionModel().getSelectedItem();&#xD;
		Alert alert = new Alert(Alert.AlertType.CONFIRMATION);&#xD;
&#xD;
		// int index = listView.getSelectionModel().getSelectedIndex();&#xD;
&#xD;
		alert.setTitle(&quot;Album Delete&quot;);&#xD;
		alert.setHeaderText(&quot;Are you sure?&quot;);&#xD;
		alert.setResizable(false);&#xD;
&#xD;
		Optional&lt;ButtonType> result = alert.showAndWait();&#xD;
&#xD;
		/**&#xD;
		 * removes user from both obsList and the users list&#xD;
		 */&#xD;
		if (result.get() == ButtonType.OK) {&#xD;
			obsList.remove(user);&#xD;
			users.remove(user);&#xD;
//			insertionSort(obsList);&#xD;
			alert.close();&#xD;
		} else {&#xD;
			alert.close();&#xD;
		}&#xD;
&#xD;
		try {&#xD;
			SerializableSave.save(users);&#xD;
		} catch (IOException e1) {&#xD;
			// TODO Auto-generated catch block&#xD;
			System.out.println(&quot;Error saving in delete!&quot;);&#xD;
			e1.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECnjULuTEeyOg8wFipIJcg" name="logout" specification="_EApNYLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECnjUbuTEeyOg8wFipIJcg" name="event" type="_D_aeULuTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>Alert alert = new Alert(Alert.AlertType.CONFIRMATION);&#xD;
		alert.setTitle(&quot;Logout&quot;);&#xD;
		alert.setHeaderText(&quot;Are you sure?&quot;);&#xD;
&#xD;
		Optional&lt;ButtonType> result = alert.showAndWait();&#xD;
&#xD;
		if (result.get() == ButtonType.OK) {&#xD;
&#xD;
			mainStage.close();&#xD;
			FXMLLoader loader = new FXMLLoader();&#xD;
			loader.setLocation(getClass().getResource(&quot;/view/LoginScreen.fxml&quot;));&#xD;
			try {&#xD;
				AnchorPane root = (AnchorPane) loader.load();&#xD;
				LoginController loginview = loader.getController();&#xD;
				Stage stage = new Stage();&#xD;
&#xD;
				SerializableSave.save(users);&#xD;
&#xD;
				loginview.start(stage);&#xD;
				Scene scene = new Scene(root);&#xD;
				stage.setScene(scene);&#xD;
				stage.show();&#xD;
&#xD;
			} catch (IOException exception) {&#xD;
				exception.printStackTrace();&#xD;
			}&#xD;
&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_EAn_QruTEeyOg8wFipIJcg" name="start" method="_ECm8QLuTEeyOg8wFipIJcg" raisedException="_D_c6kLuTEeyOg8wFipIJcg _EAn_QLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EAn_Q7uTEeyOg8wFipIJcg" name="mainStage" type="_D_UXsLuTEeyOg8wFipIJcg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EAn_RLuTEeyOg8wFipIJcg" name="addUser" method="_ECm8QruTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EAomULuTEeyOg8wFipIJcg" name="event" type="_D_aeULuTEeyOg8wFipIJcg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EAomUbuTEeyOg8wFipIJcg" name="rename" method="_ECm8RLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EAomUruTEeyOg8wFipIJcg" name="event" type="_D_aeULuTEeyOg8wFipIJcg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EAomU7uTEeyOg8wFipIJcg" name="deleteUser" method="_ECm8RruTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EAomVLuTEeyOg8wFipIJcg" name="event" type="_D_aeULuTEeyOg8wFipIJcg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EApNYLuTEeyOg8wFipIJcg" name="logout" method="_ECnjULuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EApNYbuTEeyOg8wFipIJcg" name="event" type="_D_aeULuTEeyOg8wFipIJcg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_D63VgLuTEeyOg8wFipIJcg" name="AlbumController">
        <ownedAttribute xmi:id="_EBkacLuTEeyOg8wFipIJcg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EBkacbuTEeyOg8wFipIJcg" value="1L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_EBkacruTEeyOg8wFipIJcg" name="albums" visibility="package" type="_D_dhoruTEeyOg8wFipIJcg" association="_EDE2U7uTEeyOg8wFipIJcg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EBlBgbuTEeyOg8wFipIJcg" value="new ArrayList&lt;Album>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_EBlBg7uTEeyOg8wFipIJcg" name="allPhotos" visibility="package" type="_D_dhoruTEeyOg8wFipIJcg" association="_EDFdYbuTEeyOg8wFipIJcg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EBlokbuTEeyOg8wFipIJcg" value="new ArrayList&lt;Photo>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_EBlok7uTEeyOg8wFipIJcg" name="user" visibility="private" type="_D8DBQLuTEeyOg8wFipIJcg" association="_EDGEcbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBmPoLuTEeyOg8wFipIJcg" name="users" visibility="package" type="_D_dhoruTEeyOg8wFipIJcg" association="_EDGEdLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBmPo7uTEeyOg8wFipIJcg" name="album" visibility="package" type="_EAmxILuTEeyOg8wFipIJcg" association="_EDGrgbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBndwLuTEeyOg8wFipIJcg" name="photoGrid" visibility="package" type="_D_bscLuTEeyOg8wFipIJcg" association="_EDGrhLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBndxLuTEeyOg8wFipIJcg" name="pane00" visibility="package" type="_D_kPULuTEeyOg8wFipIJcg" association="_EDHSkbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBoE07uTEeyOg8wFipIJcg" name="pane10" visibility="package" type="_D_kPULuTEeyOg8wFipIJcg" association="_EDH5obuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBor4ruTEeyOg8wFipIJcg" name="pane01" visibility="package" type="_D_kPULuTEeyOg8wFipIJcg" association="_EDH5pLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBpS8ruTEeyOg8wFipIJcg" name="pane11" visibility="package" type="_D_kPULuTEeyOg8wFipIJcg" association="_EDIgsbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBpS9ruTEeyOg8wFipIJcg" name="pane02" visibility="package" type="_D_kPULuTEeyOg8wFipIJcg" association="_EDIgtLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBp6A7uTEeyOg8wFipIJcg" name="pane12" visibility="package" type="_D_kPULuTEeyOg8wFipIJcg" association="_EDJHwbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBqhE7uTEeyOg8wFipIJcg" name="imageView00" visibility="package" type="_D_mEg7uTEeyOg8wFipIJcg" association="_EDJu0buTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBrIIruTEeyOg8wFipIJcg" name="imageView10" visibility="package" type="_D_mEg7uTEeyOg8wFipIJcg" association="_EDJu1LuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBrvM7uTEeyOg8wFipIJcg" name="imageView01" visibility="package" type="_D_mEg7uTEeyOg8wFipIJcg" association="_EDKV4buTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBsWQruTEeyOg8wFipIJcg" name="imageView11" visibility="package" type="_D_mEg7uTEeyOg8wFipIJcg" association="_EDK88LuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBs9UruTEeyOg8wFipIJcg" name="imageView02" visibility="package" type="_D_mEg7uTEeyOg8wFipIJcg" association="_EDK887uTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBtkYruTEeyOg8wFipIJcg" name="imageView12" visibility="package" type="_D_mEg7uTEeyOg8wFipIJcg" association="_EDLkAbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBuLcruTEeyOg8wFipIJcg" name="albumName00" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDLkBLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBuygLuTEeyOg8wFipIJcg" name="albumName10" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDMLEbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBuyhLuTEeyOg8wFipIJcg" name="albumName01" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDMyIbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBvZkruTEeyOg8wFipIJcg" name="albumName11" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDMyJLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBvZlruTEeyOg8wFipIJcg" name="albumName02" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDNZMbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBwAo7uTEeyOg8wFipIJcg" name="albumName12" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDOAQbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBwnsruTEeyOg8wFipIJcg" name="caption00" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDOARLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBwntruTEeyOg8wFipIJcg" name="caption10" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDOnUbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBxOw7uTEeyOg8wFipIJcg" name="caption01" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDOnVLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBx10ruTEeyOg8wFipIJcg" name="caption11" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDPOYbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBzD8buTEeyOg8wFipIJcg" name="caption02" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDPOZLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBzrAruTEeyOg8wFipIJcg" name="caption12" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDPOZ7uTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EBzrBruTEeyOg8wFipIJcg" name="usernameLabel" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDP1cbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EB0SE7uTEeyOg8wFipIJcg" name="currIndex" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EB0SFLuTEeyOg8wFipIJcg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_EB05IbuTEeyOg8wFipIJcg" name="firstS" visibility="package" type="_D_UXsLuTEeyOg8wFipIJcg" association="_EDP1dLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EB05I7uTEeyOg8wFipIJcg" name="userIndex" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_EAp0cLuTEeyOg8wFipIJcg" client="_D63VgLuTEeyOg8wFipIJcg" supplier="_D_dhoLuTEeyOg8wFipIJcg" contract="_D_dhoLuTEeyOg8wFipIJcg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECoKYLuTEeyOg8wFipIJcg" name="start" specification="_EAs3wLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECoKYbuTEeyOg8wFipIJcg" name="firstS" type="_D_UXsLuTEeyOg8wFipIJcg"/>
          <ownedParameter xmi:id="_ECoKYruTEeyOg8wFipIJcg" name="userIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>users = SerializableSave.read();&#xD;
&#xD;
		user = users.get(userIndex);&#xD;
		this.userIndex = userIndex;&#xD;
&#xD;
		this.firstS = firstS;&#xD;
&#xD;
		refresh();&#xD;
		albums = user.getAlbums();&#xD;
		usernameLabel.setText(user.getUsername());&#xD;
		insertImages();&#xD;
&#xD;
		// Pane event handlers&#xD;
		pane00.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler&lt;MouseEvent>() {&#xD;
&#xD;
			@Override&#xD;
			public void handle(MouseEvent event) {&#xD;
&#xD;
				if (event.getClickCount() == 1) {&#xD;
					pane00.setBorder(new Border(new BorderStroke(Color.DARKCYAN, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(10))));&#xD;
&#xD;
					pane10.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane01.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane11.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane02.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane12.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
				} else if (event.getClickCount() == 2) {&#xD;
					if (currIndex &lt; albums.size()) {&#xD;
						firstS.close();&#xD;
						FXMLLoader loader = new FXMLLoader();&#xD;
						loader.setLocation(getClass().getResource(&quot;/view/PhotosScreen.fxml&quot;));&#xD;
						try {&#xD;
							AnchorPane root = (AnchorPane) loader.load();&#xD;
							PhotoViewController controller = loader.getController();&#xD;
							Stage stage = new Stage();&#xD;
							SerializableSave.save(users);&#xD;
							controller.start(stage, currIndex, userIndex);&#xD;
							Scene scene = new Scene(root, 800, 600);&#xD;
							stage.setScene(scene);&#xD;
							stage.show();&#xD;
						} catch (Exception exception) {&#xD;
							exception.printStackTrace();&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
				event.consume();&#xD;
			}&#xD;
		});&#xD;
&#xD;
		pane10.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler&lt;MouseEvent>() {&#xD;
			@Override&#xD;
			public void handle(MouseEvent event) {&#xD;
				if (event.getClickCount() == 1) {&#xD;
&#xD;
					pane00.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane10.setBorder(new Border(new BorderStroke(Color.DARKCYAN, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(10))));&#xD;
&#xD;
					pane01.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane11.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane02.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane12.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
				} else if (event.getClickCount() == 2) {&#xD;
					if (currIndex + 1 &lt; albums.size()) {&#xD;
						firstS.close();&#xD;
						FXMLLoader loader = new FXMLLoader();&#xD;
						loader.setLocation(getClass().getResource(&quot;/view/PhotosScreen.fxml&quot;));&#xD;
						try {&#xD;
							AnchorPane root = (AnchorPane) loader.load();&#xD;
							PhotoViewController controller = loader.getController();&#xD;
							Stage stage = new Stage();&#xD;
							SerializableSave.save(users);&#xD;
							controller.start(stage, currIndex + 1, userIndex);&#xD;
							Scene scene = new Scene(root, 800, 600);&#xD;
							stage.setScene(scene);&#xD;
							stage.show();&#xD;
&#xD;
						} catch (Exception exception) {&#xD;
							exception.printStackTrace();&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
&#xD;
				event.consume();&#xD;
			}&#xD;
		});&#xD;
&#xD;
		pane01.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler&lt;MouseEvent>() {&#xD;
&#xD;
			@Override&#xD;
			public void handle(MouseEvent event) {&#xD;
&#xD;
				if (event.getClickCount() == 1) {&#xD;
&#xD;
					pane00.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane10.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane01.setBorder(new Border(new BorderStroke(Color.CORNFLOWERBLUE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(10))));&#xD;
&#xD;
					pane11.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane02.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane12.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
				} else if (event.getClickCount() == 2) {&#xD;
&#xD;
					if (currIndex + 2 &lt; albums.size()) {&#xD;
&#xD;
						firstS.close();&#xD;
						FXMLLoader loader = new FXMLLoader();&#xD;
						loader.setLocation(getClass().getResource(&quot;/view/PhotosScreen.fxml&quot;));&#xD;
&#xD;
						try {&#xD;
							AnchorPane root = (AnchorPane) loader.load();&#xD;
							PhotoViewController controller = loader.getController();&#xD;
							Stage stage = new Stage();&#xD;
							SerializableSave.save(users);&#xD;
							controller.start(stage, currIndex + 2, userIndex);&#xD;
							Scene scene = new Scene(root, 800, 600);&#xD;
							stage.setScene(scene);&#xD;
							stage.show();&#xD;
&#xD;
						} catch (Exception exception) {&#xD;
							exception.printStackTrace();&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
&#xD;
				event.consume();&#xD;
			}&#xD;
		});&#xD;
&#xD;
		pane11.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler&lt;MouseEvent>() {&#xD;
&#xD;
			@Override&#xD;
			public void handle(MouseEvent event) {&#xD;
&#xD;
				if (event.getClickCount() == 1) {&#xD;
&#xD;
					pane00.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane10.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane01.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane11.setBorder(new Border(new BorderStroke(Color.CORNFLOWERBLUE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(10))));&#xD;
&#xD;
					pane02.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane12.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
				} else if (event.getClickCount() == 2) {&#xD;
&#xD;
					if (currIndex + 3 &lt; albums.size()) {&#xD;
&#xD;
						firstS.close();&#xD;
						FXMLLoader loader = new FXMLLoader();&#xD;
						loader.setLocation(getClass().getResource(&quot;/view/PhotosScreen.fxml&quot;));&#xD;
&#xD;
						try {&#xD;
							AnchorPane root = (AnchorPane) loader.load();&#xD;
							PhotoViewController controller = loader.getController();&#xD;
							Stage stage = new Stage();&#xD;
							SerializableSave.save(users);&#xD;
							controller.start(stage, currIndex + 3, userIndex);&#xD;
							Scene scene = new Scene(root, 800, 600);&#xD;
							stage.setScene(scene);&#xD;
							stage.show();&#xD;
&#xD;
						} catch (Exception exception) {&#xD;
							exception.printStackTrace();&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
&#xD;
				event.consume();&#xD;
			}&#xD;
		});&#xD;
&#xD;
		pane02.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler&lt;MouseEvent>() {&#xD;
&#xD;
			@Override&#xD;
			public void handle(MouseEvent event) {&#xD;
&#xD;
				if (event.getClickCount() == 1) {&#xD;
&#xD;
					pane00.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane10.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane01.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane11.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane02.setBorder(new Border(new BorderStroke(Color.CORNFLOWERBLUE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(10))));&#xD;
&#xD;
					pane12.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
				} else if (event.getClickCount() == 2) {&#xD;
&#xD;
					if (currIndex + 4 &lt; albums.size()) {&#xD;
&#xD;
						firstS.close();&#xD;
						FXMLLoader loader = new FXMLLoader();&#xD;
						loader.setLocation(getClass().getResource(&quot;/view/PhotosScreen.fxml&quot;));&#xD;
&#xD;
						try {&#xD;
							AnchorPane root = (AnchorPane) loader.load();&#xD;
							PhotoViewController controller = loader.getController();&#xD;
							Stage stage = new Stage();&#xD;
							SerializableSave.save(users);&#xD;
							controller.start(stage, currIndex + 4, userIndex);&#xD;
							Scene scene = new Scene(root, 800, 600);&#xD;
							stage.setScene(scene);&#xD;
							stage.show();&#xD;
&#xD;
						} catch (Exception exception) {&#xD;
							exception.printStackTrace();&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
&#xD;
				event.consume();&#xD;
			}&#xD;
		});&#xD;
&#xD;
		pane12.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler&lt;MouseEvent>() {&#xD;
&#xD;
			@Override&#xD;
			public void handle(MouseEvent event) {&#xD;
&#xD;
				if (event.getClickCount() == 1) {&#xD;
&#xD;
					pane00.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane10.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane01.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane11.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane02.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane12.setBorder(new Border(new BorderStroke(Color.CORNFLOWERBLUE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(10))));&#xD;
				} else if (event.getClickCount() == 2) {&#xD;
&#xD;
					if (currIndex + 5 &lt; albums.size()) {&#xD;
&#xD;
						firstS.close();&#xD;
						FXMLLoader loader = new FXMLLoader();&#xD;
						loader.setLocation(getClass().getResource(&quot;/view/PhotosScreen.fxml&quot;));&#xD;
&#xD;
						try {&#xD;
							AnchorPane root = (AnchorPane) loader.load();&#xD;
							PhotoViewController controller = loader.getController();&#xD;
							Stage stage = new Stage();&#xD;
							SerializableSave.save(users);&#xD;
							controller.start(stage, currIndex + 5, userIndex);&#xD;
							Scene scene = new Scene(root, 800, 600);&#xD;
							stage.setScene(scene);&#xD;
							stage.show();&#xD;
&#xD;
						} catch (Exception exception) {&#xD;
							exception.printStackTrace();&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
&#xD;
				event.consume();&#xD;
&#xD;
			}&#xD;
		});&#xD;
&#xD;
		// ON STAGE CLOSE&#xD;
		firstS.setOnCloseRequest(event -> {&#xD;
&#xD;
			try {&#xD;
				SerializableSave.save(users);&#xD;
			} catch (IOException e) {&#xD;
				// TODO Auto-generated catch block&#xD;
				e.printStackTrace();&#xD;
			}&#xD;
			changeScreen();&#xD;
&#xD;
		});&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECoKY7uTEeyOg8wFipIJcg" name="changeScreen" specification="_D69cILuTEeyOg8wFipIJcg">
          <language>java</language>
          <body>firstS.close();&#xD;
		FXMLLoader loader = new FXMLLoader();&#xD;
		loader.setLocation(getClass().getResource(&quot;/view/LoginScreen.fxml&quot;));&#xD;
&#xD;
		try {&#xD;
			AnchorPane root = (AnchorPane) loader.load();&#xD;
			LoginController loginview = loader.getController();&#xD;
			Stage stage = new Stage();&#xD;
			SerializableSave.save(users);&#xD;
			loginview.start(stage);&#xD;
			Scene scene = new Scene(root);&#xD;
			stage.setScene(scene);&#xD;
			stage.show();&#xD;
&#xD;
		} catch (Exception exception) {&#xD;
			exception.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECoKZLuTEeyOg8wFipIJcg" name="insertImages" specification="_D69cIbuTEeyOg8wFipIJcg">
          <language>java</language>
          <body>if (albums == null || albums.size() == 0) {&#xD;
&#xD;
		} else {&#xD;
			if (albums.size() - currIndex > 5) {&#xD;
&#xD;
				if (albums.get(currIndex).getPhotos().size() > 0&#xD;
						&amp;&amp; albums.get(currIndex).getPhotos().get(0).getLocation() != null) {&#xD;
&#xD;
					imageView00.setImage(new Image(albums.get(currIndex).getPhotos().get(0).getLocation()));&#xD;
				}&#xD;
				albumName00.setText(albums.get(currIndex).getAlbumName());&#xD;
				if (albums.get(currIndex).getPhotos().size() > 0) {&#xD;
					caption00.setText(albums.get(currIndex).getPhotos().size() + &quot;Photo: \nDate: &quot;&#xD;
							+ albums.get(currIndex).getPhotos().get(0).getDate() + &quot; - &quot;&#xD;
							+ albums.get(currIndex).getPhotos().get(albums.get(currIndex).getPhotos().size() - 1)&#xD;
									.getDate().toString());&#xD;
				} else {&#xD;
&#xD;
					caption00.setText(&#xD;
							albums.get(currIndex).getPhotos().size() + &quot; photos / Dates: xx-xx-xxxx - xx-xx-xxxx&quot;);&#xD;
				}&#xD;
&#xD;
				if (albums.get(currIndex + 1).getPhotos().size() > 0&#xD;
						&amp;&amp; albums.get(currIndex + 1).getPhotos().get(0).getLocation() != null) {&#xD;
&#xD;
					imageView10.setImage(new Image(albums.get(currIndex + 1).getPhotos().get(0).getLocation()));&#xD;
				}&#xD;
				albumName10.setText(albums.get(currIndex + 1).getAlbumName());&#xD;
				if (albums.get(currIndex + 1).getPhotos().size() > 0) {&#xD;
					caption10.setText(albums.get(currIndex + 1).getPhotos().size() + &quot; Photo: \nDate: &quot;&#xD;
							+ albums.get(currIndex + 1).getPhotos().get(0).getDate() + &quot; - &quot;&#xD;
							+ albums.get(currIndex + 1).getPhotos()&#xD;
									.get(albums.get(currIndex + 1).getPhotos().size() - 1).getDate().toString());&#xD;
				} else {&#xD;
&#xD;
					caption10.setText(&#xD;
							albums.get(currIndex + 1).getPhotos().size() + &quot; photos / Dates: xx-xx-xxxx - xx-xx-xxxx&quot;);&#xD;
				}&#xD;
&#xD;
				if (albums.get(currIndex + 2).getPhotos().size() > 0&#xD;
						&amp;&amp; albums.get(currIndex + 2).getPhotos().get(0).getLocation() != null) {&#xD;
&#xD;
					imageView01.setImage(new Image(albums.get(currIndex + 2).getPhotos().get(0).getLocation()));&#xD;
				}&#xD;
				albumName01.setText(albums.get(currIndex + 2).getAlbumName());&#xD;
				if (albums.get(currIndex + 2).getPhotos().size() > 0) {&#xD;
					caption01.setText(albums.get(currIndex + 2).getPhotos().size() + &quot; Photo: \nDate: &quot;&#xD;
							+ albums.get(currIndex + 2).getPhotos().get(0).getDate() + &quot; - &quot;&#xD;
							+ albums.get(currIndex + 2).getPhotos()&#xD;
									.get(albums.get(currIndex + 2).getPhotos().size() - 1).getDate().toString());&#xD;
				} else {&#xD;
&#xD;
					caption01.setText(&#xD;
							albums.get(currIndex + 2).getPhotos().size() + &quot; photos / Dates: xx-xx-xxxx - xx-xx-xxxx&quot;);&#xD;
				}&#xD;
&#xD;
				if (albums.get(currIndex + 3).getPhotos().size() > 0&#xD;
						&amp;&amp; albums.get(currIndex + 3).getPhotos().get(0).getLocation() != null) {&#xD;
&#xD;
					imageView11.setImage(new Image(albums.get(currIndex + 3).getPhotos().get(0).getLocation()));&#xD;
				}&#xD;
				albumName11.setText(albums.get(currIndex + 3).getAlbumName());&#xD;
				if (albums.get(currIndex + 3).getPhotos().size() > 0) {&#xD;
					caption11.setText(albums.get(currIndex + 3).getPhotos().size() + &quot;Photo: \nDate:&quot;&#xD;
							+ albums.get(currIndex + 3).getPhotos().get(0).getDate() + &quot; - &quot;&#xD;
							+ albums.get(currIndex + 3).getPhotos()&#xD;
									.get(albums.get(currIndex + 3).getPhotos().size() - 1).getDate().toString());&#xD;
				} else {&#xD;
&#xD;
					caption11.setText(&#xD;
							albums.get(currIndex + 3).getPhotos().size() + &quot; photos / Dates: xx-xx-xxxx - xx-xx-xxxx&quot;);&#xD;
				}&#xD;
&#xD;
				if (albums.get(currIndex + 4).getPhotos().size() > 0&#xD;
						&amp;&amp; albums.get(currIndex + 4).getPhotos().get(0).getLocation() != null) {&#xD;
&#xD;
					imageView02.setImage(new Image(albums.get(currIndex + 4).getPhotos().get(0).getLocation()));&#xD;
				}&#xD;
				albumName02.setText(albums.get(currIndex + 4).getAlbumName());&#xD;
				if (albums.get(currIndex + 4).getPhotos().size() > 0) {&#xD;
					caption02.setText(albums.get(currIndex + 4).getPhotos().size() + &quot;Photo: \nDate: &quot;&#xD;
							+ albums.get(currIndex + 4).getPhotos().get(0).getDate() + &quot; - &quot;&#xD;
							+ albums.get(currIndex + 4).getPhotos()&#xD;
									.get(albums.get(currIndex + 4).getPhotos().size() - 1).getDate().toString());&#xD;
				} else {&#xD;
&#xD;
					caption02.setText(&#xD;
							albums.get(currIndex + 4).getPhotos().size() + &quot; photos / Dates: xx-xx-xxxx - xx-xx-xxxx&quot;);&#xD;
				}&#xD;
&#xD;
				if (albums.get(currIndex + 5).getPhotos().size() > 0&#xD;
						&amp;&amp; albums.get(currIndex + 5).getPhotos().get(0).getLocation() != null) {&#xD;
&#xD;
					imageView12.setImage(new Image(albums.get(currIndex + 5).getPhotos().get(0).getLocation()));&#xD;
				}&#xD;
				albumName12.setText(albums.get(currIndex + 5).getAlbumName());&#xD;
				if (albums.get(currIndex + 5).getPhotos().size() > 0) {&#xD;
					caption12.setText(albums.get(currIndex + 5).getPhotos().size() + &quot; Photo: \nDate: &quot;&#xD;
							+ albums.get(currIndex + 5).getPhotos().get(0).getDate() + &quot; - &quot;&#xD;
							+ albums.get(currIndex + 5).getPhotos()&#xD;
									.get(albums.get(currIndex + 5).getPhotos().size() - 1).getDate().toString());&#xD;
				} else {&#xD;
&#xD;
					caption12.setText(&#xD;
							albums.get(currIndex + 5).getPhotos().size() + &quot; photos / Dates: xx-xx-xxxx - xx-xx-xxxx&quot;);&#xD;
				}&#xD;
&#xD;
			} else if (albums.size() - currIndex > 4) {&#xD;
&#xD;
				if (albums.get(currIndex).getPhotos().size() > 0&#xD;
						&amp;&amp; albums.get(currIndex).getPhotos().get(0).getLocation() != null) {&#xD;
&#xD;
					imageView00.setImage(new Image(albums.get(currIndex).getPhotos().get(0).getLocation()));&#xD;
				}&#xD;
				albumName00.setText(albums.get(currIndex).getAlbumName());&#xD;
				if (albums.get(currIndex).getPhotos().size() > 0) {&#xD;
					caption00.setText(albums.get(currIndex).getPhotos().size() + &quot; Photo: \nDate: &quot;&#xD;
							+ albums.get(currIndex).getPhotos().get(0).getDate() + &quot; - &quot;&#xD;
							+ albums.get(currIndex).getPhotos().get(albums.get(currIndex).getPhotos().size() - 1)&#xD;
									.getDate().toString());&#xD;
				} else {&#xD;
&#xD;
					caption00.setText(&#xD;
							albums.get(currIndex).getPhotos().size() + &quot; photos / Dates: xx-xx-xxxx - xx-xx-xxxx&quot;);&#xD;
				}&#xD;
&#xD;
				if (albums.get(currIndex + 1).getPhotos().size() > 0&#xD;
						&amp;&amp; albums.get(currIndex + 1).getPhotos().get(0).getLocation() != null) {&#xD;
&#xD;
					imageView10.setImage(new Image(albums.get(currIndex + 1).getPhotos().get(0).getLocation()));&#xD;
				}&#xD;
				albumName10.setText(albums.get(currIndex + 1).getAlbumName());&#xD;
				if (albums.get(currIndex + 1).getPhotos().size() > 0) {&#xD;
					caption10.setText(albums.get(currIndex + 1).getPhotos().size() + &quot; Photo: \nDate: &quot;&#xD;
							+ albums.get(currIndex + 1).getPhotos().get(0).getDate() + &quot; - &quot;&#xD;
							+ albums.get(currIndex + 1).getPhotos()&#xD;
									.get(albums.get(currIndex + 1).getPhotos().size() - 1).getDate().toString());&#xD;
				} else {&#xD;
&#xD;
					caption10.setText(&#xD;
							albums.get(currIndex + 1).getPhotos().size() + &quot; photos / Dates: xx-xx-xxxx - xx-xx-xxxx&quot;);&#xD;
				}&#xD;
&#xD;
				if (albums.get(currIndex + 2).getPhotos().size() > 0&#xD;
						&amp;&amp; albums.get(currIndex + 2).getPhotos().get(0).getLocation() != null) {&#xD;
&#xD;
					imageView01.setImage(new Image(albums.get(currIndex + 2).getPhotos().get(0).getLocation()));&#xD;
				}&#xD;
				albumName01.setText(albums.get(currIndex + 2).getAlbumName());&#xD;
				if (albums.get(currIndex + 2).getPhotos().size() > 0) {&#xD;
					caption01.setText(albums.get(currIndex + 2).getPhotos().size() + &quot; Photo: \nDate: &quot;&#xD;
							+ albums.get(currIndex + 2).getPhotos().get(0).getDate() + &quot; - &quot;&#xD;
							+ albums.get(currIndex + 2).getPhotos()&#xD;
									.get(albums.get(currIndex + 2).getPhotos().size() - 1).getDate().toString());&#xD;
				} else {&#xD;
&#xD;
					caption01.setText(&#xD;
							albums.get(currIndex + 2).getPhotos().size() + &quot; photos / Dates: xx-xx-xxxx - xx-xx-xxxx&quot;);&#xD;
				}&#xD;
&#xD;
				if (albums.get(currIndex + 3).getPhotos().size() > 0&#xD;
						&amp;&amp; albums.get(currIndex + 3).getPhotos().get(0).getLocation() != null) {&#xD;
&#xD;
					imageView11.setImage(new Image(albums.get(currIndex + 3).getPhotos().get(0).getLocation()));&#xD;
				}&#xD;
				albumName11.setText(albums.get(currIndex + 3).getAlbumName());&#xD;
				if (albums.get(currIndex + 3).getPhotos().size() > 0) {&#xD;
					caption11.setText(albums.get(currIndex + 3).getPhotos().size() + &quot; Photo: \nDate: &quot;&#xD;
							+ albums.get(currIndex + 3).getPhotos().get(0).getDate() + &quot; - &quot;&#xD;
							+ albums.get(currIndex + 3).getPhotos()&#xD;
									.get(albums.get(currIndex + 3).getPhotos().size() - 1).getDate().toString());&#xD;
				} else {&#xD;
&#xD;
					caption11.setText(&#xD;
							albums.get(currIndex + 3).getPhotos().size() + &quot; photos / Dates: xx-xx-xxxx - xx-xx-xxxx&quot;);&#xD;
				}&#xD;
&#xD;
				if (albums.get(currIndex + 4).getPhotos().size() > 0&#xD;
						&amp;&amp; albums.get(currIndex + 4).getPhotos().get(0).getLocation() != null) {&#xD;
&#xD;
					imageView02.setImage(new Image(albums.get(currIndex + 4).getPhotos().get(0).getLocation()));&#xD;
				}&#xD;
				albumName02.setText(albums.get(currIndex + 4).getAlbumName());&#xD;
				if (albums.get(currIndex + 4).getPhotos().size() > 0) {&#xD;
					caption02.setText(albums.get(currIndex + 4).getPhotos().size() + &quot; Photo: \nDate:&quot;&#xD;
							+ albums.get(currIndex + 4).getPhotos().get(0).getDate() + &quot; - &quot;&#xD;
							+ albums.get(currIndex + 4).getPhotos()&#xD;
									.get(albums.get(currIndex + 4).getPhotos().size() - 1).getDate().toString());&#xD;
				} else {&#xD;
&#xD;
					caption02.setText(&#xD;
							albums.get(currIndex + 4).getPhotos().size() + &quot; photos / Dates: xx-xx-xxxx - xx-xx-xxxx&quot;);&#xD;
				}&#xD;
&#xD;
			} else if (albums.size() - currIndex > 3) {&#xD;
&#xD;
				if (albums.get(currIndex).getPhotos().size() > 0&#xD;
						&amp;&amp; albums.get(currIndex).getPhotos().get(0).getLocation() != null) {&#xD;
&#xD;
					imageView00.setImage(new Image(albums.get(currIndex).getPhotos().get(0).getLocation()));&#xD;
				}&#xD;
				albumName00.setText(albums.get(currIndex).getAlbumName());&#xD;
				if (albums.get(currIndex).getPhotos().size() > 0) {&#xD;
					caption00.setText(albums.get(currIndex).getPhotos().size() + &quot; Photo: \nDate: &quot;&#xD;
							+ albums.get(currIndex).getPhotos().get(0).getDate() + &quot; - &quot;&#xD;
							+ albums.get(currIndex).getPhotos().get(albums.get(currIndex).getPhotos().size() - 1)&#xD;
									.getDate().toString());&#xD;
				} else {&#xD;
&#xD;
					caption00.setText(&#xD;
							albums.get(currIndex).getPhotos().size() + &quot; photos / Dates: xx-xx-xxxx - xx-xx-xxxx&quot;);&#xD;
				}&#xD;
&#xD;
				if (albums.get(currIndex + 1).getPhotos().size() > 0&#xD;
						&amp;&amp; albums.get(currIndex + 1).getPhotos().get(0).getLocation() != null) {&#xD;
&#xD;
					imageView10.setImage(new Image(albums.get(currIndex + 1).getPhotos().get(0).getLocation()));&#xD;
				}&#xD;
				albumName10.setText(albums.get(currIndex + 1).getAlbumName());&#xD;
				if (albums.get(currIndex + 1).getPhotos().size() > 0) {&#xD;
					caption10.setText(albums.get(currIndex + 1).getPhotos().size() + &quot; Photo: \nDate: &quot;&#xD;
							+ albums.get(currIndex + 1).getPhotos().get(0).getDate() + &quot; - &quot;&#xD;
							+ albums.get(currIndex + 1).getPhotos()&#xD;
									.get(albums.get(currIndex + 1).getPhotos().size() - 1).getDate().toString());&#xD;
				} else {&#xD;
&#xD;
					caption10.setText(&#xD;
							albums.get(currIndex + 1).getPhotos().size() + &quot; photos / Dates: xx-xx-xxxx - xx-xx-xxxx&quot;);&#xD;
				}&#xD;
&#xD;
				if (albums.get(currIndex + 2).getPhotos().size() > 0&#xD;
						&amp;&amp; albums.get(currIndex + 2).getPhotos().get(0).getLocation() != null) {&#xD;
&#xD;
					imageView01.setImage(new Image(albums.get(currIndex + 2).getPhotos().get(0).getLocation()));&#xD;
				}&#xD;
				albumName01.setText(albums.get(currIndex + 2).getAlbumName());&#xD;
				if (albums.get(currIndex + 2).getPhotos().size() > 0) {&#xD;
					caption01.setText(albums.get(currIndex + 2).getPhotos().size() + &quot; Photo: \nDate: &quot;&#xD;
							+ albums.get(currIndex + 2).getPhotos().get(0).getDate() + &quot; - &quot;&#xD;
							+ albums.get(currIndex + 2).getPhotos()&#xD;
									.get(albums.get(currIndex + 2).getPhotos().size() - 1).getDate().toString());&#xD;
				} else {&#xD;
&#xD;
					caption01.setText(&#xD;
							albums.get(currIndex + 2).getPhotos().size() + &quot; photos / Dates: xx-xx-xxxx - xx-xx-xxxx&quot;);&#xD;
				}&#xD;
&#xD;
				if (albums.get(currIndex + 3).getPhotos().size() > 0&#xD;
						&amp;&amp; albums.get(currIndex + 3).getPhotos().get(0).getLocation() != null) {&#xD;
&#xD;
					imageView11.setImage(new Image(albums.get(currIndex + 3).getPhotos().get(0).getLocation()));&#xD;
				}&#xD;
				albumName11.setText(albums.get(currIndex + 3).getAlbumName());&#xD;
				if (albums.get(currIndex + 3).getPhotos().size() > 0) {&#xD;
					caption11.setText(albums.get(currIndex + 3).getPhotos().size() + &quot; Photo: \nDate:&quot;&#xD;
							+ albums.get(currIndex + 3).getPhotos().get(0).getDate() + &quot; - &quot;&#xD;
							+ albums.get(currIndex + 3).getPhotos()&#xD;
									.get(albums.get(currIndex + 3).getPhotos().size() - 1).getDate().toString());&#xD;
				} else {&#xD;
&#xD;
					caption11.setText(&#xD;
							albums.get(currIndex + 3).getPhotos().size() + &quot; photos / Dates: xx-xx-xxxx - xx-xx-xxxx&quot;);&#xD;
				}&#xD;
&#xD;
			} else if (albums.size() - currIndex > 2) {&#xD;
&#xD;
				if (albums.get(currIndex).getPhotos().size() > 0&#xD;
						&amp;&amp; albums.get(currIndex).getPhotos().get(0).getLocation() != null) {&#xD;
&#xD;
					imageView00.setImage(new Image(albums.get(currIndex).getPhotos().get(0).getLocation()));&#xD;
				}&#xD;
				albumName00.setText(albums.get(currIndex).getAlbumName());&#xD;
				if (albums.get(currIndex).getPhotos().size() > 0) {&#xD;
					caption00.setText(albums.get(currIndex).getPhotos().size() + &quot; Photo: \nDate: &quot;&#xD;
							+ albums.get(currIndex).getPhotos().get(0).getDate() + &quot; - &quot;&#xD;
							+ albums.get(currIndex).getPhotos().get(albums.get(currIndex).getPhotos().size() - 1)&#xD;
									.getDate().toString());&#xD;
				} else {&#xD;
&#xD;
					caption00.setText(&#xD;
							albums.get(currIndex).getPhotos().size() + &quot; photos / Dates: xx-xx-xxxx - xx-xx-xxxx&quot;);&#xD;
				}&#xD;
&#xD;
				if (albums.get(currIndex + 1).getPhotos().size() > 0&#xD;
						&amp;&amp; albums.get(currIndex + 1).getPhotos().get(0).getLocation() != null) {&#xD;
&#xD;
					imageView10.setImage(new Image(albums.get(currIndex + 1).getPhotos().get(0).getLocation()));&#xD;
				}&#xD;
				albumName10.setText(albums.get(currIndex + 1).getAlbumName());&#xD;
				if (albums.get(currIndex + 1).getPhotos().size() > 0) {&#xD;
					caption10.setText(albums.get(currIndex + 1).getPhotos().size() + &quot; Photo: \nDate: &quot;&#xD;
							+ albums.get(currIndex + 1).getPhotos().get(0).getDate() + &quot; - &quot;&#xD;
							+ albums.get(currIndex + 1).getPhotos()&#xD;
									.get(albums.get(currIndex + 1).getPhotos().size() - 1).getDate().toString());&#xD;
				} else {&#xD;
&#xD;
					caption10.setText(&#xD;
							albums.get(currIndex + 1).getPhotos().size() + &quot; photos / Dates: xx-xx-xxxx - xx-xx-xxxx&quot;);&#xD;
				}&#xD;
&#xD;
				if (albums.get(currIndex + 2).getPhotos().size() > 0&#xD;
						&amp;&amp; albums.get(currIndex + 2).getPhotos().get(0).getLocation() != null) {&#xD;
&#xD;
					imageView01.setImage(new Image(albums.get(currIndex + 2).getPhotos().get(0).getLocation()));&#xD;
				}&#xD;
				albumName01.setText(albums.get(currIndex + 2).getAlbumName());&#xD;
				if (albums.get(currIndex + 2).getPhotos().size() > 0) {&#xD;
					caption01.setText(albums.get(currIndex + 2).getPhotos().size() + &quot; Photo: \nDate: &quot;&#xD;
							+ albums.get(currIndex + 2).getPhotos().get(0).getDate() + &quot; - &quot;&#xD;
							+ albums.get(currIndex + 2).getPhotos()&#xD;
									.get(albums.get(currIndex + 2).getPhotos().size() - 1).getDate().toString());&#xD;
				} else {&#xD;
&#xD;
					caption01.setText(&#xD;
							albums.get(currIndex + 2).getPhotos().size() + &quot; photos / Dates: xx-xx-xxxx - xx-xx-xxxx&quot;);&#xD;
				}&#xD;
&#xD;
			} else if (albums.size() - currIndex > 1) {&#xD;
&#xD;
				if (albums.get(currIndex).getPhotos().size() > 0&#xD;
						&amp;&amp; albums.get(currIndex).getPhotos().get(0).getLocation() != null) {&#xD;
&#xD;
					imageView00.setImage(new Image(albums.get(currIndex).getPhotos().get(0).getLocation()));&#xD;
				}&#xD;
				albumName00.setText(albums.get(currIndex).getAlbumName());&#xD;
				if (albums.get(currIndex).getPhotos().size() > 0) {&#xD;
					caption00.setText(albums.get(currIndex).getPhotos().size() + &quot; Photo: \nDate: &quot;&#xD;
							+ albums.get(currIndex).getPhotos().get(0).getDate() + &quot; - &quot;&#xD;
							+ albums.get(currIndex).getPhotos().get(albums.get(currIndex).getPhotos().size() - 1)&#xD;
									.getDate().toString());&#xD;
				} else {&#xD;
&#xD;
					caption00.setText(&#xD;
							albums.get(currIndex).getPhotos().size() + &quot; photos / Dates: xx-xx-xxxx - xx-xx-xxxx&quot;);&#xD;
				}&#xD;
&#xD;
				if (albums.get(currIndex + 1).getPhotos().size() > 0&#xD;
						&amp;&amp; albums.get(currIndex + 1).getPhotos().get(0).getLocation() != null) {&#xD;
&#xD;
					imageView10.setImage(new Image(albums.get(currIndex + 1).getPhotos().get(0).getLocation()));&#xD;
				}&#xD;
				albumName10.setText(albums.get(currIndex + 1).getAlbumName());&#xD;
				if (albums.get(currIndex + 1).getPhotos().size() > 0) {&#xD;
					caption10.setText(albums.get(currIndex + 1).getPhotos().size() + &quot; Photo: \nDate: &quot;&#xD;
							+ albums.get(currIndex + 1).getPhotos().get(0).getDate() + &quot; - &quot;&#xD;
							+ albums.get(currIndex + 1).getPhotos()&#xD;
									.get(albums.get(currIndex + 1).getPhotos().size() - 1).getDate().toString());&#xD;
				} else {&#xD;
&#xD;
					caption10.setText(&#xD;
							albums.get(currIndex + 1).getPhotos().size() + &quot; photos / Dates: xx-xx-xxxx - xx-xx-xxxx&quot;);&#xD;
				}&#xD;
&#xD;
			} else if (albums.size() - currIndex > 0) {&#xD;
&#xD;
				if (albums.get(currIndex).getPhotos().size() > 0&#xD;
						&amp;&amp; albums.get(currIndex).getPhotos().get(0).getLocation() != null) {&#xD;
&#xD;
					imageView00.setImage(new Image(albums.get(currIndex).getPhotos().get(0).getLocation()));&#xD;
				}&#xD;
				albumName00.setText(albums.get(currIndex).getAlbumName());&#xD;
				if (albums.get(currIndex).getPhotos().size() > 0) {&#xD;
					caption00.setText(albums.get(currIndex).getPhotos().size() + &quot; Photo: \nDate: &quot;&#xD;
							+ albums.get(currIndex).getPhotos().get(0).getDate() + &quot; - &quot;&#xD;
							+ albums.get(currIndex).getPhotos().get(albums.get(currIndex).getPhotos().size() - 1)&#xD;
									.getDate().toString());&#xD;
				} else {&#xD;
&#xD;
					caption00.setText(&#xD;
							albums.get(currIndex).getPhotos().size() + &quot; photos / Dates: xx-xx-xxxx - xx-xx-xxxx&quot;);&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECoKZbuTEeyOg8wFipIJcg" name="nextIndex" specification="_D69cIruTEeyOg8wFipIJcg">
          <language>java</language>
          <body>if (albums.size() - currIndex > 5) {&#xD;
			currIndex += 6;&#xD;
		}&#xD;
		refresh();&#xD;
		insertImages();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECoKZruTEeyOg8wFipIJcg" name="prevIndex" specification="_D6-DMLuTEeyOg8wFipIJcg">
          <language>java</language>
          <body>if (currIndex - 6 >= 0) {&#xD;
			currIndex -= 6;&#xD;
		}&#xD;
		refresh();&#xD;
		insertImages();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECoKZ7uTEeyOg8wFipIJcg" name="refresh" specification="_D6-DMbuTEeyOg8wFipIJcg">
          <language>java</language>
          <body>imageView00.setImage(null);&#xD;
		imageView10.setImage(null);&#xD;
		imageView01.setImage(null);&#xD;
		imageView11.setImage(null);&#xD;
		imageView02.setImage(null);&#xD;
		imageView12.setImage(null);&#xD;
		;&#xD;
		albumName00.setText(&quot;&quot;);&#xD;
		albumName10.setText(&quot;&quot;);&#xD;
		albumName01.setText(&quot;&quot;);&#xD;
		albumName11.setText(&quot;&quot;);&#xD;
		albumName02.setText(&quot;&quot;);&#xD;
		albumName12.setText(&quot;&quot;);&#xD;
		caption00.setText(&quot;&quot;);&#xD;
		caption10.setText(&quot;&quot;);&#xD;
		caption01.setText(&quot;&quot;);&#xD;
		caption11.setText(&quot;&quot;);&#xD;
		caption02.setText(&quot;&quot;);&#xD;
		caption12.setText(&quot;&quot;);&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECoxcLuTEeyOg8wFipIJcg" name="addAlbum" specification="_EAs3w7uTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECoxcbuTEeyOg8wFipIJcg" name="event" type="_D_aeULuTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>Alert alert = new Alert(AlertType.CONFIRMATION);&#xD;
		alert.setTitle(&quot;Add Album&quot;);&#xD;
		alert.setHeaderText(&quot;Creating an Album&quot;);&#xD;
		alert.setResizable(true);&#xD;
		Label label1 = new Label(&quot;Album Name: &quot;);&#xD;
&#xD;
		TextField text1 = new TextField();&#xD;
&#xD;
		GridPane grid = new GridPane();&#xD;
		grid.add(label1, 1, 1);&#xD;
		grid.add(text1, 2, 1);&#xD;
		alert.getDialogPane().setContent(grid);&#xD;
&#xD;
		Optional&lt;ButtonType> x = alert.showAndWait();&#xD;
&#xD;
		if (x.get() == ButtonType.OK) {&#xD;
			if (text1.getText().isEmpty()) {&#xD;
				Alert alert2 = new Alert(AlertType.ERROR);&#xD;
				alert2.setTitle(&quot;You must enter an Album name&quot;);&#xD;
				Optional&lt;ButtonType> z = alert2.showAndWait();&#xD;
				if (z.get() == ButtonType.OK) {&#xD;
					alert2.close();&#xD;
				}&#xD;
			} else {&#xD;
				Album album = new Album();&#xD;
				album.setAlbumName(text1.getText());&#xD;
				albums.add(album);&#xD;
				// *****user.deletealum*****&#xD;
				alert.close();&#xD;
&#xD;
			}&#xD;
		}&#xD;
		try {&#xD;
			SerializableSave.save(users);&#xD;
		} catch (IOException e) {&#xD;
			// TODO Auto-generated catch block&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		insertImages();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECoxcruTEeyOg8wFipIJcg" name="deleteAlbum" specification="_EAte1LuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECoxc7uTEeyOg8wFipIJcg" name="event" type="_D_aeULuTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>Alert alert = new Alert(AlertType.CONFIRMATION);&#xD;
		int indexToRemove = -1;&#xD;
&#xD;
		if (pane00.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
			indexToRemove = currIndex;&#xD;
		} else if (pane10.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
			indexToRemove = currIndex + 1;&#xD;
		} else if (pane01.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
			indexToRemove = currIndex + 2;&#xD;
		} else if (pane11.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
			indexToRemove = currIndex + 3;&#xD;
		} else if (pane02.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
			indexToRemove = currIndex + 4;&#xD;
		} else if (pane12.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
			indexToRemove = currIndex + 5;&#xD;
		} else {&#xD;
			Alert alert2 = new Alert(AlertType.ERROR);&#xD;
			alert2.setTitle(&quot;You must specify an album.&quot;);&#xD;
			Optional&lt;ButtonType> z = alert2.showAndWait();&#xD;
			if (z.get() == ButtonType.OK) {&#xD;
				alert2.close();&#xD;
			}&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		alert.setTitle(&quot;Album Deletion&quot;);&#xD;
		alert.setHeaderText(&quot;Are you sure you want to delete the album?&quot;);&#xD;
		alert.setResizable(true);&#xD;
&#xD;
		Optional&lt;ButtonType> x = alert.showAndWait();&#xD;
&#xD;
		if (x.get() == ButtonType.OK) {&#xD;
&#xD;
			albums.remove(indexToRemove);&#xD;
		} else {&#xD;
&#xD;
			alert.close();&#xD;
		}&#xD;
&#xD;
		refresh();&#xD;
		insertImages();&#xD;
&#xD;
		try {&#xD;
			SerializableSave.save(users);&#xD;
		} catch (IOException e) {&#xD;
			// TODO Auto-generated catch block&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECoxdLuTEeyOg8wFipIJcg" name="renameAlbum" specification="_EAuF5LuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECoxdbuTEeyOg8wFipIJcg" name="evt" type="_D_aeULuTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>int indexToRename = -1;&#xD;
&#xD;
		if (pane00.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
			indexToRename = currIndex;&#xD;
		} else if (pane10.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
			indexToRename = currIndex + 1;&#xD;
		} else if (pane01.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
			indexToRename = currIndex + 2;&#xD;
		} else if (pane11.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
			indexToRename = currIndex + 3;&#xD;
		} else if (pane02.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
			indexToRename = currIndex + 4;&#xD;
		} else if (pane12.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
			indexToRename = currIndex + 5;&#xD;
		} else {&#xD;
			Alert alert2 = new Alert(AlertType.ERROR);&#xD;
			alert2.setTitle(&quot;You must specify an album.&quot;);&#xD;
			Optional&lt;ButtonType> z = alert2.showAndWait();&#xD;
			if (z.get() == ButtonType.OK) {&#xD;
				alert2.close();&#xD;
			}&#xD;
		}&#xD;
&#xD;
		Alert alert = new Alert(AlertType.CONFIRMATION);&#xD;
		alert.setTitle(&quot;Rename Album&quot;);&#xD;
		alert.setHeaderText(&quot;New Album Name&quot;);&#xD;
		alert.setResizable(true);&#xD;
&#xD;
		Label label1 = new Label(&quot;New Album Name: &quot;);&#xD;
		TextField text1 = new TextField();&#xD;
&#xD;
		GridPane grid = new GridPane();&#xD;
		grid.add(label1, 1, 1);&#xD;
		grid.add(text1, 2, 1);&#xD;
		alert.getDialogPane().setContent(grid);&#xD;
&#xD;
		Optional&lt;ButtonType> x = alert.showAndWait();&#xD;
&#xD;
		if (x.get() == ButtonType.OK) {&#xD;
			if (text1.getText().isEmpty()) {&#xD;
				Alert alert2 = new Alert(AlertType.ERROR);&#xD;
				alert2.setTitle(&quot;You must enter an Album name&quot;);&#xD;
				Optional&lt;ButtonType> z = alert2.showAndWait();&#xD;
				if (z.get() == ButtonType.OK) {&#xD;
					alert2.close();&#xD;
				}&#xD;
			} else {&#xD;
				albums.get(indexToRename).setAlbumName(text1.getText());&#xD;
				alert.close();&#xD;
&#xD;
			}&#xD;
		}&#xD;
&#xD;
		refresh();&#xD;
		insertImages();&#xD;
&#xD;
		try {&#xD;
			SerializableSave.save(users);&#xD;
		} catch (IOException e) {&#xD;
			// TODO Auto-generated catch block&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECoxdruTEeyOg8wFipIJcg" name="search" specification="_D6-qQLuTEeyOg8wFipIJcg">
          <language>java</language>
          <body>FXMLLoader loader = new FXMLLoader();&#xD;
		loader.setLocation(getClass().getResource(&quot;/view/SearchScreen.fxml&quot;));&#xD;
		try {&#xD;
			AnchorPane root = (AnchorPane) loader.load();&#xD;
			PhotoSearchController searchview = loader.getController();&#xD;
			Stage stage = new Stage();&#xD;
			SerializableSave.save(users);&#xD;
&#xD;
			searchview.start(stage, userIndex);&#xD;
			Scene scene = new Scene(root);&#xD;
			stage.setScene(scene);&#xD;
			stage.show();&#xD;
&#xD;
		} catch (IOException exception) {&#xD;
			exception.printStackTrace();&#xD;
		}&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECoxd7uTEeyOg8wFipIJcg" name="logout" specification="_EAus9LuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECoxeLuTEeyOg8wFipIJcg" name="e" type="_D_aeULuTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>Alert alert = new Alert(Alert.AlertType.CONFIRMATION);&#xD;
		alert.setTitle(&quot;Logout&quot;);&#xD;
		alert.setHeaderText(&quot;Are you sure you want to logout?&quot;);&#xD;
&#xD;
		Optional&lt;ButtonType> x = alert.showAndWait();&#xD;
&#xD;
		if (x.get() == ButtonType.OK) {&#xD;
&#xD;
			firstS.close();&#xD;
			FXMLLoader loader = new FXMLLoader();&#xD;
			loader.setLocation(getClass().getResource(&quot;/view/LoginScreen.fxml&quot;));&#xD;
			try {&#xD;
				AnchorPane root = (AnchorPane) loader.load();&#xD;
				LoginController loginview = loader.getController();&#xD;
				Stage stage = new Stage();&#xD;
				SerializableSave.save(users);&#xD;
				loginview.start(stage);&#xD;
				Scene scene = new Scene(root);&#xD;
				stage.setScene(scene);&#xD;
				stage.show();&#xD;
&#xD;
			} catch (IOException exception) {&#xD;
				exception.printStackTrace();&#xD;
			}&#xD;
&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_D69cILuTEeyOg8wFipIJcg" name="changeScreen" method="_ECoKY7uTEeyOg8wFipIJcg">
          <ownedComment xmi:id="_ECzwkbuTEeyOg8wFipIJcg">
            <body>exists and returns to previous screen</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_D69cIbuTEeyOg8wFipIJcg" name="insertImages" method="_ECoKZLuTEeyOg8wFipIJcg">
          <ownedComment xmi:id="_ECzwkruTEeyOg8wFipIJcg">
            <body>Responsible for populating the images and setting up the names and captions&#xD;
	 * of the albums</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_D69cIruTEeyOg8wFipIJcg" name="nextIndex" method="_ECoKZbuTEeyOg8wFipIJcg">
          <ownedComment xmi:id="_ECzwk7uTEeyOg8wFipIJcg">
            <body>Moves to the next page of albums</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_D6-DMLuTEeyOg8wFipIJcg" name="prevIndex" method="_ECoKZruTEeyOg8wFipIJcg">
          <ownedComment xmi:id="_ECzwlLuTEeyOg8wFipIJcg">
            <body>Returns to the previous page of albums</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_D6-DMbuTEeyOg8wFipIJcg" name="refresh" method="_ECoKZ7uTEeyOg8wFipIJcg">
          <ownedComment xmi:id="_ECzwlbuTEeyOg8wFipIJcg">
            <body>Resets the screen to an empty boxes and text boxes for new inputs</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_D6-qQLuTEeyOg8wFipIJcg" name="search" method="_ECoxdruTEeyOg8wFipIJcg">
          <ownedComment xmi:id="_ECzwlruTEeyOg8wFipIJcg">
            <body>Goes to the search location and loads a new Stage</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_EAs3wLuTEeyOg8wFipIJcg" name="start" method="_ECoKYLuTEeyOg8wFipIJcg" raisedException="_EAgDcLuTEeyOg8wFipIJcg">
          <ownedComment xmi:id="_ECzwkLuTEeyOg8wFipIJcg">
            <body>start method for album controller... gets the previosuly saved files&#xD;
	 * &#xD;
	 * Also sets borders around the chosen grid pane&#xD;
	 * &#xD;
	 * @param firstS&#xD;
	 * @param userIndex&#xD;
	 * @throws Exception</body>
          </ownedComment>
          <ownedParameter xmi:id="_EAs3wbuTEeyOg8wFipIJcg" name="firstS" type="_D_UXsLuTEeyOg8wFipIJcg"/>
          <ownedParameter xmi:id="_EAs3wruTEeyOg8wFipIJcg" name="userIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_EAs3w7uTEeyOg8wFipIJcg" name="addAlbum" visibility="private" method="_ECoxcLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EAte0LuTEeyOg8wFipIJcg" name="event" type="_D_aeULuTEeyOg8wFipIJcg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EAte1LuTEeyOg8wFipIJcg" name="deleteAlbum" visibility="private" method="_ECoxcruTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EAuF4LuTEeyOg8wFipIJcg" name="event" type="_D_aeULuTEeyOg8wFipIJcg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EAuF5LuTEeyOg8wFipIJcg" name="renameAlbum" visibility="private" method="_ECoxdLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EAus8LuTEeyOg8wFipIJcg" name="evt" type="_D_aeULuTEeyOg8wFipIJcg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EAus9LuTEeyOg8wFipIJcg" name="logout" method="_ECoxd7uTEeyOg8wFipIJcg">
          <ownedComment xmi:id="_ECzwl7uTEeyOg8wFipIJcg">
            <body>Logs the user out back to the main screen for entering a username&#xD;
	 * &#xD;
	 * @param e the event that invoked the method</body>
          </ownedComment>
          <ownedParameter xmi:id="_EAus9buTEeyOg8wFipIJcg" name="e" type="_D_aeULuTEeyOg8wFipIJcg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_D7MssLuTEeyOg8wFipIJcg" name="LoginController">
        <ownedAttribute xmi:id="_EB2HQLuTEeyOg8wFipIJcg" name="loginButton" visibility="package" type="_D_wckbuTEeyOg8wFipIJcg" association="_EDQcgbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EB2HRLuTEeyOg8wFipIJcg" name="newUserButton" visibility="package" type="_D_wckbuTEeyOg8wFipIJcg" association="_EDQchLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EB2uU7uTEeyOg8wFipIJcg" name="usernameField" visibility="package" type="_D_xqsruTEeyOg8wFipIJcg" association="_EDRDkbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EB2uV7uTEeyOg8wFipIJcg" name="passwordField" visibility="package" type="_D_xqsLuTEeyOg8wFipIJcg" association="_EDRDlLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EB3VY7uTEeyOg8wFipIJcg" name="exit" visibility="package" type="_D_wckbuTEeyOg8wFipIJcg" association="_EDRqoLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EB38cruTEeyOg8wFipIJcg" name="firstS" visibility="package" type="_D_UXsLuTEeyOg8wFipIJcg" association="_EDRqo7uTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EB38dLuTEeyOg8wFipIJcg" name="users" visibility="package" type="_D_dhoruTEeyOg8wFipIJcg" association="_EDRqpruTEeyOg8wFipIJcg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EB4jgLuTEeyOg8wFipIJcg" value="new ArrayList&lt;User>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_EB4jgruTEeyOg8wFipIJcg" name="stockExists" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EB4jg7uTEeyOg8wFipIJcg" value="false"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_EAy-YLuTEeyOg8wFipIJcg" client="_D7MssLuTEeyOg8wFipIJcg" supplier="_D_dhoLuTEeyOg8wFipIJcg" contract="_D_dhoLuTEeyOg8wFipIJcg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECpYgLuTEeyOg8wFipIJcg" name="exit" specification="_D7Oh4LuTEeyOg8wFipIJcg">
          <language>java</language>
          <body>System.exit(0);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECp_kLuTEeyOg8wFipIJcg" name="start" specification="_EA0MgLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECp_kbuTEeyOg8wFipIJcg" name="firstS" type="_D_UXsLuTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>// gets saved data and the stock files&#xD;
		try {&#xD;
			users = SerializableSave.read();&#xD;
		} catch (ClassNotFoundException e1) {&#xD;
			// TODO Auto-generated catch block&#xD;
			e1.printStackTrace();&#xD;
		} catch (IOException e1) {&#xD;
			// TODO Auto-generated catch block&#xD;
			e1.printStackTrace();&#xD;
		}&#xD;
&#xD;
		// closed&#xD;
		firstS.setOnCloseRequest(event -> {&#xD;
&#xD;
			try {&#xD;
				SerializableSave.save(users);&#xD;
			} catch (IOException e) {&#xD;
				// TODO Auto-generated catch block&#xD;
				e.printStackTrace();&#xD;
			}&#xD;
&#xD;
		});&#xD;
&#xD;
		for (int i = 0; i &lt; users.size(); i++) {&#xD;
			if (users.get(i).getUsername().equals(&quot;stock&quot;)) {&#xD;
				stockExists = true;&#xD;
			}&#xD;
		}&#xD;
		// if data doesn't exists need to create a stock file with 5 photos&#xD;
		if (!stockExists) {&#xD;
			createStockUser();&#xD;
		}&#xD;
		this.firstS = firstS;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECp_kruTEeyOg8wFipIJcg" name="login" specification="_EA1aoLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECp_k7uTEeyOg8wFipIJcg" name="e" type="_D_aeULuTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>// Put the username and password into a String to compare&#xD;
		String username = usernameField.getText();&#xD;
&#xD;
//		Parent parent;&#xD;
		// userlist = SerializableObjects.read();&#xD;
&#xD;
//		if (username.length() == 0) {&#xD;
//&#xD;
//			// Throw an alert, prompting the user to input a username&#xD;
//			Alert usernameAlert = new Alert(AlertType.ERROR);&#xD;
//			usernameAlert.setTitle(&quot;Textbox was empty&quot;);&#xD;
//			usernameAlert.setContentText(&quot;Enter a valid USERNAME.&quot;);&#xD;
//&#xD;
//			// Show the optional OK button to push to close the alert&#xD;
//			Optional&lt;ButtonType> z = usernameAlert.showAndWait();&#xD;
//&#xD;
//			if (z.get() == ButtonType.OK) {&#xD;
//&#xD;
//				usernameAlert.close();&#xD;
//			}&#xD;
//		}&#xD;
&#xD;
		/**&#xD;
		 * gives alert if user input was null or size = 0&#xD;
		 */&#xD;
		if (users == null || users.size() == 0) {&#xD;
&#xD;
			// Throw an alert, prompting the user to input a username&#xD;
			Alert usernameAlert = new Alert(AlertType.ERROR);&#xD;
			usernameAlert.setTitle(&quot;Login Error.&quot;);&#xD;
			usernameAlert.setContentText(&quot;Enter a valid USERNAME.&quot;);&#xD;
&#xD;
			// Show the optional OK button to push to close the alert&#xD;
			Optional&lt;ButtonType> result = usernameAlert.showAndWait();&#xD;
&#xD;
			if (result.get() == ButtonType.OK) {&#xD;
&#xD;
				usernameAlert.close();&#xD;
			}&#xD;
		}&#xD;
		/**&#xD;
		 * if input = admin then loads admin screen&#xD;
		 */&#xD;
		if (username.equals(&quot;admin&quot;)) {&#xD;
&#xD;
			FXMLLoader loader = new FXMLLoader();&#xD;
			loader.setLocation(getClass().getResource(&quot;/view/AdminScreen.fxml&quot;));&#xD;
			try {&#xD;
				firstS.close();&#xD;
				AnchorPane root = (AnchorPane) loader.load();&#xD;
				AdminController adminview = loader.getController();&#xD;
				Stage stage = new Stage();&#xD;
&#xD;
				SerializableSave.save(users);&#xD;
				adminview.start(stage);&#xD;
				Scene scene = new Scene(root);&#xD;
				stage.setScene(scene);&#xD;
				stage.show();&#xD;
&#xD;
			} catch (IOException exception) {&#xD;
				exception.printStackTrace();&#xD;
			}&#xD;
&#xD;
		}&#xD;
&#xD;
		for (int i = 0; i &lt; users.size(); i++) {&#xD;
			if (users.get(i).authenticate(username)) {&#xD;
				if (username.equals(&quot;admin&quot;)) {&#xD;
					firstS.close();&#xD;
					FXMLLoader loader = new FXMLLoader();&#xD;
					loader.setLocation(getClass().getResource(&quot;/view/AdminScreen.fxml&quot;));&#xD;
					try {&#xD;
						AnchorPane root = (AnchorPane) loader.load();&#xD;
						AdminController adminview = loader.getController();&#xD;
						Stage stage = new Stage();&#xD;
						SerializableSave.save(users);&#xD;
&#xD;
						adminview.start(stage);&#xD;
						Scene scene = new Scene(root, 800, 600);&#xD;
						stage.setScene(scene);&#xD;
						stage.show();&#xD;
&#xD;
					} catch (IOException exception) {&#xD;
						exception.printStackTrace();&#xD;
					}&#xD;
&#xD;
				}&#xD;
				/**&#xD;
				 * after all the checks... logs into a username that was specified and opens the&#xD;
				 * ALbums screen&#xD;
				 */&#xD;
				else {&#xD;
&#xD;
					firstS.close();&#xD;
					FXMLLoader loader = new FXMLLoader();&#xD;
					loader.setLocation(getClass().getResource(&quot;/view/AlbumsScreen.fxml&quot;));&#xD;
					try {&#xD;
						AnchorPane root = (AnchorPane) loader.load();&#xD;
						AlbumController albumview = loader.getController();&#xD;
						Stage stage = new Stage();&#xD;
						SerializableSave.save(users);&#xD;
&#xD;
						albumview.start(stage, i);&#xD;
						Scene scene = new Scene(root, 800, 600);&#xD;
						stage.setScene(scene);&#xD;
						stage.show();&#xD;
&#xD;
					} catch (IOException exception) {&#xD;
						exception.printStackTrace();&#xD;
					}&#xD;
&#xD;
				}&#xD;
&#xD;
			} else {&#xD;
&#xD;
			}&#xD;
&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECp_lLuTEeyOg8wFipIJcg" name="createStockUser" specification="_D7QXEruTEeyOg8wFipIJcg">
          <language>java</language>
          <body>User user = new User(&quot;stock&quot;);&#xD;
&#xD;
		Album stockAlbum = new Album();&#xD;
		stockAlbum.setAlbumName(&quot;Stock Photos&quot;);&#xD;
&#xD;
		Photo corvette = new Photo();&#xD;
		corvette.setPhoto(new Image(&quot;car1.jpg&quot;));&#xD;
		corvette.setLocation(&quot;car1.jpg&quot;);&#xD;
		corvette.setPhotoName(&quot;Corvette&quot;);&#xD;
		corvette.setCaption(&quot;Shiv's Favorite Car&quot;);&#xD;
		ArrayList&lt;Tag> corvetteTags = new ArrayList&lt;Tag>();&#xD;
		corvetteTags.add(new Tag(&quot;corvette&quot;, &quot;sexy&quot;));&#xD;
		corvetteTags.add(new Tag(&quot;corvette&quot;, &quot;beautiful&quot;));&#xD;
		corvette.setTags(corvetteTags);&#xD;
		stockAlbum.addPhoto(corvette);&#xD;
&#xD;
		Photo p1 = new Photo();&#xD;
		p1.setPhoto(new Image(&quot;p1.jpg&quot;));&#xD;
		p1.setLocation(&quot;p1.jpg&quot;);&#xD;
		p1.setPhotoName(&quot;McLaren P1&quot;);&#xD;
		p1.setCaption(&quot;Manav's Favorite Car&quot;);&#xD;
		ArrayList&lt;Tag> p1Tags = new ArrayList&lt;Tag>();&#xD;
		p1Tags.add(new Tag(&quot;McLaren P1&quot;, &quot;sexy&quot;));&#xD;
		p1Tags.add(new Tag(&quot;McLaren P1&quot;, &quot;beautiful&quot;));&#xD;
		p1.setTags(p1Tags);&#xD;
		stockAlbum.addPhoto(p1);&#xD;
&#xD;
		Photo lotus = new Photo();&#xD;
		lotus.setPhoto(new Image(&quot;lotus.jpg&quot;));&#xD;
		lotus.setLocation(&quot;lotus.jpg&quot;);&#xD;
		lotus.setPhotoName(&quot;Lotus Evora&quot;);&#xD;
		lotus.setCaption(&quot;Manan's Favorite Car.&quot;);&#xD;
		ArrayList&lt;Tag> lotusTags = new ArrayList&lt;Tag>();&#xD;
		lotusTags.add(new Tag(&quot;Lotus&quot;, &quot;sexy&quot;));&#xD;
		lotusTags.add(new Tag(&quot;Lotus&quot;, &quot;beautiful&quot;));&#xD;
		lotus.setTags(lotusTags);&#xD;
		stockAlbum.addPhoto(lotus);&#xD;
&#xD;
		Photo lamborghini = new Photo();&#xD;
		lamborghini.setPhoto(new Image(&quot;lamboghini.jpg&quot;));&#xD;
		lamborghini.setLocation(&quot;lamboghini.jpg&quot;);&#xD;
		lamborghini.setPhotoName(&quot;Lamborghini&quot;);&#xD;
		lamborghini.setCaption(&quot;Deep's Favorite Car.&quot;);&#xD;
		stockAlbum.addPhoto(lamborghini);&#xD;
&#xD;
		Photo r8 = new Photo();&#xD;
		r8.setPhoto(new Image(&quot;r8.jpg&quot;));&#xD;
		r8.setLocation(&quot;r8.jpg&quot;);&#xD;
		r8.setPhotoName(&quot;Audi r8&quot;);&#xD;
		r8.setCaption(&quot;Dev's Favorite Car&quot;);&#xD;
		stockAlbum.addPhoto(r8);&#xD;
&#xD;
		user.addAlbum(stockAlbum);&#xD;
&#xD;
		users.add(user);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_D7Oh4LuTEeyOg8wFipIJcg" name="exit" visibility="package" method="_ECpYgLuTEeyOg8wFipIJcg"/>
        <ownedOperation xmi:id="_D7QXEruTEeyOg8wFipIJcg" name="createStockUser" method="_ECp_lLuTEeyOg8wFipIJcg"/>
        <ownedOperation xmi:id="_EA0MgLuTEeyOg8wFipIJcg" name="start" method="_ECp_kLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EA0MgbuTEeyOg8wFipIJcg" name="firstS" type="_D_UXsLuTEeyOg8wFipIJcg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EA1aoLuTEeyOg8wFipIJcg" name="login" method="_ECp_kruTEeyOg8wFipIJcg" raisedException="_EAgDcLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EA1aobuTEeyOg8wFipIJcg" name="e" type="_D_aeULuTEeyOg8wFipIJcg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_D7TaYLuTEeyOg8wFipIJcg" name="PhotoOpenController">
        <ownedComment xmi:id="_ECzwmLuTEeyOg8wFipIJcg">
          <body>The class Photo open controller implements serializable</body>
        </ownedComment>
        <ownedAttribute xmi:id="_EB5KkLuTEeyOg8wFipIJcg" name="nameLabel" visibility="private" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDSRsbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EB5KlLuTEeyOg8wFipIJcg" name="captionLabel" visibility="private" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDSRtLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EB5xo7uTEeyOg8wFipIJcg" name="dateLabel" visibility="private" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDS4wbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EB6YsbuTEeyOg8wFipIJcg" name="tagsListLabel" visibility="private" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDS4xLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EB6YtbuTEeyOg8wFipIJcg" name="imageView" visibility="private" type="_D_mEg7uTEeyOg8wFipIJcg" association="_EDTf0LuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EB6_wruTEeyOg8wFipIJcg" name="forwardButton" visibility="private" type="_D_wckbuTEeyOg8wFipIJcg" association="_EDTf07uTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EB6_xruTEeyOg8wFipIJcg" name="backwardButton" visibility="private" type="_D_wckbuTEeyOg8wFipIJcg" association="_EDTf1ruTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EB7m07uTEeyOg8wFipIJcg" name="album" visibility="package" type="_D72M8LuTEeyOg8wFipIJcg" association="_EDUG4buTEeyOg8wFipIJcg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EB7m1LuTEeyOg8wFipIJcg" value="null"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_EB7m1ruTEeyOg8wFipIJcg" name="currentPhotoIndex" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_EB8N4LuTEeyOg8wFipIJcg" value="0"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_EA3P0LuTEeyOg8wFipIJcg" client="_D7TaYLuTEeyOg8wFipIJcg" supplier="_D_dhoLuTEeyOg8wFipIJcg" contract="_D_dhoLuTEeyOg8wFipIJcg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECp_lbuTEeyOg8wFipIJcg" name="start" specification="_EA324LuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECp_lruTEeyOg8wFipIJcg" name="firstS" type="_D_UXsLuTEeyOg8wFipIJcg"/>
          <ownedParameter xmi:id="_ECp_l7uTEeyOg8wFipIJcg" name="album" type="_D72M8LuTEeyOg8wFipIJcg"/>
          <ownedParameter xmi:id="_ECp_mLuTEeyOg8wFipIJcg" name="currentPhotoIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.album = album;&#xD;
		this.currentPhotoIndex = currentPhotoIndex;&#xD;
		insertPhoto();&#xD;
&#xD;
		firstS.setOnCloseRequest(event -> {&#xD;
		});&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECqmoLuTEeyOg8wFipIJcg" name="insertPhoto" specification="_D7UogLuTEeyOg8wFipIJcg">
          <language>java</language>
          <body>nameLabel.setText(album.getPhotos().get(currentPhotoIndex).getPhotoName());&#xD;
		captionLabel.setText(album.getPhotos().get(currentPhotoIndex).getCaption());&#xD;
		dateLabel.setText(album.getPhotos().get(currentPhotoIndex).getDate().toString());&#xD;
		imageView.setImage(new Image(album.getPhotos().get(currentPhotoIndex).getLocation()));&#xD;
&#xD;
		if (album.getPhotos().get(currentPhotoIndex).getTags().size() == 0) {&#xD;
			tagsListLabel.setText(&quot;None&quot;);&#xD;
		} else {&#xD;
			String tags = &quot;&quot;;&#xD;
			for (int i = 0; i &lt; album.getPhotos().get(currentPhotoIndex).getTags().size(); i++) {&#xD;
				tags = tags.concat(album.getPhotos().get(currentPhotoIndex).getTags().get(i).getTag() + &quot;\n&quot;);&#xD;
			}&#xD;
			tagsListLabel.setText(tags);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECqmobuTEeyOg8wFipIJcg" name="nextPicture" specification="_EA4d87uTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECqmoruTEeyOg8wFipIJcg" name="e" type="_D_aeULuTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>if (currentPhotoIndex + 1 != album.getPhotos().size()) {&#xD;
			currentPhotoIndex++;&#xD;
			insertPhoto();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECqmo7uTEeyOg8wFipIJcg" name="prevPicture" specification="_EA5FALuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECqmpLuTEeyOg8wFipIJcg" name="e" type="_D_aeULuTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>if (currentPhotoIndex - 1 != -1) {&#xD;
			currentPhotoIndex--;&#xD;
			insertPhoto();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_D7UogLuTEeyOg8wFipIJcg" name="insertPhoto" method="_ECqmoLuTEeyOg8wFipIJcg">
          <ownedComment xmi:id="_EC0XobuTEeyOg8wFipIJcg">
            <body>*&#xD;
Insert photo with tags and captions&#xD;
 *</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_EA324LuTEeyOg8wFipIJcg" name="start" method="_ECp_lbuTEeyOg8wFipIJcg">
          <ownedComment xmi:id="_EC0XoLuTEeyOg8wFipIJcg">
            <body>*&#xD;
Start&#xD;
 *&#xD;
@param firstS  the primary stage&#xD;
@param album  the album&#xD;
@param currentPhotoIndex  the current photo index</body>
          </ownedComment>
          <ownedParameter xmi:id="_EA4d8LuTEeyOg8wFipIJcg" name="firstS" type="_D_UXsLuTEeyOg8wFipIJcg"/>
          <ownedParameter xmi:id="_EA4d8buTEeyOg8wFipIJcg" name="album" type="_D72M8LuTEeyOg8wFipIJcg"/>
          <ownedParameter xmi:id="_EA4d8ruTEeyOg8wFipIJcg" name="currentPhotoIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_EA4d87uTEeyOg8wFipIJcg" name="nextPicture" method="_ECqmobuTEeyOg8wFipIJcg">
          <ownedComment xmi:id="_EC0XoruTEeyOg8wFipIJcg">
            <body>*&#xD;
Next picture&#xD;
 *&#xD;
@param e</body>
          </ownedComment>
          <ownedParameter xmi:id="_EA4d9LuTEeyOg8wFipIJcg" name="e" type="_D_aeULuTEeyOg8wFipIJcg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EA5FALuTEeyOg8wFipIJcg" name="prevPicture" method="_ECqmo7uTEeyOg8wFipIJcg">
          <ownedComment xmi:id="_EC0Xo7uTEeyOg8wFipIJcg">
            <body>*&#xD;
Prev picture&#xD;
 *&#xD;
@param e</body>
          </ownedComment>
          <ownedParameter xmi:id="_EA5FAbuTEeyOg8wFipIJcg" name="e" type="_D_aeULuTEeyOg8wFipIJcg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_D7XEwLuTEeyOg8wFipIJcg" name="PhotoSearchController">
        <ownedAttribute xmi:id="_EB8N4ruTEeyOg8wFipIJcg" name="photoGrid" visibility="package" type="_D_bscLuTEeyOg8wFipIJcg" association="_EDUG5LuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EB8087uTEeyOg8wFipIJcg" name="pane00" visibility="package" type="_D_kPULuTEeyOg8wFipIJcg" association="_EDUt8buTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EB9cAruTEeyOg8wFipIJcg" name="pane10" visibility="package" type="_D_kPULuTEeyOg8wFipIJcg" association="_EDUt9LuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EB9cBruTEeyOg8wFipIJcg" name="pane01" visibility="package" type="_D_kPULuTEeyOg8wFipIJcg" association="_EDVVALuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EB-DE7uTEeyOg8wFipIJcg" name="pane11" visibility="package" type="_D_kPULuTEeyOg8wFipIJcg" association="_EDVVA7uTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EB-qILuTEeyOg8wFipIJcg" name="pane02" visibility="package" type="_D_kPULuTEeyOg8wFipIJcg" association="_EDVVBruTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EB-qJLuTEeyOg8wFipIJcg" name="pane12" visibility="package" type="_D_kPULuTEeyOg8wFipIJcg" association="_EDV8EbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EB_RMruTEeyOg8wFipIJcg" name="imageView00" visibility="package" type="_D_mEg7uTEeyOg8wFipIJcg" association="_EDV8FLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EB_RNruTEeyOg8wFipIJcg" name="imageView10" visibility="package" type="_D_mEg7uTEeyOg8wFipIJcg" association="_EDWjIbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_EB_4Q7uTEeyOg8wFipIJcg" name="imageView01" visibility="package" type="_D_mEg7uTEeyOg8wFipIJcg" association="_EDWjJLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECAfULuTEeyOg8wFipIJcg" name="imageView11" visibility="package" type="_D_mEg7uTEeyOg8wFipIJcg" association="_EDWjJ7uTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECAfVLuTEeyOg8wFipIJcg" name="imageView02" visibility="package" type="_D_mEg7uTEeyOg8wFipIJcg" association="_EDXKMbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECBGY7uTEeyOg8wFipIJcg" name="imageView12" visibility="package" type="_D_mEg7uTEeyOg8wFipIJcg" association="_EDXKNLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECBGZ7uTEeyOg8wFipIJcg" name="photoName00" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDXxQbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECBtc7uTEeyOg8wFipIJcg" name="photoName10" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDYYUbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECCUgLuTEeyOg8wFipIJcg" name="photoName01" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDY_YbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECCUhLuTEeyOg8wFipIJcg" name="photoName11" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDY_ZLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECC7k7uTEeyOg8wFipIJcg" name="photoName02" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDZmcbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECC7l7uTEeyOg8wFipIJcg" name="photoName12" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDZmdLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECDio7uTEeyOg8wFipIJcg" name="caption00" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDaNgbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECDip7uTEeyOg8wFipIJcg" name="caption10" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDaNhLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECEJs7uTEeyOg8wFipIJcg" name="caption01" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDaNh7uTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECEwwLuTEeyOg8wFipIJcg" name="caption11" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDa0kbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECEwxLuTEeyOg8wFipIJcg" name="caption02" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDa0lLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECFX0LuTEeyOg8wFipIJcg" name="caption12" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDbbobuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECFX1LuTEeyOg8wFipIJcg" name="usernameLabel" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDbbpLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECF-4ruTEeyOg8wFipIJcg" name="firstS" visibility="package" type="_D_UXsLuTEeyOg8wFipIJcg" association="_EDcCsbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECF-5LuTEeyOg8wFipIJcg" name="reslist" visibility="package" type="_D_dhoruTEeyOg8wFipIJcg" association="_EDcCtLuTEeyOg8wFipIJcg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_ECGl8buTEeyOg8wFipIJcg" value="new ArrayList&lt;Photo>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ECHNAbuTEeyOg8wFipIJcg" name="albums" visibility="package" type="_D_dhoruTEeyOg8wFipIJcg" association="_EDcpwbuTEeyOg8wFipIJcg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_ECH0EbuTEeyOg8wFipIJcg" value="new ArrayList&lt;Album>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ECIbILuTEeyOg8wFipIJcg" name="allPhotos" visibility="package" type="_D_dhoruTEeyOg8wFipIJcg" association="_EDcpxLuTEeyOg8wFipIJcg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_ECIbIruTEeyOg8wFipIJcg" value="new ArrayList&lt;Photo>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ECIbJLuTEeyOg8wFipIJcg" name="users" visibility="package" type="_D_dhoruTEeyOg8wFipIJcg" association="_EDdQ0LuTEeyOg8wFipIJcg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_ECJCMbuTEeyOg8wFipIJcg" value="new ArrayList&lt;User>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ECJCM7uTEeyOg8wFipIJcg" name="reslisti" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_ECJpQLuTEeyOg8wFipIJcg" value="0"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_EA6TILuTEeyOg8wFipIJcg" client="_D7XEwLuTEeyOg8wFipIJcg" supplier="_D_dhoLuTEeyOg8wFipIJcg" contract="_D_dhoLuTEeyOg8wFipIJcg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECrNsLuTEeyOg8wFipIJcg" name="start" specification="_EA99gLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECrNsbuTEeyOg8wFipIJcg" name="firstS" type="_D_UXsLuTEeyOg8wFipIJcg"/>
          <ownedParameter xmi:id="_ECrNsruTEeyOg8wFipIJcg" name="index">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.firstS = firstS;&#xD;
		try {&#xD;
			users = SerializableSave.read();&#xD;
		} catch (ClassNotFoundException e) {&#xD;
			e.printStackTrace();&#xD;
		} catch (IOException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		refresh();&#xD;
		this.albums = users.get(index).getAlbums();&#xD;
		pane00.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler&lt;MouseEvent>() {&#xD;
			@Override&#xD;
			public void handle(MouseEvent event) {&#xD;
				if (event.getClickCount() == 1) {&#xD;
					pane00.setBorder(new Border(new BorderStroke(Color.DARKCYAN, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(10))));&#xD;
&#xD;
					pane10.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane01.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane11.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane02.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane12.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
				} else if (event.getClickCount() == 2) {&#xD;
				}&#xD;
				event.consume();&#xD;
			}&#xD;
		});&#xD;
		pane10.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler&lt;MouseEvent>() {&#xD;
			@Override&#xD;
			public void handle(MouseEvent event) {&#xD;
				if (event.getClickCount() == 1) {&#xD;
					pane00.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane10.setBorder(new Border(new BorderStroke(Color.DARKCYAN, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(10))));&#xD;
&#xD;
					pane01.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane11.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane02.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane12.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
				} else if (event.getClickCount() == 2) {&#xD;
				}&#xD;
				event.consume();&#xD;
			}&#xD;
		});&#xD;
		pane01.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler&lt;MouseEvent>() {&#xD;
			@Override&#xD;
			public void handle(MouseEvent event) {&#xD;
				if (event.getClickCount() == 1) {&#xD;
&#xD;
					pane00.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane10.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane01.setBorder(new Border(new BorderStroke(Color.DARKCYAN, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(10))));&#xD;
&#xD;
					pane11.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane02.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane12.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
				} else if (event.getClickCount() == 2) {&#xD;
				}&#xD;
				event.consume();&#xD;
			}&#xD;
		});&#xD;
&#xD;
		pane11.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler&lt;MouseEvent>() {&#xD;
&#xD;
			@Override&#xD;
			public void handle(MouseEvent event) {&#xD;
				// this will highlight the album and give a border, so you know its selected&#xD;
				if (event.getClickCount() == 1) {&#xD;
&#xD;
					pane00.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane10.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane01.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane11.setBorder(new Border(new BorderStroke(Color.DARKCYAN, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(10))));&#xD;
&#xD;
					pane02.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane12.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
				} else if (event.getClickCount() == 2) {&#xD;
				}&#xD;
				event.consume();&#xD;
			}&#xD;
		});&#xD;
		pane02.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler&lt;MouseEvent>() {&#xD;
&#xD;
			@Override&#xD;
			public void handle(MouseEvent event) {&#xD;
&#xD;
				if (event.getClickCount() == 1) {&#xD;
&#xD;
					pane00.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane10.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane01.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane11.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane02.setBorder(new Border(new BorderStroke(Color.DARKCYAN, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(10))));&#xD;
&#xD;
					pane12.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
				} else if (event.getClickCount() == 2) {&#xD;
&#xD;
				}&#xD;
&#xD;
				event.consume();&#xD;
			}&#xD;
		});&#xD;
&#xD;
		pane12.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler&lt;MouseEvent>() {&#xD;
&#xD;
			@Override&#xD;
			public void handle(MouseEvent event) {&#xD;
&#xD;
				if (event.getClickCount() == 1) {&#xD;
&#xD;
					pane00.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane10.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane01.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane11.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane02.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane12.setBorder(new Border(new BorderStroke(Color.DARKCYAN, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(10))));&#xD;
				} else if (event.getClickCount() == 2) {&#xD;
				}&#xD;
				event.consume();&#xD;
			}&#xD;
		});&#xD;
		firstS.setOnCloseRequest(event -> {&#xD;
&#xD;
			try {&#xD;
				SerializableSave.save(users);&#xD;
			} catch (IOException e) {&#xD;
				e.printStackTrace();&#xD;
			}&#xD;
&#xD;
		});&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECrNs7uTEeyOg8wFipIJcg" name="searchByTag" specification="_D7ZhALuTEeyOg8wFipIJcg">
          <language>java</language>
          <body>String tagName = &quot;&quot;;&#xD;
		String tagValue = &quot;&quot;;&#xD;
&#xD;
		allPhotos();&#xD;
&#xD;
		Alert alert = new Alert(AlertType.CONFIRMATION);&#xD;
		alert.setTitle(&quot;Search By Tag&quot;);&#xD;
		alert.setHeaderText(&quot;Search By Tag&quot;);&#xD;
		alert.setResizable(true);&#xD;
		Label label1 = new Label(&quot;Tag Name: &quot;);&#xD;
		Label label2 = new Label(&quot;Tag Value: &quot;);&#xD;
&#xD;
		TextField tf1 = new TextField();&#xD;
		TextField tf2 = new TextField();&#xD;
&#xD;
		GridPane grid = new GridPane();&#xD;
		grid.add(label1, 1, 1);&#xD;
		grid.add(tf1, 2, 1);&#xD;
		grid.add(label2, 1, 2);&#xD;
		grid.add(tf2, 2, 2);&#xD;
		alert.getDialogPane().setContent(grid);&#xD;
&#xD;
		Optional&lt;ButtonType> result = alert.showAndWait();&#xD;
&#xD;
		if (result.get() == ButtonType.OK) {&#xD;
			if (tf1.getText().isEmpty()) {&#xD;
				Alert alert2 = new Alert(AlertType.ERROR);&#xD;
				alert2.setTitle(&quot;Empty&quot;);&#xD;
				alert2.setContentText(&quot;Enter a valid name&quot;);&#xD;
				Optional&lt;ButtonType> result2 = alert2.showAndWait();&#xD;
				if (result2.get() == ButtonType.OK) {&#xD;
					alert2.close();&#xD;
				}&#xD;
			} else {&#xD;
				tagName = tf1.getText();&#xD;
				tagValue = tf2.getText();&#xD;
				alert.close();&#xD;
			}&#xD;
		}&#xD;
&#xD;
		reslist = new ArrayList&lt;Photo>();&#xD;
&#xD;
		if (albums.size() == 0) {&#xD;
&#xD;
		} else {&#xD;
&#xD;
			for (int i = 0; i &lt; allPhotos.size(); i++) {&#xD;
&#xD;
				for (int j = 0; j &lt; allPhotos.get(i).getTags().size(); j++) {&#xD;
&#xD;
					if (allPhotos.get(i).getTags().get(j).getTagName().equalsIgnoreCase(tagName)&#xD;
							&amp;&amp; allPhotos.get(i).getTags().get(j).getTagValue().equalsIgnoreCase(tagValue)) {&#xD;
&#xD;
						reslist.add(allPhotos.get(i));&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		insertImages();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECrNtLuTEeyOg8wFipIJcg" name="searchByDateRange" specification="_D7aIELuTEeyOg8wFipIJcg">
          <language>java</language>
          <body>int startDay = 0, endDay = 0;&#xD;
		int startMonth = 0, endMonth = 0;&#xD;
		int startYear = 0, endYear = 0;&#xD;
&#xD;
		allPhotos();&#xD;
&#xD;
		Alert alert = new Alert(AlertType.CONFIRMATION);&#xD;
		alert.getDialogPane().setMinHeight(AnchorPane.USE_PREF_SIZE);&#xD;
		alert.setTitle(&quot;Search By Date Range&quot;);&#xD;
		alert.setHeaderText(&quot;Please enter dates in number form (ex. 12 2 1994&quot;);&#xD;
//		alert.setResizable(true);&#xD;
		Label label1 = new Label(&quot;Start Date - Day: &quot;);&#xD;
		Label label2 = new Label(&quot;Start Date - Month: &quot;);&#xD;
		Label label3 = new Label(&quot;Start Date - Year: &quot;);&#xD;
		Label label4 = new Label(&quot;End Date - Day: &quot;);&#xD;
		Label label5 = new Label(&quot;End Date - Month: &quot;);&#xD;
		Label label6 = new Label(&quot;End Date - Year: &quot;);&#xD;
&#xD;
		TextField tf1 = new TextField();&#xD;
		TextField tf2 = new TextField();&#xD;
		TextField text3 = new TextField();&#xD;
		TextField text4 = new TextField();&#xD;
		TextField text5 = new TextField();&#xD;
		TextField text6 = new TextField();&#xD;
&#xD;
		GridPane grid = new GridPane();&#xD;
		grid.add(label1, 1, 1);&#xD;
		grid.add(tf1, 2, 1);&#xD;
		grid.add(label2, 1, 2);&#xD;
		grid.add(tf2, 2, 2);&#xD;
		grid.add(label3, 1, 3);&#xD;
		grid.add(text3, 2, 3);&#xD;
		grid.add(label4, 1, 4);&#xD;
		grid.add(text4, 2, 4);&#xD;
		grid.add(label5, 1, 5);&#xD;
		grid.add(text5, 2, 5);&#xD;
		grid.add(label6, 1, 6);&#xD;
		grid.add(text6, 2, 6);&#xD;
&#xD;
		alert.getDialogPane().setContent(grid);&#xD;
&#xD;
		Optional&lt;ButtonType> x = alert.showAndWait();&#xD;
&#xD;
		if (x.get() == ButtonType.OK) {&#xD;
			if (tf1.getText().isEmpty()) {&#xD;
				Alert alert2 = new Alert(AlertType.ERROR);&#xD;
				alert2.setTitle(&quot;You must enter an photo name&quot;);&#xD;
				Optional&lt;ButtonType> z = alert2.showAndWait();&#xD;
				if (z.get() == ButtonType.OK) {&#xD;
					alert2.close();&#xD;
				}&#xD;
			} else {&#xD;
&#xD;
				startDay = Integer.parseInt(tf1.getText());&#xD;
				endDay = Integer.parseInt(text4.getText());&#xD;
&#xD;
				startMonth = Integer.parseInt(tf2.getText());&#xD;
				endMonth = Integer.parseInt(text5.getText());&#xD;
&#xD;
				startYear = Integer.parseInt(text3.getText());&#xD;
				endYear = Integer.parseInt(text6.getText());&#xD;
&#xD;
				alert.close();&#xD;
&#xD;
			}&#xD;
		}&#xD;
&#xD;
		LocalDate startDate = LocalDate.of(startYear, startMonth, startDay);&#xD;
		LocalDate endDate = LocalDate.of(endYear, endMonth, endDay);&#xD;
&#xD;
		reslist = new ArrayList&lt;Photo>();&#xD;
&#xD;
		if (albums.size() == 0) {&#xD;
&#xD;
		} else {&#xD;
&#xD;
			for (int i = 0; i &lt; allPhotos.size(); i++) {&#xD;
&#xD;
				Date testDate = allPhotos.get(i).getDate();&#xD;
				LocalDate date = testDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();&#xD;
&#xD;
				if (date.isAfter(startDate) &amp;&amp; date.isBefore(endDate)) {&#xD;
&#xD;
					reslist.add(allPhotos.get(i));&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		insertImages();&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECrNtbuTEeyOg8wFipIJcg" name="newAlbumFromResult" specification="_D7aIEbuTEeyOg8wFipIJcg">
          <language>java</language>
          <body>Alert alert = new Alert(AlertType.CONFIRMATION);&#xD;
		alert.setTitle(&quot;Add Album&quot;);&#xD;
		alert.setHeaderText(&quot;Creating an Album&quot;);&#xD;
		alert.setResizable(true);&#xD;
		Label label1 = new Label(&quot;Album Name: &quot;);&#xD;
&#xD;
		TextField tf1 = new TextField();&#xD;
&#xD;
		GridPane grid = new GridPane();&#xD;
		grid.add(label1, 1, 1);&#xD;
		grid.add(tf1, 2, 1);&#xD;
		alert.getDialogPane().setContent(grid);&#xD;
&#xD;
		Optional&lt;ButtonType> x = alert.showAndWait();&#xD;
&#xD;
		if (x.get() == ButtonType.OK) {&#xD;
			if (tf1.getText().isEmpty()) {&#xD;
				Alert alert2 = new Alert(AlertType.ERROR);&#xD;
				alert2.setTitle(&quot;You must enter an Album name&quot;);&#xD;
				Optional&lt;ButtonType> z = alert2.showAndWait();&#xD;
				if (z.get() == ButtonType.OK) {&#xD;
					alert2.close();&#xD;
				}&#xD;
			} else {&#xD;
				Album album = new Album();&#xD;
				album.setAlbumName(tf1.getText());&#xD;
&#xD;
				for (int i = 0; i &lt; reslist.size(); i++) {&#xD;
&#xD;
					album.addPhoto(reslist.get(i));&#xD;
				}&#xD;
&#xD;
				albums.add(album);&#xD;
				// *****user.deletealum*****&#xD;
				alert.close();&#xD;
&#xD;
			}&#xD;
		}&#xD;
&#xD;
		try {&#xD;
			SerializableSave.save(users);&#xD;
		} catch (IOException e) {&#xD;
			// TODO Auto-generated catch block&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECrNtruTEeyOg8wFipIJcg" name="searchIndexNext" specification="_D7aIEruTEeyOg8wFipIJcg">
          <language>java</language>
          <body>if (reslist.size() - reslisti > 5) {&#xD;
			reslisti += 6;&#xD;
		}&#xD;
&#xD;
		refresh();&#xD;
		insertImages();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECrNt7uTEeyOg8wFipIJcg" name="searchIndexPrev" specification="_D7avILuTEeyOg8wFipIJcg">
          <language>java</language>
          <body>if (reslisti - 6 >= 0) {&#xD;
&#xD;
			reslisti -= 6;&#xD;
		}&#xD;
&#xD;
		refresh();&#xD;
		insertImages();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECrNuLuTEeyOg8wFipIJcg" name="refresh" specification="_D7bWMLuTEeyOg8wFipIJcg">
          <language>java</language>
          <body>imageView00.setImage(null);&#xD;
		imageView10.setImage(null);&#xD;
		imageView01.setImage(null);&#xD;
		imageView11.setImage(null);&#xD;
		imageView02.setImage(null);&#xD;
		imageView12.setImage(null);&#xD;
		;&#xD;
		photoName00.setText(&quot;&quot;);&#xD;
		photoName10.setText(&quot;&quot;);&#xD;
		photoName01.setText(&quot;&quot;);&#xD;
		photoName11.setText(&quot;&quot;);&#xD;
		photoName02.setText(&quot;&quot;);&#xD;
		photoName12.setText(&quot;&quot;);&#xD;
		caption00.setText(&quot;&quot;);&#xD;
		caption10.setText(&quot;&quot;);&#xD;
		caption01.setText(&quot;&quot;);&#xD;
		caption11.setText(&quot;&quot;);&#xD;
		caption02.setText(&quot;&quot;);&#xD;
		caption12.setText(&quot;&quot;);&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECr0wLuTEeyOg8wFipIJcg" name="insertImages" specification="_D7b9QLuTEeyOg8wFipIJcg">
          <language>java</language>
          <body>if (reslist == null || reslist.size() == 0) {&#xD;
&#xD;
		} else {&#xD;
&#xD;
			if (reslist.size() - reslisti > 5) {&#xD;
&#xD;
				imageView00.setImage(reslist.get(reslisti).getPhoto());&#xD;
				;&#xD;
				photoName00.setText(reslist.get(reslisti).getPhotoName());&#xD;
				caption00.setText(reslist.get(reslisti).getCaption());&#xD;
&#xD;
				imageView10.setImage(reslist.get(reslisti + 1).getPhoto());&#xD;
				photoName10.setText(reslist.get(reslisti + 1).getPhotoName());&#xD;
				caption10.setText(reslist.get(reslisti + 1).getCaption());&#xD;
&#xD;
				imageView01.setImage(reslist.get(reslisti + 2).getPhoto());&#xD;
				photoName01.setText(reslist.get(reslisti + 2).getPhotoName());&#xD;
				caption01.setText(reslist.get(reslisti + 2).getCaption());&#xD;
&#xD;
				imageView11.setImage(reslist.get(reslisti + 3).getPhoto());&#xD;
				photoName11.setText(reslist.get(reslisti + 3).getPhotoName());&#xD;
				caption11.setText(reslist.get(reslisti + 3).getCaption());&#xD;
&#xD;
				imageView02.setImage(reslist.get(reslisti + 4).getPhoto());&#xD;
				photoName02.setText(reslist.get(reslisti + 4).getPhotoName());&#xD;
				caption02.setText(reslist.get(reslisti + 4).getCaption());&#xD;
&#xD;
				imageView12.setImage(reslist.get(reslisti + 5).getPhoto());&#xD;
				photoName12.setText(reslist.get(reslisti + 5).getPhotoName());&#xD;
				caption12.setText(reslist.get(reslisti + 5).getCaption());&#xD;
			} else if (reslist.size() - reslisti > 4) {&#xD;
&#xD;
				imageView00.setImage(reslist.get(reslisti).getPhoto());&#xD;
				;&#xD;
				photoName00.setText(reslist.get(reslisti).getPhotoName());&#xD;
				caption00.setText(reslist.get(reslisti).getCaption());&#xD;
&#xD;
				imageView10.setImage(reslist.get(reslisti + 1).getPhoto());&#xD;
				photoName10.setText(reslist.get(reslisti + 1).getPhotoName());&#xD;
				caption10.setText(reslist.get(reslisti + 1).getCaption());&#xD;
&#xD;
				imageView01.setImage(reslist.get(reslisti + 2).getPhoto());&#xD;
				photoName01.setText(reslist.get(reslisti + 2).getPhotoName());&#xD;
				caption01.setText(reslist.get(reslisti + 2).getCaption());&#xD;
&#xD;
				imageView11.setImage(reslist.get(reslisti + 3).getPhoto());&#xD;
				photoName11.setText(reslist.get(reslisti + 3).getPhotoName());&#xD;
				caption11.setText(reslist.get(reslisti + 3).getCaption());&#xD;
&#xD;
				imageView02.setImage(reslist.get(reslisti + 4).getPhoto());&#xD;
				photoName02.setText(reslist.get(reslisti + 4).getPhotoName());&#xD;
				caption02.setText(reslist.get(reslisti + 4).getCaption());&#xD;
			} else if (reslist.size() - reslisti > 3) {&#xD;
&#xD;
				imageView00.setImage(reslist.get(reslisti).getPhoto());&#xD;
				;&#xD;
				photoName00.setText(reslist.get(reslisti).getPhotoName());&#xD;
				caption00.setText(reslist.get(reslisti).getCaption());&#xD;
&#xD;
				imageView10.setImage(reslist.get(reslisti + 1).getPhoto());&#xD;
				photoName10.setText(reslist.get(reslisti + 1).getPhotoName());&#xD;
				caption10.setText(reslist.get(reslisti + 1).getCaption());&#xD;
&#xD;
				imageView01.setImage(reslist.get(reslisti + 2).getPhoto());&#xD;
				photoName01.setText(reslist.get(reslisti + 2).getPhotoName());&#xD;
				caption01.setText(reslist.get(reslisti + 2).getCaption());&#xD;
&#xD;
				imageView11.setImage(reslist.get(reslisti + 3).getPhoto());&#xD;
				photoName11.setText(reslist.get(reslisti + 3).getPhotoName());&#xD;
				caption11.setText(reslist.get(reslisti + 3).getCaption());&#xD;
			} else if (reslist.size() - reslisti > 2) {&#xD;
&#xD;
				imageView00.setImage(reslist.get(reslisti).getPhoto());&#xD;
				;&#xD;
				photoName00.setText(reslist.get(reslisti).getPhotoName());&#xD;
				caption00.setText(reslist.get(reslisti).getCaption());&#xD;
&#xD;
				imageView10.setImage(reslist.get(reslisti + 1).getPhoto());&#xD;
				photoName10.setText(reslist.get(reslisti + 1).getPhotoName());&#xD;
				caption10.setText(reslist.get(reslisti + 1).getCaption());&#xD;
&#xD;
				imageView01.setImage(reslist.get(reslisti + 2).getPhoto());&#xD;
				photoName01.setText(reslist.get(reslisti + 2).getPhotoName());&#xD;
				caption01.setText(reslist.get(reslisti + 2).getCaption());&#xD;
			} else if (reslist.size() - reslisti > 1) {&#xD;
&#xD;
				imageView00.setImage(reslist.get(reslisti).getPhoto());&#xD;
				;&#xD;
				photoName00.setText(reslist.get(reslisti).getPhotoName());&#xD;
				caption00.setText(reslist.get(reslisti).getCaption());&#xD;
&#xD;
				imageView10.setImage(reslist.get(reslisti + 1).getPhoto());&#xD;
				photoName10.setText(reslist.get(reslisti + 1).getPhotoName());&#xD;
				caption10.setText(reslist.get(reslisti + 1).getCaption());&#xD;
			} else if (reslist.size() - reslisti > 0) {&#xD;
&#xD;
				imageView00.setImage(reslist.get(reslisti).getPhoto());&#xD;
				;&#xD;
				photoName00.setText(reslist.get(reslisti).getPhotoName());&#xD;
				caption00.setText(reslist.get(reslisti).getCaption());&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECr0wbuTEeyOg8wFipIJcg" name="allPhotos" specification="_D7b9QbuTEeyOg8wFipIJcg">
          <language>java</language>
          <body>for (int i = 0; i &lt; albums.size(); i++) {&#xD;
&#xD;
			if (albums.get(i).getPhotos().size() > 0) {&#xD;
&#xD;
				for (int j = 0; j &lt; albums.get(i).getPhotos().size(); j++) {&#xD;
&#xD;
					allPhotos.add(albums.get(i).getPhotos().get(j));&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECr0wruTEeyOg8wFipIJcg" name="exit" specification="_EA-kkLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECr0w7uTEeyOg8wFipIJcg" name="e" type="_D_aeULuTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>Alert alert = new Alert(Alert.AlertType.CONFIRMATION);&#xD;
		alert.setTitle(&quot;Confirm Logout&quot;);&#xD;
		alert.setHeaderText(&quot;Are you sure?&quot;);&#xD;
&#xD;
&#xD;
		Optional&lt;ButtonType> b1 = alert.showAndWait();&#xD;
&#xD;
		if (b1.get() == ButtonType.OK) {&#xD;
&#xD;
			firstS.close();&#xD;
&#xD;
			FXMLLoader loader = new FXMLLoader();&#xD;
			loader.setLocation(getClass().getResource(&quot;/view/LoginScreen.fxml&quot;));&#xD;
			try {&#xD;
				AnchorPane root = (AnchorPane) loader.load();&#xD;
				LoginController loginview = loader.getController();&#xD;
				Stage stage = new Stage();&#xD;
				SerializableSave.save(users);&#xD;
				loginview.start(stage);&#xD;
				Scene scene = new Scene(root);&#xD;
				stage.setScene(scene);&#xD;
				stage.show();&#xD;
&#xD;
			} catch (IOException exception) {&#xD;
				exception.printStackTrace();&#xD;
			}&#xD;
&#xD;
		}&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_D7ZhALuTEeyOg8wFipIJcg" name="searchByTag" method="_ECrNs7uTEeyOg8wFipIJcg"/>
        <ownedOperation xmi:id="_D7aIELuTEeyOg8wFipIJcg" name="searchByDateRange" method="_ECrNtLuTEeyOg8wFipIJcg"/>
        <ownedOperation xmi:id="_D7aIEbuTEeyOg8wFipIJcg" name="newAlbumFromResult" method="_ECrNtbuTEeyOg8wFipIJcg"/>
        <ownedOperation xmi:id="_D7aIEruTEeyOg8wFipIJcg" name="searchIndexNext" method="_ECrNtruTEeyOg8wFipIJcg"/>
        <ownedOperation xmi:id="_D7avILuTEeyOg8wFipIJcg" name="searchIndexPrev" method="_ECrNt7uTEeyOg8wFipIJcg"/>
        <ownedOperation xmi:id="_D7bWMLuTEeyOg8wFipIJcg" name="refresh" method="_ECrNuLuTEeyOg8wFipIJcg"/>
        <ownedOperation xmi:id="_D7b9QLuTEeyOg8wFipIJcg" name="insertImages" method="_ECr0wLuTEeyOg8wFipIJcg"/>
        <ownedOperation xmi:id="_D7b9QbuTEeyOg8wFipIJcg" name="allPhotos" method="_ECr0wbuTEeyOg8wFipIJcg"/>
        <ownedOperation xmi:id="_EA99gLuTEeyOg8wFipIJcg" name="start" method="_ECrNsLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EA99gbuTEeyOg8wFipIJcg" name="firstS" type="_D_UXsLuTEeyOg8wFipIJcg"/>
          <ownedParameter xmi:id="_EA99gruTEeyOg8wFipIJcg" name="index">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_EA-kkLuTEeyOg8wFipIJcg" name="exit" method="_ECr0wruTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EA-kkbuTEeyOg8wFipIJcg" name="e" type="_D_aeULuTEeyOg8wFipIJcg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_D7luQLuTEeyOg8wFipIJcg" name="PhotoViewController">
        <ownedAttribute xmi:id="_ECKQULuTEeyOg8wFipIJcg" name="firstS" visibility="package" type="_D_UXsLuTEeyOg8wFipIJcg" association="_EDdQ07uTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECK3YbuTEeyOg8wFipIJcg" name="photoGrid" visibility="package" type="_D_bscLuTEeyOg8wFipIJcg" association="_EDd34buTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECLec7uTEeyOg8wFipIJcg" name="pane00" visibility="package" type="_D_kPULuTEeyOg8wFipIJcg" association="_EDd35LuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECMFgruTEeyOg8wFipIJcg" name="pane10" visibility="package" type="_D_kPULuTEeyOg8wFipIJcg" association="_EDd357uTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECMFhruTEeyOg8wFipIJcg" name="pane01" visibility="package" type="_D_kPULuTEeyOg8wFipIJcg" association="_EDee8buTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECMsk7uTEeyOg8wFipIJcg" name="pane11" visibility="package" type="_D_kPULuTEeyOg8wFipIJcg" association="_EDee9LuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECNToLuTEeyOg8wFipIJcg" name="pane02" visibility="package" type="_D_kPULuTEeyOg8wFipIJcg" association="_EDfGAbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECNTpLuTEeyOg8wFipIJcg" name="pane12" visibility="package" type="_D_kPULuTEeyOg8wFipIJcg" association="_EDfGBLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECN6sruTEeyOg8wFipIJcg" name="imageView00" visibility="package" type="_D_mEg7uTEeyOg8wFipIJcg" association="_EDftEbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECN6truTEeyOg8wFipIJcg" name="imageView10" visibility="package" type="_D_mEg7uTEeyOg8wFipIJcg" association="_EDftFLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECOhw7uTEeyOg8wFipIJcg" name="imageView01" visibility="package" type="_D_mEg7uTEeyOg8wFipIJcg" association="_EDftF7uTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECOhx7uTEeyOg8wFipIJcg" name="imageView11" visibility="package" type="_D_mEg7uTEeyOg8wFipIJcg" association="_EDgUIbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECPI07uTEeyOg8wFipIJcg" name="imageView02" visibility="package" type="_D_mEg7uTEeyOg8wFipIJcg" association="_EDgUJLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECPI17uTEeyOg8wFipIJcg" name="imageView12" visibility="package" type="_D_mEg7uTEeyOg8wFipIJcg" association="_EDg7MbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECPv47uTEeyOg8wFipIJcg" name="photoName00" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDg7NLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECQW8ruTEeyOg8wFipIJcg" name="photoName10" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDhiQbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECQ-ALuTEeyOg8wFipIJcg" name="photoName01" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDiJULuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECQ-BLuTEeyOg8wFipIJcg" name="photoName11" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDiJU7uTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECRlEbuTEeyOg8wFipIJcg" name="photoName02" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDiJVruTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECRlFbuTEeyOg8wFipIJcg" name="photoName12" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDiwYbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECSMIruTEeyOg8wFipIJcg" name="caption00" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDiwZLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECSMJruTEeyOg8wFipIJcg" name="caption10" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDjXcbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECSzMruTEeyOg8wFipIJcg" name="caption01" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDjXdLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECSzNruTEeyOg8wFipIJcg" name="caption11" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDj-gbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECTaQ7uTEeyOg8wFipIJcg" name="caption02" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDj-hLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECTaR7uTEeyOg8wFipIJcg" name="caption12" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDklkLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECUBU7uTEeyOg8wFipIJcg" name="albumNameLabel" visibility="package" type="_D_xDoruTEeyOg8wFipIJcg" association="_EDklk7uTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECUoYLuTEeyOg8wFipIJcg" name="currentAlbum" visibility="package" type="_D72M8LuTEeyOg8wFipIJcg" association="_EDkllruTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECUoYruTEeyOg8wFipIJcg" name="currentUser" visibility="package" type="_D8DBQLuTEeyOg8wFipIJcg" association="_EDlMobuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECUoZLuTEeyOg8wFipIJcg" name="users" visibility="package" type="_D_dhoruTEeyOg8wFipIJcg" association="_EDlMpLuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECVPcruTEeyOg8wFipIJcg" name="currIndex" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_ECVPc7uTEeyOg8wFipIJcg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ECV2gLuTEeyOg8wFipIJcg" name="userIndex" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_EBFSQLuTEeyOg8wFipIJcg" client="_D7luQLuTEeyOg8wFipIJcg" supplier="_D_dhoLuTEeyOg8wFipIJcg" contract="_D_dhoLuTEeyOg8wFipIJcg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECsb0LuTEeyOg8wFipIJcg" name="start" specification="_EBKx0LuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECsb0buTEeyOg8wFipIJcg" name="firstS" type="_D_UXsLuTEeyOg8wFipIJcg"/>
          <ownedParameter xmi:id="_ECsb0ruTEeyOg8wFipIJcg" name="albumIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_ECsb07uTEeyOg8wFipIJcg" name="userIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.userIndex = userIndex;&#xD;
&#xD;
		users = SerializableSave.read();&#xD;
		currentAlbum = users.get(userIndex).getAlbums().get(albumIndex);&#xD;
&#xD;
		this.firstS = firstS;&#xD;
		this.currentUser = users.get(userIndex);&#xD;
&#xD;
		FXMLLoader loader = new FXMLLoader();&#xD;
		loader.setLocation(getClass().getResource(&quot;/view/PhotosScreen.fxml&quot;));&#xD;
&#xD;
		AnchorPane root = (AnchorPane) loader.load();&#xD;
&#xD;
		Scene scene = new Scene(root);&#xD;
		firstS.setScene(scene);&#xD;
		firstS.setTitle(&quot;Photo Library&quot;);&#xD;
		firstS.setResizable(false);&#xD;
		firstS.show();&#xD;
&#xD;
		refresh();&#xD;
		insertImages();&#xD;
&#xD;
		pane00.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler&lt;MouseEvent>() {&#xD;
&#xD;
			@Override&#xD;
			public void handle(MouseEvent event) {&#xD;
				// if only one cluck&#xD;
				if (event.getClickCount() == 1) {&#xD;
&#xD;
					pane00.setBorder(new Border(new BorderStroke(Color.DARKCYAN, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(10))));&#xD;
&#xD;
					pane10.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane01.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane11.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane02.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane12.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
				} else if (event.getClickCount() == 2) {&#xD;
&#xD;
					if (currIndex &lt; currentAlbum.getPhotos().size()) {&#xD;
						FXMLLoader loader = new FXMLLoader();&#xD;
						loader.setLocation(getClass().getResource(&quot;/view/PhotoView.fxml&quot;));&#xD;
&#xD;
						try {&#xD;
							AnchorPane root = (AnchorPane) loader.load();&#xD;
							PhotoOpenController openPhoto = loader.getController();&#xD;
							Stage stage = new Stage();&#xD;
&#xD;
							openPhoto.start(stage, currentAlbum, currIndex);&#xD;
							Scene scene = new Scene(root, 800, 600);&#xD;
							stage.setScene(scene);&#xD;
							stage.show();&#xD;
&#xD;
						} catch (Exception exception) {&#xD;
							exception.printStackTrace();&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
&#xD;
				event.consume();&#xD;
			}&#xD;
		});&#xD;
&#xD;
		pane10.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler&lt;MouseEvent>() {&#xD;
&#xD;
			@Override&#xD;
			public void handle(MouseEvent event) {&#xD;
&#xD;
				if (event.getClickCount() == 1) {&#xD;
&#xD;
					pane00.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane10.setBorder(new Border(new BorderStroke(Color.DARKCYAN, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(10))));&#xD;
&#xD;
					pane01.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane11.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane02.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane12.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
				} else if (event.getClickCount() == 2) {&#xD;
&#xD;
					if (currIndex + 1 &lt; currentAlbum.getPhotos().size()) {&#xD;
						FXMLLoader loader = new FXMLLoader();&#xD;
						loader.setLocation(getClass().getResource(&quot;/view/PhotoView.fxml&quot;));&#xD;
&#xD;
						try {&#xD;
							AnchorPane root = (AnchorPane) loader.load();&#xD;
							PhotoOpenController openPhoto = loader.getController();&#xD;
							Stage stage = new Stage();&#xD;
&#xD;
							openPhoto.start(stage, currentAlbum, currIndex + 1);&#xD;
							Scene scene = new Scene(root, 600, 400);&#xD;
							stage.setScene(scene);&#xD;
							stage.show();&#xD;
&#xD;
						} catch (Exception exception) {&#xD;
							exception.printStackTrace();&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
&#xD;
				event.consume();&#xD;
			}&#xD;
		});&#xD;
&#xD;
		pane01.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler&lt;MouseEvent>() {&#xD;
&#xD;
			@Override&#xD;
			public void handle(MouseEvent event) {&#xD;
				if (event.getClickCount() == 1) {&#xD;
					pane00.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane10.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane01.setBorder(new Border(new BorderStroke(Color.DARKCYAN, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(10))));&#xD;
&#xD;
					pane11.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane02.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane12.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
				} else if (event.getClickCount() == 2) {&#xD;
					if (currIndex + 2 &lt; currentAlbum.getPhotos().size()) {&#xD;
						FXMLLoader loader = new FXMLLoader();&#xD;
						loader.setLocation(getClass().getResource(&quot;/view/PhotoView.fxml&quot;));&#xD;
&#xD;
						try {&#xD;
							AnchorPane root = (AnchorPane) loader.load();&#xD;
							PhotoOpenController openPhoto = loader.getController();&#xD;
							Stage stage = new Stage();&#xD;
&#xD;
							openPhoto.start(stage, currentAlbum, currIndex + 2);&#xD;
							Scene scene = new Scene(root, 800, 600);&#xD;
							stage.setScene(scene);&#xD;
							stage.show();&#xD;
&#xD;
						} catch (Exception exception) {&#xD;
							exception.printStackTrace();&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
&#xD;
				event.consume();&#xD;
			}&#xD;
		});&#xD;
&#xD;
		pane11.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler&lt;MouseEvent>() {&#xD;
&#xD;
			@Override&#xD;
			public void handle(MouseEvent event) {&#xD;
&#xD;
				if (event.getClickCount() == 1) {&#xD;
&#xD;
					pane00.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane10.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane01.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane11.setBorder(new Border(new BorderStroke(Color.DARKCYAN, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(10))));&#xD;
&#xD;
					pane02.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane12.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
				} else if (event.getClickCount() == 2) {&#xD;
&#xD;
					if (currIndex + 3 &lt; currentAlbum.getPhotos().size()) {&#xD;
&#xD;
						FXMLLoader loader = new FXMLLoader();&#xD;
						loader.setLocation(getClass().getResource(&quot;/view/PhotoView.fxml&quot;));&#xD;
&#xD;
						try {&#xD;
							AnchorPane root = (AnchorPane) loader.load();&#xD;
							PhotoOpenController openPhoto = loader.getController();&#xD;
							Stage stage = new Stage();&#xD;
&#xD;
							openPhoto.start(stage, currentAlbum, currIndex + 3);&#xD;
							Scene scene = new Scene(root, 800, 600);&#xD;
							stage.setScene(scene);&#xD;
							stage.show();&#xD;
&#xD;
						} catch (Exception exception) {&#xD;
							exception.printStackTrace();&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
&#xD;
				event.consume();&#xD;
			}&#xD;
		});&#xD;
&#xD;
		pane02.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler&lt;MouseEvent>() {&#xD;
&#xD;
			@Override&#xD;
			public void handle(MouseEvent event) {&#xD;
&#xD;
				if (event.getClickCount() == 1) {&#xD;
&#xD;
					pane00.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane10.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane01.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane11.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane02.setBorder(new Border(new BorderStroke(Color.DARKCYAN, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(10))));&#xD;
&#xD;
					pane12.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
				} else if (event.getClickCount() == 2) {&#xD;
&#xD;
					if (currIndex + 4 &lt; currentAlbum.getPhotos().size()) {&#xD;
						FXMLLoader loader = new FXMLLoader();&#xD;
						loader.setLocation(getClass().getResource(&quot;/view/PhotoView.fxml&quot;));&#xD;
&#xD;
						try {&#xD;
							AnchorPane root = (AnchorPane) loader.load();&#xD;
							PhotoOpenController openPhoto = loader.getController();&#xD;
							Stage stage = new Stage();&#xD;
&#xD;
							openPhoto.start(stage, currentAlbum, currIndex + 4);&#xD;
							Scene scene = new Scene(root, 800, 600);&#xD;
							stage.setScene(scene);&#xD;
							stage.show();&#xD;
&#xD;
						} catch (Exception exception) {&#xD;
							exception.printStackTrace();&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
&#xD;
				event.consume();&#xD;
			}&#xD;
		});&#xD;
&#xD;
		pane12.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler&lt;MouseEvent>() {&#xD;
&#xD;
			@Override&#xD;
			public void handle(MouseEvent event) {&#xD;
&#xD;
				if (event.getClickCount() == 1) {&#xD;
&#xD;
					pane00.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane10.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane01.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane11.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane02.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(1))));&#xD;
&#xD;
					pane12.setBorder(new Border(new BorderStroke(Color.DARKCYAN, BorderStrokeStyle.SOLID,&#xD;
							CornerRadii.EMPTY, new BorderWidths(10))));&#xD;
				} else if (event.getClickCount() == 2) {&#xD;
&#xD;
					if (currIndex + 5 &lt; currentAlbum.getPhotos().size()) {&#xD;
&#xD;
						FXMLLoader loader = new FXMLLoader();&#xD;
						loader.setLocation(getClass().getResource(&quot;/view/PhotoView.fxml&quot;));&#xD;
&#xD;
						try {&#xD;
							AnchorPane root = (AnchorPane) loader.load();&#xD;
							PhotoOpenController openPhoto = loader.getController();&#xD;
							Stage stage = new Stage();&#xD;
&#xD;
							openPhoto.start(stage, currentAlbum, currIndex + 5);&#xD;
							Scene scene = new Scene(root, 800, 600);&#xD;
							stage.setScene(scene);&#xD;
							stage.show();&#xD;
&#xD;
						} catch (Exception exception) {&#xD;
							exception.printStackTrace();&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
&#xD;
				event.consume();&#xD;
&#xD;
			}&#xD;
		});&#xD;
&#xD;
		// when force closed&#xD;
		firstS.setOnCloseRequest(event -> {&#xD;
&#xD;
			try {&#xD;
				SerializableSave.save(users);&#xD;
			} catch (IOException e) {&#xD;
				// TODO Auto-generated catch block&#xD;
				e.printStackTrace();&#xD;
			}&#xD;
&#xD;
		});&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECtC4LuTEeyOg8wFipIJcg" name="screenTransition" specification="_D7pYoLuTEeyOg8wFipIJcg">
          <language>java</language>
          <body>firstS.close();&#xD;
		FXMLLoader loader = new FXMLLoader();&#xD;
		loader.setLocation(getClass().getResource(&quot;/view/AlbumsScreen.fxml&quot;));&#xD;
&#xD;
		try {&#xD;
			AnchorPane root = (AnchorPane) loader.load();&#xD;
			AlbumController albumview = loader.getController();&#xD;
			Stage stage = new Stage();&#xD;
&#xD;
			albumview.start(stage, userIndex);&#xD;
			Scene scene = new Scene(root);&#xD;
			stage.setScene(scene);&#xD;
			stage.show();&#xD;
&#xD;
		} catch (Exception exception) {&#xD;
			exception.printStackTrace();&#xD;
		}&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECtC4buTEeyOg8wFipIJcg" name="nextPicture" specification="_D7p_sLuTEeyOg8wFipIJcg">
          <language>java</language>
          <body>if (currentAlbum.getPhotos().size() - currIndex > 5) {&#xD;
			currIndex += 6;&#xD;
		}&#xD;
		refresh();&#xD;
		insertImages();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECtC4ruTEeyOg8wFipIJcg" name="prevPicture" specification="_D7p_sbuTEeyOg8wFipIJcg">
          <language>java</language>
          <body>if (currIndex - 6 >= 0) {&#xD;
			currIndex -= 6;&#xD;
		}&#xD;
		refresh();&#xD;
		insertImages();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECtC47uTEeyOg8wFipIJcg" name="refresh" specification="_D7p_sruTEeyOg8wFipIJcg">
          <language>java</language>
          <body>imageView00.setImage(null);&#xD;
		imageView10.setImage(null);&#xD;
		imageView01.setImage(null);&#xD;
		imageView11.setImage(null);&#xD;
		imageView02.setImage(null);&#xD;
		imageView12.setImage(null);&#xD;
&#xD;
		photoName00.setText(&quot;&quot;);&#xD;
		photoName10.setText(&quot;&quot;);&#xD;
		photoName01.setText(&quot;&quot;);&#xD;
		photoName11.setText(&quot;&quot;);&#xD;
		photoName02.setText(&quot;&quot;);&#xD;
		photoName12.setText(&quot;&quot;);&#xD;
		caption00.setText(&quot;&quot;);&#xD;
		caption10.setText(&quot;&quot;);&#xD;
		caption01.setText(&quot;&quot;);&#xD;
		caption11.setText(&quot;&quot;);&#xD;
		caption02.setText(&quot;&quot;);&#xD;
		caption12.setText(&quot;&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECtC5LuTEeyOg8wFipIJcg" name="insertImages" specification="_D7qmwLuTEeyOg8wFipIJcg">
          <language>java</language>
          <body>albumNameLabel.setText(currentAlbum.getAlbumName());&#xD;
		if (currentAlbum.getPhotos() == null || currentAlbum.getPhotos().size() == 0) {&#xD;
		} else {&#xD;
			if (currentAlbum.getPhotos().size() - currIndex > 5) {&#xD;
				imageView00.setImage(new Image(currentAlbum.getPhotos().get(currIndex).getLocation()));&#xD;
				photoName00.setText(currentAlbum.getPhotos().get(currIndex).getPhotoName());&#xD;
				caption00.setText(currentAlbum.getPhotos().get(currIndex).getCaption());&#xD;
&#xD;
				imageView10.setImage(new Image(currentAlbum.getPhotos().get(currIndex + 1).getLocation()));&#xD;
				photoName10.setText(currentAlbum.getPhotos().get(currIndex + 1).getPhotoName());&#xD;
				caption10.setText(currentAlbum.getPhotos().get(currIndex + 1).getCaption());&#xD;
&#xD;
				imageView01.setImage(new Image(currentAlbum.getPhotos().get(currIndex + 2).getLocation()));&#xD;
				photoName01.setText(currentAlbum.getPhotos().get(currIndex + 2).getPhotoName());&#xD;
				caption01.setText(currentAlbum.getPhotos().get(currIndex + 2).getCaption());&#xD;
&#xD;
				imageView11.setImage(new Image(currentAlbum.getPhotos().get(currIndex + 3).getLocation()));&#xD;
				photoName11.setText(currentAlbum.getPhotos().get(currIndex + 3).getPhotoName());&#xD;
				caption11.setText(currentAlbum.getPhotos().get(currIndex + 3).getCaption());&#xD;
&#xD;
				imageView02.setImage(new Image(currentAlbum.getPhotos().get(currIndex + 4).getLocation()));&#xD;
				photoName02.setText(currentAlbum.getPhotos().get(currIndex + 4).getPhotoName());&#xD;
				caption02.setText(currentAlbum.getPhotos().get(currIndex + 4).getCaption());&#xD;
&#xD;
				imageView12.setImage(new Image(currentAlbum.getPhotos().get(currIndex + 5).getLocation()));&#xD;
				photoName12.setText(currentAlbum.getPhotos().get(currIndex + 5).getPhotoName());&#xD;
				caption12.setText(currentAlbum.getPhotos().get(currIndex + 5).getCaption());&#xD;
			} else if (currentAlbum.getPhotos().size() - currIndex > 4) {&#xD;
&#xD;
				imageView00.setImage(new Image(currentAlbum.getPhotos().get(currIndex).getLocation()));&#xD;
				photoName00.setText(currentAlbum.getPhotos().get(currIndex).getPhotoName());&#xD;
				caption00.setText(currentAlbum.getPhotos().get(currIndex).getCaption());&#xD;
&#xD;
				imageView10.setImage(new Image(currentAlbum.getPhotos().get(currIndex + 1).getLocation()));&#xD;
				photoName10.setText(currentAlbum.getPhotos().get(currIndex + 1).getPhotoName());&#xD;
				caption10.setText(currentAlbum.getPhotos().get(currIndex + 1).getCaption());&#xD;
&#xD;
				imageView01.setImage(new Image(currentAlbum.getPhotos().get(currIndex + 2).getLocation()));&#xD;
				photoName01.setText(currentAlbum.getPhotos().get(currIndex + 2).getPhotoName());&#xD;
				caption01.setText(currentAlbum.getPhotos().get(currIndex + 2).getCaption());&#xD;
&#xD;
				imageView11.setImage(new Image(currentAlbum.getPhotos().get(currIndex + 3).getLocation()));&#xD;
				photoName11.setText(currentAlbum.getPhotos().get(currIndex + 3).getPhotoName());&#xD;
				caption11.setText(currentAlbum.getPhotos().get(currIndex + 3).getCaption());&#xD;
&#xD;
				imageView02.setImage(new Image(currentAlbum.getPhotos().get(currIndex + 4).getLocation()));&#xD;
				photoName02.setText(currentAlbum.getPhotos().get(currIndex + 4).getPhotoName());&#xD;
				caption02.setText(currentAlbum.getPhotos().get(currIndex + 4).getCaption());&#xD;
&#xD;
			} else if (currentAlbum.getPhotos().size() - currIndex > 3) {&#xD;
&#xD;
				imageView00.setImage(new Image(currentAlbum.getPhotos().get(currIndex).getLocation()));&#xD;
				photoName00.setText(currentAlbum.getPhotos().get(currIndex).getPhotoName());&#xD;
				caption00.setText(currentAlbum.getPhotos().get(currIndex).getCaption());&#xD;
&#xD;
				imageView10.setImage(new Image(currentAlbum.getPhotos().get(currIndex + 1).getLocation()));&#xD;
				photoName10.setText(currentAlbum.getPhotos().get(currIndex + 1).getPhotoName());&#xD;
				caption10.setText(currentAlbum.getPhotos().get(currIndex + 1).getCaption());&#xD;
&#xD;
				imageView01.setImage(new Image(currentAlbum.getPhotos().get(currIndex + 2).getLocation()));&#xD;
				photoName01.setText(currentAlbum.getPhotos().get(currIndex + 2).getPhotoName());&#xD;
				caption01.setText(currentAlbum.getPhotos().get(currIndex + 2).getCaption());&#xD;
&#xD;
				imageView11.setImage(new Image(currentAlbum.getPhotos().get(currIndex + 3).getLocation()));&#xD;
				photoName11.setText(currentAlbum.getPhotos().get(currIndex + 3).getPhotoName());&#xD;
				caption11.setText(currentAlbum.getPhotos().get(currIndex + 3).getCaption());&#xD;
&#xD;
			} else if (currentAlbum.getPhotos().size() - currIndex > 2) {&#xD;
&#xD;
				imageView00.setImage(new Image(currentAlbum.getPhotos().get(currIndex).getLocation()));&#xD;
				photoName00.setText(currentAlbum.getPhotos().get(currIndex).getPhotoName());&#xD;
				caption00.setText(currentAlbum.getPhotos().get(currIndex).getCaption());&#xD;
&#xD;
				imageView10.setImage(new Image(currentAlbum.getPhotos().get(currIndex + 1).getLocation()));&#xD;
				photoName10.setText(currentAlbum.getPhotos().get(currIndex + 1).getPhotoName());&#xD;
				caption10.setText(currentAlbum.getPhotos().get(currIndex + 1).getCaption());&#xD;
&#xD;
				imageView01.setImage(new Image(currentAlbum.getPhotos().get(currIndex + 2).getLocation()));&#xD;
				photoName01.setText(currentAlbum.getPhotos().get(currIndex + 2).getPhotoName());&#xD;
				caption01.setText(currentAlbum.getPhotos().get(currIndex + 2).getCaption());&#xD;
&#xD;
			} else if (currentAlbum.getPhotos().size() - currIndex > 1) {&#xD;
&#xD;
				imageView00.setImage(new Image(currentAlbum.getPhotos().get(currIndex).getLocation()));&#xD;
				photoName00.setText(currentAlbum.getPhotos().get(currIndex).getPhotoName());&#xD;
				caption00.setText(currentAlbum.getPhotos().get(currIndex).getCaption());&#xD;
&#xD;
				imageView10.setImage(new Image(currentAlbum.getPhotos().get(currIndex + 1).getLocation()));&#xD;
				photoName10.setText(currentAlbum.getPhotos().get(currIndex + 1).getPhotoName());&#xD;
				caption10.setText(currentAlbum.getPhotos().get(currIndex + 1).getCaption());&#xD;
&#xD;
			} else if (currentAlbum.getPhotos().size() - currIndex > 0) {&#xD;
&#xD;
				imageView00.setImage(new Image(currentAlbum.getPhotos().get(currIndex).getLocation()));&#xD;
				photoName00.setText(currentAlbum.getPhotos().get(currIndex).getPhotoName());&#xD;
				caption00.setText(currentAlbum.getPhotos().get(currIndex).getCaption());&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECtC5buTEeyOg8wFipIJcg" name="addPhotoToAlbum" specification="_EBL_8LuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECtC5ruTEeyOg8wFipIJcg" name="event" type="_D_aeULuTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>final FileChooser fileChooser = new FileChooser();&#xD;
&#xD;
		File file = fileChooser.showOpenDialog(firstS);&#xD;
&#xD;
		if (file != null) {&#xD;
&#xD;
			Image image1 = new Image(file.toURI().toString());&#xD;
&#xD;
			Photo newPhoto = new Photo();&#xD;
			newPhoto.setPhoto(image1);&#xD;
			newPhoto.setLocation(file.toURI().toString());&#xD;
&#xD;
			Alert alert = new Alert(AlertType.CONFIRMATION);&#xD;
			alert.setTitle(&quot;Add Photo&quot;);&#xD;
			alert.setHeaderText(&quot;Adding a photo&quot;);&#xD;
			alert.setResizable(true);&#xD;
			Label label1 = new Label(&quot;Photo Name: &quot;);&#xD;
&#xD;
			TextField tf = new TextField();&#xD;
&#xD;
			GridPane grid = new GridPane();&#xD;
			grid.add(label1, 1, 1);&#xD;
			grid.add(tf, 2, 1);&#xD;
			alert.getDialogPane().setContent(grid);&#xD;
&#xD;
			Optional&lt;ButtonType> result = alert.showAndWait();&#xD;
&#xD;
			if (result.get() == ButtonType.OK) {&#xD;
				if (tf.getText().isEmpty()) {&#xD;
					Alert alert2 = new Alert(AlertType.ERROR);&#xD;
					alert2.setTitle(&quot;You must enter an photo name&quot;);&#xD;
					Optional&lt;ButtonType> z = alert2.showAndWait();&#xD;
					if (z.get() == ButtonType.OK) {&#xD;
						alert2.close();&#xD;
					}&#xD;
				} else {&#xD;
					newPhoto.setPhotoName(tf.getText());&#xD;
&#xD;
					alert.close();&#xD;
&#xD;
				}&#xD;
			}&#xD;
			currentAlbum.addPhoto(newPhoto);&#xD;
			refresh();&#xD;
			insertImages();&#xD;
&#xD;
		}&#xD;
&#xD;
		try {&#xD;
			SerializableSave.save(users);&#xD;
		} catch (IOException e1) {&#xD;
			// TODO Auto-generated catch block&#xD;
			e1.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECtC57uTEeyOg8wFipIJcg" name="removePhotoFromAlbum" specification="_EBMnALuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECtC6LuTEeyOg8wFipIJcg" name="e" type="_D_aeULuTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>Alert alert = new Alert(AlertType.CONFIRMATION);&#xD;
		int removeIndex = -1;&#xD;
&#xD;
		if (pane00.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
			removeIndex = currIndex;&#xD;
		} else if (pane10.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
			removeIndex = currIndex + 1;&#xD;
		} else if (pane01.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
			removeIndex = currIndex + 2;&#xD;
		} else if (pane11.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
			removeIndex = currIndex + 3;&#xD;
		} else if (pane02.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
			removeIndex = currIndex + 4;&#xD;
		} else if (pane12.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
			removeIndex = currIndex + 5;&#xD;
		} else {&#xD;
			Alert alert2 = new Alert(AlertType.ERROR);&#xD;
			alert2.setTitle(&quot;You must specify a photo.&quot;);&#xD;
			Optional&lt;ButtonType> bt = alert2.showAndWait();&#xD;
			if (bt.get() == ButtonType.OK) {&#xD;
				alert2.close();&#xD;
			}&#xD;
		}&#xD;
&#xD;
		alert.setTitle(&quot;Photo Deletion&quot;);&#xD;
		alert.setHeaderText(&quot;Are you sure?&quot;);&#xD;
&#xD;
		Optional&lt;ButtonType> result = alert.showAndWait();&#xD;
&#xD;
		if (result.get() == ButtonType.OK) {&#xD;
&#xD;
			currentAlbum.getPhotos().remove(removeIndex);&#xD;
		} else {&#xD;
&#xD;
			alert.close();&#xD;
		}&#xD;
&#xD;
		refresh();&#xD;
		insertImages();&#xD;
&#xD;
		try {&#xD;
			SerializableSave.save(users);&#xD;
		} catch (IOException e1) {&#xD;
			// TODO Auto-generated catch block&#xD;
			e1.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECtC6buTEeyOg8wFipIJcg" name="editName" specification="_EBMnAruTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECtC6ruTEeyOg8wFipIJcg" name="event" type="_D_aeULuTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>Alert alert = new Alert(AlertType.CONFIRMATION);&#xD;
		Photo photo = null;&#xD;
&#xD;
		if (pane00.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex);&#xD;
		} else if (pane10.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 1);&#xD;
		} else if (pane01.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 2);&#xD;
		} else if (pane11.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 3);&#xD;
		} else if (pane02.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 4);&#xD;
		} else if (pane12.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 5);&#xD;
		} else {&#xD;
			Alert alert2 = new Alert(AlertType.ERROR);&#xD;
			alert2.setTitle(&quot;Which Photo?&quot;);&#xD;
			Optional&lt;ButtonType> result2 = alert2.showAndWait();&#xD;
			if (result2.get() == ButtonType.OK) {&#xD;
				alert2.close();&#xD;
			}&#xD;
&#xD;
		}&#xD;
&#xD;
		alert.setTitle(&quot;Insert a new name.&quot;);&#xD;
		alert.setHeaderText(&quot;Type a valid name&quot;);&#xD;
&#xD;
		Label label1 = new Label(&quot;Photo Name: &quot;);&#xD;
&#xD;
		TextField tf = new TextField();&#xD;
		tf.setPromptText(photo.getPhotoName());&#xD;
&#xD;
		GridPane grid = new GridPane();&#xD;
		grid.add(label1, 1, 1);&#xD;
		grid.add(tf, 2, 1);&#xD;
&#xD;
		alert.getDialogPane().setContent(grid);&#xD;
&#xD;
		Optional&lt;ButtonType> result = alert.showAndWait();&#xD;
&#xD;
		if (result.get() == ButtonType.OK) {&#xD;
			// runs a checker on whether that photo name already exists&#xD;
			// same thing as adding users or adding photos&#xD;
			for (int i = 0; i &lt; currentAlbum.getPhotos().size(); i++) {&#xD;
				if (tf.getText().equals(currentAlbum.getPhotos().get(i).getPhotoName())) {&#xD;
					Alert alert2 = new Alert(AlertType.ERROR);&#xD;
					alert2.setContentText(&quot;Photo Name Exists. Type another name&quot;);&#xD;
&#xD;
					Optional&lt;ButtonType> result2 = alert2.showAndWait();&#xD;
					if (result2.get() == ButtonType.OK) {&#xD;
						alert2.close();&#xD;
						return;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			photo.setPhotoName(tf.getText());&#xD;
&#xD;
		}&#xD;
&#xD;
		refresh();&#xD;
		insertImages();&#xD;
&#xD;
		try {&#xD;
			SerializableSave.save(users);&#xD;
		} catch (IOException e1) {&#xD;
			// TODO Auto-generated catch block&#xD;
			e1.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECtC67uTEeyOg8wFipIJcg" name="editCaption" specification="_EBNOELuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECtC7LuTEeyOg8wFipIJcg" name="e" type="_D_aeULuTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>Alert alert = new Alert(AlertType.CONFIRMATION);&#xD;
		Photo photo = null;&#xD;
&#xD;
		if (pane00.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex);&#xD;
		} else if (pane10.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 1);&#xD;
		} else if (pane01.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 2);&#xD;
		} else if (pane11.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 3);&#xD;
		} else if (pane02.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 4);&#xD;
		} else if (pane12.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 5);&#xD;
		} else {&#xD;
			Alert alert2 = new Alert(AlertType.ERROR);&#xD;
			alert2.setTitle(&quot;Must Choose a Photo.&quot;);&#xD;
			Optional&lt;ButtonType> bt = alert2.showAndWait();&#xD;
			if (bt.get() == ButtonType.OK) {&#xD;
				alert2.close();&#xD;
			}&#xD;
&#xD;
		}&#xD;
&#xD;
		alert.setTitle(&quot;New Photo Caption&quot;);&#xD;
		alert.setHeaderText(&quot;Write a new caption&quot;);&#xD;
&#xD;
		Label label1 = new Label(&quot;Photo Name&quot;);&#xD;
&#xD;
		TextField tf = new TextField();&#xD;
		tf.setPromptText(photo.getCaption());&#xD;
&#xD;
		GridPane grid = new GridPane();&#xD;
		grid.add(label1, 1, 1);&#xD;
		grid.add(tf, 2, 1);&#xD;
&#xD;
		alert.getDialogPane().setContent(grid);&#xD;
&#xD;
		Optional&lt;ButtonType> bt = alert.showAndWait();&#xD;
&#xD;
		if (bt.get() == ButtonType.OK) {&#xD;
			photo.setCaption(tf.getText());&#xD;
		} else {&#xD;
			System.out.println(&quot;error in renaming caption&quot;);&#xD;
			// above is for debug purposes&#xD;
		}&#xD;
		refresh();&#xD;
		insertImages();&#xD;
&#xD;
		try {&#xD;
			SerializableSave.save(users);&#xD;
		} catch (IOException e1) {&#xD;
			// TODO Auto-generated catch block&#xD;
			e1.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECtp8LuTEeyOg8wFipIJcg" name="addTag" specification="_EBNOEruTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECtp8buTEeyOg8wFipIJcg" name="e" type="_D_aeULuTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>Alert alert = new Alert(AlertType.CONFIRMATION);&#xD;
		Photo photo = null;&#xD;
&#xD;
		if (pane00.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex);&#xD;
		} else if (pane10.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 1);&#xD;
		} else if (pane01.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 2);&#xD;
		} else if (pane11.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 3);&#xD;
		} else if (pane02.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 4);&#xD;
		} else if (pane12.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 5);&#xD;
		} else {&#xD;
			Alert alert2 = new Alert(AlertType.ERROR);&#xD;
			alert2.setTitle(&quot;Choose a photo.&quot;);&#xD;
			Optional&lt;ButtonType> bt = alert2.showAndWait();&#xD;
			if (bt.get() == ButtonType.OK) {&#xD;
				alert2.close();&#xD;
			}&#xD;
&#xD;
		}&#xD;
&#xD;
		alert.setTitle(&quot;New Photo Tag&quot;);&#xD;
		alert.setHeaderText(&quot;Write a new tag&quot;);&#xD;
		alert.setResizable(true);&#xD;
		Label label1 = new Label(&quot;Tag Name: &quot;);&#xD;
		Label label2 = new Label(&quot;Tag Value: &quot;);&#xD;
&#xD;
		TextField tf = new TextField();&#xD;
		TextField tf2 = new TextField();&#xD;
&#xD;
		GridPane grid = new GridPane();&#xD;
		grid.add(label1, 1, 1);&#xD;
		grid.add(tf, 2, 1);&#xD;
		grid.add(label2, 1, 2);&#xD;
		grid.add(tf2, 2, 2);&#xD;
&#xD;
		alert.getDialogPane().setContent(grid);&#xD;
&#xD;
		Optional&lt;ButtonType> x = alert.showAndWait();&#xD;
&#xD;
		if (x.get() == ButtonType.OK) {&#xD;
&#xD;
			for (int i = 0; i &lt; photo.getTags().size(); i++) {&#xD;
&#xD;
				if (photo.getTags().get(i).getTagName().equals(tf.getText())&#xD;
						&amp;&amp; photo.getTags().get(i).getTagValue().equals(tf2.getText())) {&#xD;
&#xD;
					Alert alert2 = new Alert(AlertType.ERROR);&#xD;
					alert2.setContentText(&quot;There is already a tag with that name and value.&quot;);&#xD;
&#xD;
					Optional&lt;ButtonType> y = alert2.showAndWait();&#xD;
&#xD;
					if (y.get() == ButtonType.OK) {&#xD;
						alert2.close();&#xD;
						return;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
&#xD;
			photo.addTag(tf.getText(), tf2.getText());&#xD;
		} else {&#xD;
&#xD;
		}&#xD;
&#xD;
		refresh();&#xD;
		insertImages();&#xD;
&#xD;
		try {&#xD;
			SerializableSave.save(users);&#xD;
		} catch (IOException e1) {&#xD;
			// TODO Auto-generated catch block&#xD;
			e1.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECtp8ruTEeyOg8wFipIJcg" name="removeTag" specification="_EBN1ILuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECtp87uTEeyOg8wFipIJcg" name="e" type="_D_aeULuTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>Alert alert = new Alert(AlertType.CONFIRMATION);&#xD;
		Photo photo = null;&#xD;
&#xD;
		if (pane00.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex);&#xD;
		} else if (pane10.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 1);&#xD;
		} else if (pane01.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 2);&#xD;
		} else if (pane11.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 3);&#xD;
		} else if (pane02.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 4);&#xD;
		} else if (pane12.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 5);&#xD;
		} else {&#xD;
			Alert alert2 = new Alert(AlertType.ERROR);&#xD;
			alert2.setTitle(&quot;You must specify a photo.&quot;);&#xD;
			Optional&lt;ButtonType> z = alert2.showAndWait();&#xD;
			if (z.get() == ButtonType.OK) {&#xD;
				alert2.close();&#xD;
			}&#xD;
		}&#xD;
&#xD;
		alert.setTitle(&quot;Remove Photo Tag&quot;);&#xD;
		alert.setHeaderText(&quot;Remove a photo tag&quot;);&#xD;
		alert.setResizable(true);&#xD;
		Label label1 = new Label(&quot;Tag Name: &quot;);&#xD;
		Label label2 = new Label(&quot;Tag Value: &quot;);&#xD;
&#xD;
		TextField tf = new TextField();&#xD;
		TextField tf2 = new TextField();&#xD;
&#xD;
		GridPane grid = new GridPane();&#xD;
		grid.add(label1, 1, 1);&#xD;
		grid.add(tf, 2, 1);&#xD;
		grid.add(label2, 1, 2);&#xD;
		grid.add(tf2, 2, 2);&#xD;
&#xD;
		alert.getDialogPane().setContent(grid);&#xD;
&#xD;
		Optional&lt;ButtonType> x = alert.showAndWait();&#xD;
&#xD;
		if (x.get() == ButtonType.OK) {&#xD;
&#xD;
			for (int i = 0; i &lt; photo.getTags().size(); i++) {&#xD;
&#xD;
				if (photo.getTags().get(i).getTagName().equals(tf.getText())&#xD;
						&amp;&amp; photo.getTags().get(i).getTagValue().equals(tf2.getText())) {&#xD;
&#xD;
					photo.removeTag(new Tag(tf.getText(), tf2.getText()));&#xD;
					return;&#xD;
				}&#xD;
			}&#xD;
&#xD;
			Alert alert2 = new Alert(AlertType.ERROR);&#xD;
			alert2.setContentText(&quot;There is no tag with that name and value.&quot;);&#xD;
&#xD;
			Optional&lt;ButtonType> y = alert2.showAndWait();&#xD;
&#xD;
			if (y.get() == ButtonType.OK) {&#xD;
				alert2.close();&#xD;
				return;&#xD;
			}&#xD;
		} else {&#xD;
&#xD;
		}&#xD;
&#xD;
		refresh();&#xD;
		insertImages();&#xD;
&#xD;
		try {&#xD;
			SerializableSave.save(users);&#xD;
		} catch (IOException e1) {&#xD;
			// TODO Auto-generated catch block&#xD;
			e1.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECtp9LuTEeyOg8wFipIJcg" name="copyPhoto" specification="_D7qmwbuTEeyOg8wFipIJcg">
          <language>java</language>
          <body>Alert alert = new Alert(AlertType.CONFIRMATION);&#xD;
		Photo photo = null;&#xD;
		Album album = null;&#xD;
&#xD;
		if (pane00.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex);&#xD;
		} else if (pane10.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 1);&#xD;
		} else if (pane01.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 2);&#xD;
		} else if (pane11.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 3);&#xD;
		} else if (pane02.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 4);&#xD;
		} else if (pane12.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 5);&#xD;
		} else {&#xD;
			Alert alert2 = new Alert(AlertType.ERROR);&#xD;
			alert2.setTitle(&quot;You must specify a photo.&quot;);&#xD;
			Optional&lt;ButtonType> z = alert2.showAndWait();&#xD;
			if (z.get() == ButtonType.OK) {&#xD;
				alert2.close();&#xD;
			}&#xD;
		}&#xD;
&#xD;
		alert.setTitle(&quot;Copy Photo&quot;);&#xD;
		alert.setHeaderText(&quot;Choose an album to copy into&quot;);&#xD;
		alert.setResizable(true);&#xD;
		Label label1 = new Label(&quot;Album Name: &quot;);&#xD;
&#xD;
		TextField tf = new TextField();&#xD;
&#xD;
		GridPane grid = new GridPane();&#xD;
		grid.add(label1, 1, 1);&#xD;
		grid.add(tf, 2, 1);&#xD;
&#xD;
		alert.getDialogPane().setContent(grid);&#xD;
&#xD;
		Optional&lt;ButtonType> bt = alert.showAndWait();&#xD;
&#xD;
		if (bt.get() == ButtonType.OK) {&#xD;
			String temp = tf.getText();&#xD;
			for (int i = 0; i &lt; currentUser.getAlbums().size(); i++) {&#xD;
				if (currentUser.getAlbums().get(i).getAlbumName().equalsIgnoreCase(temp)) {&#xD;
					album = currentUser.getAlbums().get(i);&#xD;
				}&#xD;
			}&#xD;
&#xD;
			if (album == null) {&#xD;
				Alert alert2 = new Alert(Alert.AlertType.ERROR);&#xD;
				alert2.setTitle(&quot;You must enter a valid Album name&quot;);&#xD;
				Optional&lt;ButtonType> z = alert2.showAndWait();&#xD;
				if (z.get() == ButtonType.OK) {&#xD;
					alert2.close();&#xD;
				}&#xD;
			} else {&#xD;
&#xD;
				Photo newPhoto = null;&#xD;
				// check to see if there's already a photo with it's name&#xD;
				for (int i = 0; i &lt; album.getPhotos().size(); i++) {&#xD;
&#xD;
					if (album.getPhotos().get(i).getPhotoName().equalsIgnoreCase(photo.getPhotoName())) {&#xD;
						newPhoto = new Photo();&#xD;
						newPhoto.setPhotoName(photo.getPhotoName() + &quot;0&quot;);&#xD;
						newPhoto.setCaption(photo.getCaption());&#xD;
						newPhoto.setPhoto(photo.getPhoto());&#xD;
						newPhoto.setTags(photo.getTags());&#xD;
						album.addPhoto(newPhoto);&#xD;
					}&#xD;
				}&#xD;
				if (newPhoto == null) {&#xD;
					album.addPhoto(photo);&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		refresh();&#xD;
		insertImages();&#xD;
		try {&#xD;
			SerializableSave.save(users);&#xD;
		} catch (IOException e) {&#xD;
			// TODO Auto-generated catch block&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECtp9buTEeyOg8wFipIJcg" name="movePhoto" specification="_D7rN0LuTEeyOg8wFipIJcg">
          <language>java</language>
          <body>Alert alert = new Alert(AlertType.CONFIRMATION);&#xD;
		Photo photo = null;&#xD;
		Album album = null;&#xD;
&#xD;
		if (pane00.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex);&#xD;
		} else if (pane10.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 1);&#xD;
		} else if (pane01.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 2);&#xD;
		} else if (pane11.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 3);&#xD;
		} else if (pane02.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 4);&#xD;
		} else if (pane12.getBorder().getStrokes().get(0).getWidths().getTop() == 10.0) {&#xD;
&#xD;
			photo = currentAlbum.getPhotos().get(currIndex + 5);&#xD;
		} else {&#xD;
			Alert alert2 = new Alert(AlertType.ERROR);&#xD;
			alert2.setTitle(&quot;You must specify a photo.&quot;);&#xD;
			Optional&lt;ButtonType> bt = alert2.showAndWait();&#xD;
			if (bt.get() == ButtonType.OK) {&#xD;
				alert2.close();&#xD;
			}&#xD;
		}&#xD;
&#xD;
		alert.setTitle(&quot;Move Photo&quot;);&#xD;
		alert.setHeaderText(&quot;Move photo to which album?&quot;);&#xD;
		alert.setResizable(true);&#xD;
		Label label1 = new Label(&quot;Album Name: &quot;);&#xD;
&#xD;
		TextField tf = new TextField();&#xD;
&#xD;
		GridPane grid = new GridPane();&#xD;
		grid.add(label1, 1, 1);&#xD;
		grid.add(tf, 2, 1);&#xD;
&#xD;
		alert.getDialogPane().setContent(grid);&#xD;
&#xD;
		Optional&lt;ButtonType> bt = alert.showAndWait();&#xD;
&#xD;
		if (bt.get() == ButtonType.OK) {&#xD;
			String temp = tf.getText();&#xD;
			for (int i = 0; i &lt; currentUser.getAlbums().size(); i++) {&#xD;
				if (currentUser.getAlbums().get(i).getAlbumName().equalsIgnoreCase(temp)&#xD;
						&amp;&amp; !(currentUser.getAlbums().get(i).getAlbumName().equals(currentAlbum.getAlbumName()))) {&#xD;
					album = currentUser.getAlbums().get(i);&#xD;
				}&#xD;
			}&#xD;
			if (album == null) {&#xD;
				Alert alert2 = new Alert(Alert.AlertType.ERROR);&#xD;
				alert2.setContentText(&quot;Enter a valid name.&quot;);&#xD;
				Optional&lt;ButtonType> bt1 = alert2.showAndWait();&#xD;
				if (bt1.get() == ButtonType.OK) {&#xD;
					alert2.close();&#xD;
				}&#xD;
			} else {&#xD;
				Photo newPhoto = null;&#xD;
				// check to see if there's already a photo with it's name&#xD;
				for (int i = 0; i &lt; album.getPhotos().size(); i++) {&#xD;
					if (album.getPhotos().get(i).getPhotoName().equalsIgnoreCase(photo.getPhotoName())) {&#xD;
						newPhoto = new Photo();&#xD;
						newPhoto.setPhotoName(photo.getPhotoName() + &quot;0&quot;);&#xD;
						newPhoto.setCaption(photo.getCaption());&#xD;
						newPhoto.setPhoto(photo.getPhoto());&#xD;
						newPhoto.setTags(photo.getTags());&#xD;
						album.addPhoto(newPhoto);&#xD;
						currentAlbum.deletePhoto(photo.getPhotoName());&#xD;
					}&#xD;
				}&#xD;
				if (newPhoto == null) {&#xD;
					album.addPhoto(photo);&#xD;
					currentAlbum.deletePhoto(photo.getPhotoName());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		refresh();&#xD;
		insertImages();&#xD;
		try {&#xD;
			SerializableSave.save(users);&#xD;
		} catch (IOException e) {&#xD;
			// TODO Auto-generated catch block&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECtp9ruTEeyOg8wFipIJcg" name="exit" specification="_EBN1IruTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECtp97uTEeyOg8wFipIJcg" name="e" type="_D_aeULuTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>Alert alert = new Alert(Alert.AlertType.CONFIRMATION);&#xD;
		alert.setTitle(&quot;Confirm Logout&quot;);&#xD;
		alert.setHeaderText(&quot;Are you sure?&quot;);&#xD;
&#xD;
		Optional&lt;ButtonType> b1 = alert.showAndWait();&#xD;
&#xD;
		if (b1.get() == ButtonType.OK) {&#xD;
&#xD;
			firstS.close();&#xD;
&#xD;
			FXMLLoader loader = new FXMLLoader();&#xD;
			loader.setLocation(getClass().getResource(&quot;/view/LoginScreen.fxml&quot;));&#xD;
			try {&#xD;
				AnchorPane root = (AnchorPane) loader.load();&#xD;
				LoginController loginview = loader.getController();&#xD;
				Stage stage = new Stage();&#xD;
				SerializableSave.save(users);&#xD;
				loginview.start(stage);&#xD;
				Scene scene = new Scene(root);&#xD;
				stage.setScene(scene);&#xD;
				stage.show();&#xD;
&#xD;
			} catch (IOException exception) {&#xD;
				exception.printStackTrace();&#xD;
			}&#xD;
&#xD;
		}&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_D7pYoLuTEeyOg8wFipIJcg" name="screenTransition" method="_ECtC4LuTEeyOg8wFipIJcg"/>
        <ownedOperation xmi:id="_D7p_sLuTEeyOg8wFipIJcg" name="nextPicture" method="_ECtC4buTEeyOg8wFipIJcg"/>
        <ownedOperation xmi:id="_D7p_sbuTEeyOg8wFipIJcg" name="prevPicture" method="_ECtC4ruTEeyOg8wFipIJcg"/>
        <ownedOperation xmi:id="_D7p_sruTEeyOg8wFipIJcg" name="refresh" method="_ECtC47uTEeyOg8wFipIJcg"/>
        <ownedOperation xmi:id="_D7qmwLuTEeyOg8wFipIJcg" name="insertImages" method="_ECtC5LuTEeyOg8wFipIJcg"/>
        <ownedOperation xmi:id="_D7qmwbuTEeyOg8wFipIJcg" name="copyPhoto" method="_ECtp9LuTEeyOg8wFipIJcg"/>
        <ownedOperation xmi:id="_D7rN0LuTEeyOg8wFipIJcg" name="movePhoto" method="_ECtp9buTEeyOg8wFipIJcg"/>
        <ownedOperation xmi:id="_EBKx0LuTEeyOg8wFipIJcg" name="start" method="_ECsb0LuTEeyOg8wFipIJcg" raisedException="_EAgDcLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EBLY4LuTEeyOg8wFipIJcg" name="firstS" type="_D_UXsLuTEeyOg8wFipIJcg"/>
          <ownedParameter xmi:id="_EBLY4buTEeyOg8wFipIJcg" name="albumIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_EBLY4ruTEeyOg8wFipIJcg" name="userIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_EBL_8LuTEeyOg8wFipIJcg" name="addPhotoToAlbum" method="_ECtC5buTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EBL_8buTEeyOg8wFipIJcg" name="event" type="_D_aeULuTEeyOg8wFipIJcg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EBMnALuTEeyOg8wFipIJcg" name="removePhotoFromAlbum" method="_ECtC57uTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EBMnAbuTEeyOg8wFipIJcg" name="e" type="_D_aeULuTEeyOg8wFipIJcg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EBMnAruTEeyOg8wFipIJcg" name="editName" method="_ECtC6buTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EBMnA7uTEeyOg8wFipIJcg" name="event" type="_D_aeULuTEeyOg8wFipIJcg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EBNOELuTEeyOg8wFipIJcg" name="editCaption" method="_ECtC67uTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EBNOEbuTEeyOg8wFipIJcg" name="e" type="_D_aeULuTEeyOg8wFipIJcg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EBNOEruTEeyOg8wFipIJcg" name="addTag" method="_ECtp8LuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EBNOE7uTEeyOg8wFipIJcg" name="e" type="_D_aeULuTEeyOg8wFipIJcg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EBN1ILuTEeyOg8wFipIJcg" name="removeTag" method="_ECtp8ruTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EBN1IbuTEeyOg8wFipIJcg" name="e" type="_D_aeULuTEeyOg8wFipIJcg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EBN1IruTEeyOg8wFipIJcg" name="exit" method="_ECtp9ruTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EBN1I7uTEeyOg8wFipIJcg" name="e" type="_D_aeULuTEeyOg8wFipIJcg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDBL8LuTEeyOg8wFipIJcg" name="" memberEnd="_EDBL8buTEeyOg8wFipIJcg _EBfh8buTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDBL8buTEeyOg8wFipIJcg" name="" type="_D6sWYLuTEeyOg8wFipIJcg" association="_EDBL8LuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDBzAbuTEeyOg8wFipIJcg" name="" memberEnd="_EDBzAruTEeyOg8wFipIJcg _EBgJA7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDBzAruTEeyOg8wFipIJcg" name="" type="_D6sWYLuTEeyOg8wFipIJcg" association="_EDBzAbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDCaEbuTEeyOg8wFipIJcg" name="" memberEnd="_EDCaEruTEeyOg8wFipIJcg _EBgwE7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDCaEruTEeyOg8wFipIJcg" name="" type="_D6sWYLuTEeyOg8wFipIJcg" association="_EDCaEbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDDBILuTEeyOg8wFipIJcg" name="" memberEnd="_EDDBIbuTEeyOg8wFipIJcg _EBhXIruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDDBIbuTEeyOg8wFipIJcg" name="" type="_D6sWYLuTEeyOg8wFipIJcg" association="_EDDBILuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDDBI7uTEeyOg8wFipIJcg" name="" memberEnd="_EDDBJLuTEeyOg8wFipIJcg _EBh-MLuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDDBJLuTEeyOg8wFipIJcg" name="" type="_D6sWYLuTEeyOg8wFipIJcg" association="_EDDBI7uTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDDoMbuTEeyOg8wFipIJcg" name="" memberEnd="_EDDoMruTEeyOg8wFipIJcg _EBh-NLuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDDoMruTEeyOg8wFipIJcg" name="" type="_D6sWYLuTEeyOg8wFipIJcg" association="_EDDoMbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDEPQLuTEeyOg8wFipIJcg" name="" memberEnd="_EDEPQbuTEeyOg8wFipIJcg _EBilQ7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDEPQbuTEeyOg8wFipIJcg" name="" type="_D6sWYLuTEeyOg8wFipIJcg" association="_EDEPQLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDE2ULuTEeyOg8wFipIJcg" name="" memberEnd="_EDE2UbuTEeyOg8wFipIJcg _EBjMUruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDE2UbuTEeyOg8wFipIJcg" name="" type="_D6sWYLuTEeyOg8wFipIJcg" association="_EDE2ULuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDE2U7uTEeyOg8wFipIJcg" name="" memberEnd="_EDE2VLuTEeyOg8wFipIJcg _EBkacruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDE2VLuTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDE2U7uTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDFdYbuTEeyOg8wFipIJcg" name="" memberEnd="_EDFdYruTEeyOg8wFipIJcg _EBlBg7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDFdYruTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDFdYbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDGEcbuTEeyOg8wFipIJcg" name="" memberEnd="_EDGEcruTEeyOg8wFipIJcg _EBlok7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDGEcruTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDGEcbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDGEdLuTEeyOg8wFipIJcg" name="" memberEnd="_EDGEdbuTEeyOg8wFipIJcg _EBmPoLuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDGEdbuTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDGEdLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDGrgbuTEeyOg8wFipIJcg" name="" memberEnd="_EDGrgruTEeyOg8wFipIJcg _EBmPo7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDGrgruTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDGrgbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDGrhLuTEeyOg8wFipIJcg" name="" memberEnd="_EDGrhbuTEeyOg8wFipIJcg _EBndwLuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDGrhbuTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDGrhLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDHSkbuTEeyOg8wFipIJcg" name="" memberEnd="_EDHSkruTEeyOg8wFipIJcg _EBndxLuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDHSkruTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDHSkbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDH5obuTEeyOg8wFipIJcg" name="" memberEnd="_EDH5oruTEeyOg8wFipIJcg _EBoE07uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDH5oruTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDH5obuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDH5pLuTEeyOg8wFipIJcg" name="" memberEnd="_EDH5pbuTEeyOg8wFipIJcg _EBor4ruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDH5pbuTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDH5pLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDIgsbuTEeyOg8wFipIJcg" name="" memberEnd="_EDIgsruTEeyOg8wFipIJcg _EBpS8ruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDIgsruTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDIgsbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDIgtLuTEeyOg8wFipIJcg" name="" memberEnd="_EDIgtbuTEeyOg8wFipIJcg _EBpS9ruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDIgtbuTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDIgtLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDJHwbuTEeyOg8wFipIJcg" name="" memberEnd="_EDJHwruTEeyOg8wFipIJcg _EBp6A7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDJHwruTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDJHwbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDJu0buTEeyOg8wFipIJcg" name="" memberEnd="_EDJu0ruTEeyOg8wFipIJcg _EBqhE7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDJu0ruTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDJu0buTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDJu1LuTEeyOg8wFipIJcg" name="" memberEnd="_EDJu1buTEeyOg8wFipIJcg _EBrIIruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDJu1buTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDJu1LuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDKV4buTEeyOg8wFipIJcg" name="" memberEnd="_EDKV4ruTEeyOg8wFipIJcg _EBrvM7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDKV4ruTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDKV4buTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDK88LuTEeyOg8wFipIJcg" name="" memberEnd="_EDK88buTEeyOg8wFipIJcg _EBsWQruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDK88buTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDK88LuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDK887uTEeyOg8wFipIJcg" name="" memberEnd="_EDK89LuTEeyOg8wFipIJcg _EBs9UruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDK89LuTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDK887uTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDLkAbuTEeyOg8wFipIJcg" name="" memberEnd="_EDLkAruTEeyOg8wFipIJcg _EBtkYruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDLkAruTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDLkAbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDLkBLuTEeyOg8wFipIJcg" name="" memberEnd="_EDLkBbuTEeyOg8wFipIJcg _EBuLcruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDLkBbuTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDLkBLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDMLEbuTEeyOg8wFipIJcg" name="" memberEnd="_EDMLEruTEeyOg8wFipIJcg _EBuygLuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDMLEruTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDMLEbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDMyIbuTEeyOg8wFipIJcg" name="" memberEnd="_EDMyIruTEeyOg8wFipIJcg _EBuyhLuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDMyIruTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDMyIbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDMyJLuTEeyOg8wFipIJcg" name="" memberEnd="_EDMyJbuTEeyOg8wFipIJcg _EBvZkruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDMyJbuTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDMyJLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDNZMbuTEeyOg8wFipIJcg" name="" memberEnd="_EDNZMruTEeyOg8wFipIJcg _EBvZlruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDNZMruTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDNZMbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDOAQbuTEeyOg8wFipIJcg" name="" memberEnd="_EDOAQruTEeyOg8wFipIJcg _EBwAo7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDOAQruTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDOAQbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDOARLuTEeyOg8wFipIJcg" name="" memberEnd="_EDOARbuTEeyOg8wFipIJcg _EBwnsruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDOARbuTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDOARLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDOnUbuTEeyOg8wFipIJcg" name="" memberEnd="_EDOnUruTEeyOg8wFipIJcg _EBwntruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDOnUruTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDOnUbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDOnVLuTEeyOg8wFipIJcg" name="" memberEnd="_EDOnVbuTEeyOg8wFipIJcg _EBxOw7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDOnVbuTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDOnVLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDPOYbuTEeyOg8wFipIJcg" name="" memberEnd="_EDPOYruTEeyOg8wFipIJcg _EBx10ruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDPOYruTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDPOYbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDPOZLuTEeyOg8wFipIJcg" name="" memberEnd="_EDPOZbuTEeyOg8wFipIJcg _EBzD8buTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDPOZbuTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDPOZLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDPOZ7uTEeyOg8wFipIJcg" name="" memberEnd="_EDPOaLuTEeyOg8wFipIJcg _EBzrAruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDPOaLuTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDPOZ7uTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDP1cbuTEeyOg8wFipIJcg" name="" memberEnd="_EDP1cruTEeyOg8wFipIJcg _EBzrBruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDP1cruTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDP1cbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDP1dLuTEeyOg8wFipIJcg" name="" memberEnd="_EDP1dbuTEeyOg8wFipIJcg _EB05IbuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDP1dbuTEeyOg8wFipIJcg" name="" type="_D63VgLuTEeyOg8wFipIJcg" association="_EDP1dLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDQcgbuTEeyOg8wFipIJcg" name="" memberEnd="_EDQcgruTEeyOg8wFipIJcg _EB2HQLuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDQcgruTEeyOg8wFipIJcg" name="" type="_D7MssLuTEeyOg8wFipIJcg" association="_EDQcgbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDQchLuTEeyOg8wFipIJcg" name="" memberEnd="_EDQchbuTEeyOg8wFipIJcg _EB2HRLuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDQchbuTEeyOg8wFipIJcg" name="" type="_D7MssLuTEeyOg8wFipIJcg" association="_EDQchLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDRDkbuTEeyOg8wFipIJcg" name="" memberEnd="_EDRDkruTEeyOg8wFipIJcg _EB2uU7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDRDkruTEeyOg8wFipIJcg" name="" type="_D7MssLuTEeyOg8wFipIJcg" association="_EDRDkbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDRDlLuTEeyOg8wFipIJcg" name="" memberEnd="_EDRDlbuTEeyOg8wFipIJcg _EB2uV7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDRDlbuTEeyOg8wFipIJcg" name="" type="_D7MssLuTEeyOg8wFipIJcg" association="_EDRDlLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDRqoLuTEeyOg8wFipIJcg" name="" memberEnd="_EDRqobuTEeyOg8wFipIJcg _EB3VY7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDRqobuTEeyOg8wFipIJcg" name="" type="_D7MssLuTEeyOg8wFipIJcg" association="_EDRqoLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDRqo7uTEeyOg8wFipIJcg" name="" memberEnd="_EDRqpLuTEeyOg8wFipIJcg _EB38cruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDRqpLuTEeyOg8wFipIJcg" name="" type="_D7MssLuTEeyOg8wFipIJcg" association="_EDRqo7uTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDRqpruTEeyOg8wFipIJcg" name="" memberEnd="_EDRqp7uTEeyOg8wFipIJcg _EB38dLuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDRqp7uTEeyOg8wFipIJcg" name="" type="_D7MssLuTEeyOg8wFipIJcg" association="_EDRqpruTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDSRsbuTEeyOg8wFipIJcg" name="" memberEnd="_EDSRsruTEeyOg8wFipIJcg _EB5KkLuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDSRsruTEeyOg8wFipIJcg" name="" type="_D7TaYLuTEeyOg8wFipIJcg" association="_EDSRsbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDSRtLuTEeyOg8wFipIJcg" name="" memberEnd="_EDSRtbuTEeyOg8wFipIJcg _EB5KlLuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDSRtbuTEeyOg8wFipIJcg" name="" type="_D7TaYLuTEeyOg8wFipIJcg" association="_EDSRtLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDS4wbuTEeyOg8wFipIJcg" name="" memberEnd="_EDS4wruTEeyOg8wFipIJcg _EB5xo7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDS4wruTEeyOg8wFipIJcg" name="" type="_D7TaYLuTEeyOg8wFipIJcg" association="_EDS4wbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDS4xLuTEeyOg8wFipIJcg" name="" memberEnd="_EDS4xbuTEeyOg8wFipIJcg _EB6YsbuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDS4xbuTEeyOg8wFipIJcg" name="" type="_D7TaYLuTEeyOg8wFipIJcg" association="_EDS4xLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDTf0LuTEeyOg8wFipIJcg" name="" memberEnd="_EDTf0buTEeyOg8wFipIJcg _EB6YtbuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDTf0buTEeyOg8wFipIJcg" name="" type="_D7TaYLuTEeyOg8wFipIJcg" association="_EDTf0LuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDTf07uTEeyOg8wFipIJcg" name="" memberEnd="_EDTf1LuTEeyOg8wFipIJcg _EB6_wruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDTf1LuTEeyOg8wFipIJcg" name="" type="_D7TaYLuTEeyOg8wFipIJcg" association="_EDTf07uTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDTf1ruTEeyOg8wFipIJcg" name="" memberEnd="_EDTf17uTEeyOg8wFipIJcg _EB6_xruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDTf17uTEeyOg8wFipIJcg" name="" type="_D7TaYLuTEeyOg8wFipIJcg" association="_EDTf1ruTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDUG4buTEeyOg8wFipIJcg" name="" memberEnd="_EDUG4ruTEeyOg8wFipIJcg _EB7m07uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDUG4ruTEeyOg8wFipIJcg" name="" type="_D7TaYLuTEeyOg8wFipIJcg" association="_EDUG4buTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDUG5LuTEeyOg8wFipIJcg" name="" memberEnd="_EDUG5buTEeyOg8wFipIJcg _EB8N4ruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDUG5buTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDUG5LuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDUt8buTEeyOg8wFipIJcg" name="" memberEnd="_EDUt8ruTEeyOg8wFipIJcg _EB8087uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDUt8ruTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDUt8buTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDUt9LuTEeyOg8wFipIJcg" name="" memberEnd="_EDUt9buTEeyOg8wFipIJcg _EB9cAruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDUt9buTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDUt9LuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDVVALuTEeyOg8wFipIJcg" name="" memberEnd="_EDVVAbuTEeyOg8wFipIJcg _EB9cBruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDVVAbuTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDVVALuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDVVA7uTEeyOg8wFipIJcg" name="" memberEnd="_EDVVBLuTEeyOg8wFipIJcg _EB-DE7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDVVBLuTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDVVA7uTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDVVBruTEeyOg8wFipIJcg" name="" memberEnd="_EDVVB7uTEeyOg8wFipIJcg _EB-qILuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDVVB7uTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDVVBruTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDV8EbuTEeyOg8wFipIJcg" name="" memberEnd="_EDV8EruTEeyOg8wFipIJcg _EB-qJLuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDV8EruTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDV8EbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDV8FLuTEeyOg8wFipIJcg" name="" memberEnd="_EDV8FbuTEeyOg8wFipIJcg _EB_RMruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDV8FbuTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDV8FLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDWjIbuTEeyOg8wFipIJcg" name="" memberEnd="_EDWjIruTEeyOg8wFipIJcg _EB_RNruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDWjIruTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDWjIbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDWjJLuTEeyOg8wFipIJcg" name="" memberEnd="_EDWjJbuTEeyOg8wFipIJcg _EB_4Q7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDWjJbuTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDWjJLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDWjJ7uTEeyOg8wFipIJcg" name="" memberEnd="_EDWjKLuTEeyOg8wFipIJcg _ECAfULuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDWjKLuTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDWjJ7uTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDXKMbuTEeyOg8wFipIJcg" name="" memberEnd="_EDXKMruTEeyOg8wFipIJcg _ECAfVLuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDXKMruTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDXKMbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDXKNLuTEeyOg8wFipIJcg" name="" memberEnd="_EDXKNbuTEeyOg8wFipIJcg _ECBGY7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDXKNbuTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDXKNLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDXxQbuTEeyOg8wFipIJcg" name="" memberEnd="_EDXxQruTEeyOg8wFipIJcg _ECBGZ7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDXxQruTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDXxQbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDYYUbuTEeyOg8wFipIJcg" name="" memberEnd="_EDYYUruTEeyOg8wFipIJcg _ECBtc7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDYYUruTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDYYUbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDY_YbuTEeyOg8wFipIJcg" name="" memberEnd="_EDY_YruTEeyOg8wFipIJcg _ECCUgLuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDY_YruTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDY_YbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDY_ZLuTEeyOg8wFipIJcg" name="" memberEnd="_EDY_ZbuTEeyOg8wFipIJcg _ECCUhLuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDY_ZbuTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDY_ZLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDZmcbuTEeyOg8wFipIJcg" name="" memberEnd="_EDZmcruTEeyOg8wFipIJcg _ECC7k7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDZmcruTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDZmcbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDZmdLuTEeyOg8wFipIJcg" name="" memberEnd="_EDZmdbuTEeyOg8wFipIJcg _ECC7l7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDZmdbuTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDZmdLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDaNgbuTEeyOg8wFipIJcg" name="" memberEnd="_EDaNgruTEeyOg8wFipIJcg _ECDio7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDaNgruTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDaNgbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDaNhLuTEeyOg8wFipIJcg" name="" memberEnd="_EDaNhbuTEeyOg8wFipIJcg _ECDip7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDaNhbuTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDaNhLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDaNh7uTEeyOg8wFipIJcg" name="" memberEnd="_EDaNiLuTEeyOg8wFipIJcg _ECEJs7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDaNiLuTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDaNh7uTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDa0kbuTEeyOg8wFipIJcg" name="" memberEnd="_EDa0kruTEeyOg8wFipIJcg _ECEwwLuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDa0kruTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDa0kbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDa0lLuTEeyOg8wFipIJcg" name="" memberEnd="_EDa0lbuTEeyOg8wFipIJcg _ECEwxLuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDa0lbuTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDa0lLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDbbobuTEeyOg8wFipIJcg" name="" memberEnd="_EDbboruTEeyOg8wFipIJcg _ECFX0LuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDbboruTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDbbobuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDbbpLuTEeyOg8wFipIJcg" name="" memberEnd="_EDbbpbuTEeyOg8wFipIJcg _ECFX1LuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDbbpbuTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDbbpLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDcCsbuTEeyOg8wFipIJcg" name="" memberEnd="_EDcCsruTEeyOg8wFipIJcg _ECF-4ruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDcCsruTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDcCsbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDcCtLuTEeyOg8wFipIJcg" name="" memberEnd="_EDcCtbuTEeyOg8wFipIJcg _ECF-5LuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDcCtbuTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDcCtLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDcpwbuTEeyOg8wFipIJcg" name="" memberEnd="_EDcpwruTEeyOg8wFipIJcg _ECHNAbuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDcpwruTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDcpwbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDcpxLuTEeyOg8wFipIJcg" name="" memberEnd="_EDcpxbuTEeyOg8wFipIJcg _ECIbILuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDcpxbuTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDcpxLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDdQ0LuTEeyOg8wFipIJcg" name="" memberEnd="_EDdQ0buTEeyOg8wFipIJcg _ECIbJLuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDdQ0buTEeyOg8wFipIJcg" name="" type="_D7XEwLuTEeyOg8wFipIJcg" association="_EDdQ0LuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDdQ07uTEeyOg8wFipIJcg" name="" memberEnd="_EDdQ1LuTEeyOg8wFipIJcg _ECKQULuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDdQ1LuTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDdQ07uTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDd34buTEeyOg8wFipIJcg" name="" memberEnd="_EDd34ruTEeyOg8wFipIJcg _ECK3YbuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDd34ruTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDd34buTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDd35LuTEeyOg8wFipIJcg" name="" memberEnd="_EDd35buTEeyOg8wFipIJcg _ECLec7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDd35buTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDd35LuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDd357uTEeyOg8wFipIJcg" name="" memberEnd="_EDd36LuTEeyOg8wFipIJcg _ECMFgruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDd36LuTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDd357uTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDee8buTEeyOg8wFipIJcg" name="" memberEnd="_EDee8ruTEeyOg8wFipIJcg _ECMFhruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDee8ruTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDee8buTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDee9LuTEeyOg8wFipIJcg" name="" memberEnd="_EDee9buTEeyOg8wFipIJcg _ECMsk7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDee9buTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDee9LuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDfGAbuTEeyOg8wFipIJcg" name="" memberEnd="_EDfGAruTEeyOg8wFipIJcg _ECNToLuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDfGAruTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDfGAbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDfGBLuTEeyOg8wFipIJcg" name="" memberEnd="_EDfGBbuTEeyOg8wFipIJcg _ECNTpLuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDfGBbuTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDfGBLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDftEbuTEeyOg8wFipIJcg" name="" memberEnd="_EDftEruTEeyOg8wFipIJcg _ECN6sruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDftEruTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDftEbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDftFLuTEeyOg8wFipIJcg" name="" memberEnd="_EDftFbuTEeyOg8wFipIJcg _ECN6truTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDftFbuTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDftFLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDftF7uTEeyOg8wFipIJcg" name="" memberEnd="_EDftGLuTEeyOg8wFipIJcg _ECOhw7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDftGLuTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDftF7uTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDgUIbuTEeyOg8wFipIJcg" name="" memberEnd="_EDgUIruTEeyOg8wFipIJcg _ECOhx7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDgUIruTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDgUIbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDgUJLuTEeyOg8wFipIJcg" name="" memberEnd="_EDgUJbuTEeyOg8wFipIJcg _ECPI07uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDgUJbuTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDgUJLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDg7MbuTEeyOg8wFipIJcg" name="" memberEnd="_EDg7MruTEeyOg8wFipIJcg _ECPI17uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDg7MruTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDg7MbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDg7NLuTEeyOg8wFipIJcg" name="" memberEnd="_EDg7NbuTEeyOg8wFipIJcg _ECPv47uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDg7NbuTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDg7NLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDhiQbuTEeyOg8wFipIJcg" name="" memberEnd="_EDhiQruTEeyOg8wFipIJcg _ECQW8ruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDhiQruTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDhiQbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDiJULuTEeyOg8wFipIJcg" name="" memberEnd="_EDiJUbuTEeyOg8wFipIJcg _ECQ-ALuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDiJUbuTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDiJULuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDiJU7uTEeyOg8wFipIJcg" name="" memberEnd="_EDiJVLuTEeyOg8wFipIJcg _ECQ-BLuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDiJVLuTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDiJU7uTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDiJVruTEeyOg8wFipIJcg" name="" memberEnd="_EDiJV7uTEeyOg8wFipIJcg _ECRlEbuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDiJV7uTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDiJVruTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDiwYbuTEeyOg8wFipIJcg" name="" memberEnd="_EDiwYruTEeyOg8wFipIJcg _ECRlFbuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDiwYruTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDiwYbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDiwZLuTEeyOg8wFipIJcg" name="" memberEnd="_EDiwZbuTEeyOg8wFipIJcg _ECSMIruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDiwZbuTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDiwZLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDjXcbuTEeyOg8wFipIJcg" name="" memberEnd="_EDjXcruTEeyOg8wFipIJcg _ECSMJruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDjXcruTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDjXcbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDjXdLuTEeyOg8wFipIJcg" name="" memberEnd="_EDjXdbuTEeyOg8wFipIJcg _ECSzMruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDjXdbuTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDjXdLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDj-gbuTEeyOg8wFipIJcg" name="" memberEnd="_EDj-gruTEeyOg8wFipIJcg _ECSzNruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDj-gruTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDj-gbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDj-hLuTEeyOg8wFipIJcg" name="" memberEnd="_EDj-hbuTEeyOg8wFipIJcg _ECTaQ7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDj-hbuTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDj-hLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDklkLuTEeyOg8wFipIJcg" name="" memberEnd="_EDklkbuTEeyOg8wFipIJcg _ECTaR7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDklkbuTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDklkLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDklk7uTEeyOg8wFipIJcg" name="" memberEnd="_EDkllLuTEeyOg8wFipIJcg _ECUBU7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDkllLuTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDklk7uTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDkllruTEeyOg8wFipIJcg" name="" memberEnd="_EDkll7uTEeyOg8wFipIJcg _ECUoYLuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDkll7uTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDkllruTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDlMobuTEeyOg8wFipIJcg" name="" memberEnd="_EDlMoruTEeyOg8wFipIJcg _ECUoYruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDlMoruTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDlMobuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDlMpLuTEeyOg8wFipIJcg" name="" memberEnd="_EDlMpbuTEeyOg8wFipIJcg _ECUoZLuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDlMpbuTEeyOg8wFipIJcg" name="" type="_D7luQLuTEeyOg8wFipIJcg" association="_EDlMpLuTEeyOg8wFipIJcg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_D5A7YLuTEeyOg8wFipIJcg" name="app">
      <packagedElement xmi:type="uml:Class" xmi:id="_D6mPwLuTEeyOg8wFipIJcg" name="Photos">
        <generalization xmi:id="_EAjGwruTEeyOg8wFipIJcg" general="_D_SigLuTEeyOg8wFipIJcg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECjR4LuTEeyOg8wFipIJcg" name="start" specification="_EAgqgbuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECj48LuTEeyOg8wFipIJcg" name="primaryStage" type="_D_UXsLuTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>FXMLLoader loader = new FXMLLoader();&#xD;
		loader.setLocation(getClass().getResource(&quot;/view/LoginScreen.fxml&quot;));&#xD;
&#xD;
		Parent root = (Parent) loader.load();&#xD;
&#xD;
		LoginController login = loader.getController();&#xD;
		login.start(primaryStage);&#xD;
&#xD;
		Scene scene = new Scene(root);&#xD;
		primaryStage.setScene(scene);&#xD;
		primaryStage.setTitle(&quot;Photo Library - Dev Patel &amp; Harshil Patel&quot;);&#xD;
		primaryStage.setResizable(false);&#xD;
		primaryStage.show();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECmVMLuTEeyOg8wFipIJcg" name="main" specification="_D6p6ILuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECmVMbuTEeyOg8wFipIJcg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ECmVMruTEeyOg8wFipIJcg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>//		&#xD;
//		Path filep = Paths.get(&quot;users.ser&quot;);&#xD;
//		if (Files.exists(filep) == false) {&#xD;
//			&#xD;
//		}&#xD;
		launch(args);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_D6p6ILuTEeyOg8wFipIJcg" name="main" isStatic="true" method="_ECmVMLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_D6p6IbuTEeyOg8wFipIJcg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_D6rIQLuTEeyOg8wFipIJcg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_EAgqgbuTEeyOg8wFipIJcg" name="start" method="_ECjR4LuTEeyOg8wFipIJcg" raisedException="_EAgDcLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EAgqgruTEeyOg8wFipIJcg" name="primaryStage" type="_D_UXsLuTEeyOg8wFipIJcg"/>
        </ownedOperation>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_D5CwkLuTEeyOg8wFipIJcg" name="model">
      <packagedElement xmi:type="uml:Class" xmi:id="_D72M8LuTEeyOg8wFipIJcg" name="Album">
        <ownedAttribute xmi:id="_ECWdkLuTEeyOg8wFipIJcg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_ECXEoLuTEeyOg8wFipIJcg" value="1L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ECXEobuTEeyOg8wFipIJcg" name="albumName">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ECXEoruTEeyOg8wFipIJcg" name="photos" type="_D_dhoruTEeyOg8wFipIJcg" association="_EDlzsbuTEeyOg8wFipIJcg"/>
        <interfaceRealization xmi:id="_EBStoLuTEeyOg8wFipIJcg" client="_D72M8LuTEeyOg8wFipIJcg" supplier="_D_dhoLuTEeyOg8wFipIJcg" contract="_D_dhoLuTEeyOg8wFipIJcg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECuRALuTEeyOg8wFipIJcg" name="Album" specification="_D73bELuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECuRAbuTEeyOg8wFipIJcg" type="_D72M8LuTEeyOg8wFipIJcg" direction="return"/>
          <language>java</language>
          <body>this.photos = new ArrayList&lt;Photo>();&#xD;
		this.albumName = albumName;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECuRAruTEeyOg8wFipIJcg" name="getAlbumSize" specification="_D73bFLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECuRA7uTEeyOg8wFipIJcg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return photos.size();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECu4ELuTEeyOg8wFipIJcg" name="renameAlbum" specification="_D74CIbuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECu4EbuTEeyOg8wFipIJcg" name="newName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>this.albumName = newName;&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECu4EruTEeyOg8wFipIJcg" name="addPhoto" specification="_EAIQALuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECu4E7uTEeyOg8wFipIJcg" name="photo" type="_D75QQLuTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>if (photos == null) {&#xD;
			photos = new ArrayList&lt;Photo>();&#xD;
		}&#xD;
&#xD;
		// Scan through the photos in the album&#xD;
		for (int i = 0; i &lt; photos.size(); i++) {&#xD;
&#xD;
			// Check to see if there are any other photos with the same name&#xD;
			if (photos.get(i).getPhotoName().equalsIgnoreCase(photo.getPhotoName())) {&#xD;
&#xD;
				Alert alert = new Alert(AlertType.ERROR);&#xD;
				alert.setTitle(&quot;Name already exists&quot;);&#xD;
				Optional&lt;ButtonType> result = alert.showAndWait();&#xD;
				if (result.get() == ButtonType.OK) {&#xD;
					alert.close();&#xD;
				}&#xD;
				return;&#xD;
			}&#xD;
		}&#xD;
		photos.add(photo);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECu4FLuTEeyOg8wFipIJcg" name="deletePhoto" specification="_D74CI7uTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECu4FbuTEeyOg8wFipIJcg" name="photoName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>if (photos.size() == 0) {&#xD;
			Alert alert2 = new Alert(AlertType.ERROR);&#xD;
			alert2.setTitle(&quot;No photos in this album.&quot;);&#xD;
			Optional&lt;ButtonType> z = alert2.showAndWait();&#xD;
			if (z.get() == ButtonType.OK) {&#xD;
				alert2.close();&#xD;
			}&#xD;
		}&#xD;
&#xD;
		for (int i = 0; i &lt; photos.size(); i++) {&#xD;
			if (photos.get(i).getPhotoName().equalsIgnoreCase(photoName)) {&#xD;
				photos.remove(i);&#xD;
				return;&#xD;
			}&#xD;
		}&#xD;
&#xD;
		Alert alert = new Alert(AlertType.ERROR);&#xD;
		alert.setTitle(&quot;Photo not found.&quot;);&#xD;
		Optional&lt;ButtonType> result = alert.showAndWait();&#xD;
		if (result.get() == ButtonType.OK) {&#xD;
			alert.close();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_D73bELuTEeyOg8wFipIJcg" name="Album" method="_ECuRALuTEeyOg8wFipIJcg">
          <eAnnotations xmi:id="_D73bEbuTEeyOg8wFipIJcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_D73bEruTEeyOg8wFipIJcg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_D73bE7uTEeyOg8wFipIJcg" type="_D72M8LuTEeyOg8wFipIJcg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_D73bFLuTEeyOg8wFipIJcg" name="getAlbumSize" method="_ECuRAruTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_D74CILuTEeyOg8wFipIJcg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_D74CIbuTEeyOg8wFipIJcg" name="renameAlbum" method="_ECu4ELuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_D74CIruTEeyOg8wFipIJcg" name="newName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_D74CI7uTEeyOg8wFipIJcg" name="deletePhoto" method="_ECu4FLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_D74CJLuTEeyOg8wFipIJcg" name="photoName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_EAIQALuTEeyOg8wFipIJcg" name="addPhoto" method="_ECu4EruTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EAIQAbuTEeyOg8wFipIJcg" name="photo" type="_D75QQLuTEeyOg8wFipIJcg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_D75QQLuTEeyOg8wFipIJcg" name="Photo">
        <ownedAttribute xmi:id="_ECXrsbuTEeyOg8wFipIJcg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_ECYSwLuTEeyOg8wFipIJcg" value="1L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ECYSwbuTEeyOg8wFipIJcg" name="photo" type="_D_mEgbuTEeyOg8wFipIJcg" association="_EDlztLuTEeyOg8wFipIJcg">
          <eAnnotations xmi:id="_ECYSwruTEeyOg8wFipIJcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_ECYSw7uTEeyOg8wFipIJcg" key="transient"/>
          </eAnnotations>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ECYSxLuTEeyOg8wFipIJcg" name="location">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ECYSxbuTEeyOg8wFipIJcg" name="photoName">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ECYSxruTEeyOg8wFipIJcg" name="caption">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ECY50LuTEeyOg8wFipIJcg" name="fileType">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ECY50buTEeyOg8wFipIJcg" name="tags" type="_D_dhoruTEeyOg8wFipIJcg" association="_EDlzt7uTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECZg4LuTEeyOg8wFipIJcg" name="albums" type="_D_dhoruTEeyOg8wFipIJcg" association="_EDmawbuTEeyOg8wFipIJcg"/>
        <ownedAttribute xmi:id="_ECZg4ruTEeyOg8wFipIJcg" name="date" type="_D_3KQruTEeyOg8wFipIJcg" isReadOnly="true"/>
        <interfaceRealization xmi:id="_EBT7wLuTEeyOg8wFipIJcg" client="_D75QQLuTEeyOg8wFipIJcg" supplier="_D_dhoLuTEeyOg8wFipIJcg" contract="_D_dhoLuTEeyOg8wFipIJcg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECu4FruTEeyOg8wFipIJcg" name="Photo" specification="_D76eYLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECu4F7uTEeyOg8wFipIJcg" type="_D75QQLuTEeyOg8wFipIJcg" direction="return"/>
          <language>java</language>
          <body>this.date = Calendar.getInstance().getTime();&#xD;
		photo = null;&#xD;
		this.tags = new ArrayList&lt;Tag>();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECu4GLuTEeyOg8wFipIJcg" name="Photo" specification="_EBVJ4LuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECu4GbuTEeyOg8wFipIJcg" name="photo" type="_D_mEgbuTEeyOg8wFipIJcg"/>
          <ownedParameter xmi:id="_ECu4GruTEeyOg8wFipIJcg" type="_D75QQLuTEeyOg8wFipIJcg" direction="return"/>
          <language>java</language>
          <body>this.photo = photo;&#xD;
		this.tags = new ArrayList&lt;Tag>();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECvfILuTEeyOg8wFipIJcg" name="addTag" specification="_D77FcbuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECvfIbuTEeyOg8wFipIJcg" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_ECvfIruTEeyOg8wFipIJcg" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>if (name == null || value == null) {&#xD;
			return;&#xD;
		}&#xD;
		for (int i = 0; i &lt; tags.size(); i++) {&#xD;
			if (tags.get(i).getTagName().equalsIgnoreCase(name.toLowerCase())&#xD;
					&amp;&amp; tags.get(i).getTagValue().equalsIgnoreCase(value.toLowerCase())) {&#xD;
				return;&#xD;
			}&#xD;
		}&#xD;
		tags.add(new Tag(name, value));&#xD;
		return;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECvfI7uTEeyOg8wFipIJcg" name="removeTag" specification="_EAKsQLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECvfJLuTEeyOg8wFipIJcg" name="tag" type="_D8AlALuTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>if (tag.getTagName() == null || tag.getTagValue() == null) {&#xD;
			return;&#xD;
		}&#xD;
		for (int i = 0; i &lt; tags.size(); i++) {&#xD;
			if (tags.get(i).getTagName().equalsIgnoreCase(tag.getTagName().toLowerCase())&#xD;
					&amp;&amp; tags.get(i).getTagValue().equalsIgnoreCase(tag.getTagValue().toLowerCase())) {&#xD;
				tags.remove(i);&#xD;
				return;&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_D76eYLuTEeyOg8wFipIJcg" name="Photo" method="_ECu4FruTEeyOg8wFipIJcg">
          <eAnnotations xmi:id="_D76eYbuTEeyOg8wFipIJcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_D76eYruTEeyOg8wFipIJcg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_D77FcLuTEeyOg8wFipIJcg" type="_D75QQLuTEeyOg8wFipIJcg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_D77FcbuTEeyOg8wFipIJcg" name="addTag" method="_ECvfILuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_D77FcruTEeyOg8wFipIJcg" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_D77Fc7uTEeyOg8wFipIJcg" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_EAKsQLuTEeyOg8wFipIJcg" name="removeTag" method="_ECvfI7uTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EAKsQbuTEeyOg8wFipIJcg" name="tag" type="_D8AlALuTEeyOg8wFipIJcg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EBVJ4LuTEeyOg8wFipIJcg" name="Photo" method="_ECu4GLuTEeyOg8wFipIJcg">
          <eAnnotations xmi:id="_EBVJ4ruTEeyOg8wFipIJcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_EBVJ47uTEeyOg8wFipIJcg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_EBVJ4buTEeyOg8wFipIJcg" name="photo" type="_D_mEgbuTEeyOg8wFipIJcg"/>
          <ownedParameter xmi:id="_EBVJ5LuTEeyOg8wFipIJcg" type="_D75QQLuTEeyOg8wFipIJcg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_D79hsLuTEeyOg8wFipIJcg" name="SerializableSave">
        <ownedAttribute xmi:id="_ECaH8LuTEeyOg8wFipIJcg" name="storage" visibility="package" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_ECaH8buTEeyOg8wFipIJcg" value="&quot;src/users.dat&quot;"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_EBWYALuTEeyOg8wFipIJcg" client="_D79hsLuTEeyOg8wFipIJcg" supplier="_D_dhoLuTEeyOg8wFipIJcg" contract="_D_dhoLuTEeyOg8wFipIJcg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECwGMLuTEeyOg8wFipIJcg" name="write" specification="_EBWYAbuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECwGMbuTEeyOg8wFipIJcg" name="users" type="_D_dhoruTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(storage));&#xD;
		oos.writeObject(users);&#xD;
		oos.close();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECwGMruTEeyOg8wFipIJcg" name="save" specification="_EBW_EbuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECwGM7uTEeyOg8wFipIJcg" name="users" type="_D_dhoruTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(storage));&#xD;
		oos.writeObject(users);&#xD;
		oos.close();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECwGNLuTEeyOg8wFipIJcg" name="read" specification="_D7-IwLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECwGNbuTEeyOg8wFipIJcg" type="_D_dhoruTEeyOg8wFipIJcg" direction="return"/>
          <language>java</language>
          <body>ObjectInputStream ois = new ObjectInputStream(new FileInputStream(storage));&#xD;
		ArrayList&lt;User> users = (ArrayList&lt;User>) ois.readObject();&#xD;
		ois.close();&#xD;
		return users;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_D7-IwLuTEeyOg8wFipIJcg" name="read" isStatic="true" method="_ECwGNLuTEeyOg8wFipIJcg" raisedException="_D_c6kLuTEeyOg8wFipIJcg _EAn_QLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EBXmIbuTEeyOg8wFipIJcg" type="_D_dhoruTEeyOg8wFipIJcg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EBWYAbuTEeyOg8wFipIJcg" name="write" method="_ECwGMLuTEeyOg8wFipIJcg" raisedException="_D_c6kLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EBWYAruTEeyOg8wFipIJcg" name="users" type="_D_dhoruTEeyOg8wFipIJcg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EBW_EbuTEeyOg8wFipIJcg" name="save" isStatic="true" method="_ECwGMruTEeyOg8wFipIJcg" raisedException="_D_c6kLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EBW_EruTEeyOg8wFipIJcg" name="users" type="_D_dhoruTEeyOg8wFipIJcg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_D8AlALuTEeyOg8wFipIJcg" name="Tag">
        <ownedAttribute xmi:id="_ECbWELuTEeyOg8wFipIJcg" name="tagName" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ECbWEbuTEeyOg8wFipIJcg" name="tagValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_EBYNMLuTEeyOg8wFipIJcg" client="_D8AlALuTEeyOg8wFipIJcg" supplier="_D_dhoLuTEeyOg8wFipIJcg" contract="_D_dhoLuTEeyOg8wFipIJcg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECwtQLuTEeyOg8wFipIJcg" name="Tag" specification="_D8BzILuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECwtQbuTEeyOg8wFipIJcg" name="tagName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_ECwtQruTEeyOg8wFipIJcg" name="tagValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_ECwtQ7uTEeyOg8wFipIJcg" type="_D8AlALuTEeyOg8wFipIJcg" direction="return"/>
          <language>java</language>
          <body>this.tagName = tagName;&#xD;
		this.tagValue = tagValue;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECwtRLuTEeyOg8wFipIJcg" name="getTag" specification="_D8BzJruTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECwtRbuTEeyOg8wFipIJcg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;(&quot; + this.tagName + &quot;, &quot; + this.tagValue + &quot;)&quot;;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECwtRruTEeyOg8wFipIJcg" name="setTagName" specification="_D8CaMLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECwtR7uTEeyOg8wFipIJcg" name="tagName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>this.tagName = tagName;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_D8BzILuTEeyOg8wFipIJcg" name="Tag" method="_ECwtQLuTEeyOg8wFipIJcg">
          <eAnnotations xmi:id="_D8BzI7uTEeyOg8wFipIJcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_D8BzJLuTEeyOg8wFipIJcg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_D8BzIbuTEeyOg8wFipIJcg" name="tagName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_D8BzIruTEeyOg8wFipIJcg" name="tagValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_D8BzJbuTEeyOg8wFipIJcg" type="_D8AlALuTEeyOg8wFipIJcg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_D8BzJruTEeyOg8wFipIJcg" name="getTag" method="_ECwtRLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_D8BzJ7uTEeyOg8wFipIJcg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_D8CaMLuTEeyOg8wFipIJcg" name="setTagName" method="_ECwtRruTEeyOg8wFipIJcg">
          <ownedComment xmi:id="_EC0-sLuTEeyOg8wFipIJcg">
            <body>Sets the name of the tag.&#xD;
	 * &#xD;
	 * @param tagName the new name of the tag</body>
          </ownedComment>
          <ownedParameter xmi:id="_D8CaMbuTEeyOg8wFipIJcg" name="tagName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_D8DBQLuTEeyOg8wFipIJcg" name="User">
        <ownedAttribute xmi:id="_ECb9ILuTEeyOg8wFipIJcg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_ECb9IbuTEeyOg8wFipIJcg" value="1L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ECb9IruTEeyOg8wFipIJcg" name="username">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ECb9I7uTEeyOg8wFipIJcg" name="albums" type="_D_dhoruTEeyOg8wFipIJcg" isReadOnly="true" association="_EDmaxLuTEeyOg8wFipIJcg"/>
        <interfaceRealization xmi:id="_EBY0QLuTEeyOg8wFipIJcg" client="_D8DBQLuTEeyOg8wFipIJcg" supplier="_D_dhoLuTEeyOg8wFipIJcg" contract="_D_dhoLuTEeyOg8wFipIJcg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECxUULuTEeyOg8wFipIJcg" name="User" specification="_D8DoULuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECxUUbuTEeyOg8wFipIJcg" name="username">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_ECxUUruTEeyOg8wFipIJcg" type="_D8DBQLuTEeyOg8wFipIJcg" direction="return"/>
          <language>java</language>
          <body>this.username = username;&#xD;
		this.albums = new ArrayList&lt;Album>();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECxUU7uTEeyOg8wFipIJcg" name="addAlbum" specification="_EATPILuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECxUVLuTEeyOg8wFipIJcg" name="album" type="_D72M8LuTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>// Scan through the albums&#xD;
		for (int i = 0; i &lt; albums.size(); i++) {&#xD;
&#xD;
			// Check to see if there are any other albums with the same name&#xD;
			if (albums.get(i).getAlbumName().equalsIgnoreCase(album.getAlbumName())) {&#xD;
&#xD;
				Alert alert2 = new Alert(AlertType.ERROR);&#xD;
				alert2.setTitle(&quot;There is already a photo with this name.&quot;);&#xD;
				Optional&lt;ButtonType> z = alert2.showAndWait();&#xD;
				if (z.get() == ButtonType.OK) {&#xD;
					alert2.close();&#xD;
				}&#xD;
&#xD;
				return;&#xD;
			}&#xD;
		}&#xD;
&#xD;
		// If there are no albums of the same name, add the album&#xD;
		albums.add(album);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECxUVbuTEeyOg8wFipIJcg" name="authenticate" specification="_D8FdgLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECxUVruTEeyOg8wFipIJcg" name="username">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_ECxUV7uTEeyOg8wFipIJcg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if (this.username.equals(username)) {&#xD;
&#xD;
			return true;&#xD;
		}&#xD;
&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ECxUWLuTEeyOg8wFipIJcg" name="removeAlbum" specification="_EATPIruTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_ECxUWbuTEeyOg8wFipIJcg" name="album" type="_D72M8LuTEeyOg8wFipIJcg"/>
          <language>java</language>
          <body>if (albums.size() == 0) {&#xD;
&#xD;
			Alert alert2 = new Alert(AlertType.ERROR);&#xD;
			alert2.setTitle(&quot;No photos in album.&quot;);&#xD;
			Optional&lt;ButtonType> z = alert2.showAndWait();&#xD;
			if (z.get() == ButtonType.OK) {&#xD;
				alert2.close();&#xD;
			}&#xD;
		}&#xD;
&#xD;
		for (int i = 0; i &lt; albums.size(); i++) {&#xD;
&#xD;
			if (albums.get(i).getAlbumName().equalsIgnoreCase(album.getAlbumName())) {&#xD;
				// remove the photo&#xD;
				albums.remove(i);&#xD;
&#xD;
				return;&#xD;
			}&#xD;
		}&#xD;
&#xD;
		Alert alert2 = new Alert(AlertType.ERROR);&#xD;
		alert2.setTitle(&quot;Album not found.&quot;);&#xD;
		Optional&lt;ButtonType> result = alert2.showAndWait();&#xD;
		if (result.get() == ButtonType.OK) {&#xD;
			alert2.close();&#xD;
		}&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_D8DoULuTEeyOg8wFipIJcg" name="User" method="_ECxUULuTEeyOg8wFipIJcg">
          <eAnnotations xmi:id="_D8EPYbuTEeyOg8wFipIJcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_D8EPYruTEeyOg8wFipIJcg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_D8EPYLuTEeyOg8wFipIJcg" name="username">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_D8EPY7uTEeyOg8wFipIJcg" type="_D8DBQLuTEeyOg8wFipIJcg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_D8FdgLuTEeyOg8wFipIJcg" name="authenticate" method="_ECxUVbuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_D8FdgbuTEeyOg8wFipIJcg" name="username">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_D8FdgruTEeyOg8wFipIJcg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_EATPILuTEeyOg8wFipIJcg" name="addAlbum" method="_ECxUU7uTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EATPIbuTEeyOg8wFipIJcg" name="album" type="_D72M8LuTEeyOg8wFipIJcg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_EATPIruTEeyOg8wFipIJcg" name="removeAlbum" method="_ECxUWLuTEeyOg8wFipIJcg">
          <ownedParameter xmi:id="_EATPI7uTEeyOg8wFipIJcg" name="album" type="_D72M8LuTEeyOg8wFipIJcg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDlzsbuTEeyOg8wFipIJcg" name="" memberEnd="_EDlzsruTEeyOg8wFipIJcg _ECXEoruTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDlzsruTEeyOg8wFipIJcg" name="" type="_D72M8LuTEeyOg8wFipIJcg" association="_EDlzsbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDlztLuTEeyOg8wFipIJcg" name="" memberEnd="_EDlztbuTEeyOg8wFipIJcg _ECYSwbuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDlztbuTEeyOg8wFipIJcg" name="" type="_D75QQLuTEeyOg8wFipIJcg" association="_EDlztLuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDlzt7uTEeyOg8wFipIJcg" name="" memberEnd="_EDlzuLuTEeyOg8wFipIJcg _ECY50buTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDlzuLuTEeyOg8wFipIJcg" name="" type="_D75QQLuTEeyOg8wFipIJcg" association="_EDlzt7uTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDmawbuTEeyOg8wFipIJcg" name="" memberEnd="_EDmawruTEeyOg8wFipIJcg _ECZg4LuTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDmawruTEeyOg8wFipIJcg" name="" type="_D75QQLuTEeyOg8wFipIJcg" association="_EDmawbuTEeyOg8wFipIJcg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EDmaxLuTEeyOg8wFipIJcg" name="" memberEnd="_EDmaxbuTEeyOg8wFipIJcg _ECb9I7uTEeyOg8wFipIJcg">
        <ownedEnd xmi:id="_EDmaxbuTEeyOg8wFipIJcg" name="" type="_D8DBQLuTEeyOg8wFipIJcg" association="_EDmaxLuTEeyOg8wFipIJcg"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_Dke10LuTEeyOg8wFipIJcg">
      <eAnnotations xmi:id="_DkhSELuTEeyOg8wFipIJcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_Dkk8cLuTEeyOg8wFipIJcg" base_Package="_DgAlgLuTEeyOg8wFipIJcg">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_D7PI8LuTEeyOg8wFipIJcg" base_Element="_D7Oh4LuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_D7QXELuTEeyOg8wFipIJcg" base_Element="_D7Oh4LuTEeyOg8wFipIJcg">
    <annotations xmi:id="_D7QXEbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_D7-v0LuTEeyOg8wFipIJcg" genericsValue="User" base_Element="_D7-IwLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_TJkLuTEeyOg8wFipIJcg" base_Element="_D_SigLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_TwobuTEeyOg8wFipIJcg" base_Element="_D_TwoLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_UXsbuTEeyOg8wFipIJcg" base_Element="_D_UXsLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_U-wbuTEeyOg8wFipIJcg" base_Element="_D_U-wLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_WM4LuTEeyOg8wFipIJcg" base_Element="_D_Vl0LuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_Wz8LuTEeyOg8wFipIJcg" base_Element="_D_WM4buTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_XbALuTEeyOg8wFipIJcg" base_Element="_D_Wz8buTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_YCELuTEeyOg8wFipIJcg" base_Element="_D_XbAbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_YCEruTEeyOg8wFipIJcg" base_Element="_D_YCEbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_Z3QLuTEeyOg8wFipIJcg" base_Element="_D_ZQMLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_Z3QruTEeyOg8wFipIJcg" base_Element="_D_Z3QbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_aeUbuTEeyOg8wFipIJcg" base_Element="_D_aeULuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_bFYbuTEeyOg8wFipIJcg" base_Element="_D_bFYLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_bscbuTEeyOg8wFipIJcg" base_Element="_D_bscLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_cTgbuTEeyOg8wFipIJcg" base_Element="_D_cTgLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_c6kbuTEeyOg8wFipIJcg" base_Element="_D_c6kLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_dhobuTEeyOg8wFipIJcg" base_Element="_D_dhoLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_eIsLuTEeyOg8wFipIJcg" base_Element="_D_dhoruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_evwLuTEeyOg8wFipIJcg" base_Element="_D_eIsbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_hzELuTEeyOg8wFipIJcg" base_Element="_D_hMALuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_iaILuTEeyOg8wFipIJcg" base_Element="_D_hzEbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_iaIruTEeyOg8wFipIJcg" base_Element="_D_iaIbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_jBMLuTEeyOg8wFipIJcg" base_Element="_D_iaI7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_joQLuTEeyOg8wFipIJcg" base_Element="_D_jBMbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_joQruTEeyOg8wFipIJcg" base_Element="_D_joQbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_k2YLuTEeyOg8wFipIJcg" base_Element="_D_kPULuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_ldcLuTEeyOg8wFipIJcg" base_Element="_D_k2YbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_mEgLuTEeyOg8wFipIJcg" base_Element="_D_ldcbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_mEgruTEeyOg8wFipIJcg" base_Element="_D_mEgbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_mrkLuTEeyOg8wFipIJcg" base_Element="_D_mEg7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_mrkruTEeyOg8wFipIJcg" base_Element="_D_mrkbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_nSoLuTEeyOg8wFipIJcg" base_Element="_D_mrk7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_nSoruTEeyOg8wFipIJcg" base_Element="_D_nSobuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_n5sLuTEeyOg8wFipIJcg" base_Element="_D_nSo7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_n5sruTEeyOg8wFipIJcg" base_Element="_D_n5sbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_ogwbuTEeyOg8wFipIJcg" base_Element="_D_ogwLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_v1gbuTEeyOg8wFipIJcg" base_Element="_D_v1gLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_wckLuTEeyOg8wFipIJcg" base_Element="_D_v1gruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_wckruTEeyOg8wFipIJcg" base_Element="_D_wckbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_xDobuTEeyOg8wFipIJcg" base_Element="_D_xDoLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_xDo7uTEeyOg8wFipIJcg" base_Element="_D_xDoruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_xqsbuTEeyOg8wFipIJcg" base_Element="_D_xqsLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_yRwLuTEeyOg8wFipIJcg" base_Element="_D_xqsruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_2jMbuTEeyOg8wFipIJcg" base_Element="_D_2jMLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_3KQbuTEeyOg8wFipIJcg" base_Element="_D_3KQLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D_3xULuTEeyOg8wFipIJcg" base_Element="_D_3KQruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_D__tIbuTEeyOg8wFipIJcg" base_Element="_D__tILuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EAKFMLuTEeyOg8wFipIJcg" base_Element="_EAJeILuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EANvkLuTEeyOg8wFipIJcg" base_Element="_EAMhcLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EAO9sLuTEeyOg8wFipIJcg" base_Element="_EANvkbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EAPkwLuTEeyOg8wFipIJcg" base_Element="_EAO9sbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EAPkwruTEeyOg8wFipIJcg" base_Element="_EAPkwbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EASoELuTEeyOg8wFipIJcg" base_Element="_EASBALuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EAgqgLuTEeyOg8wFipIJcg" base_Element="_EAgDcLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EAhRkLuTEeyOg8wFipIJcg" base_Element="_EAgqgbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EAjGwLuTEeyOg8wFipIJcg" base_Element="_EAgqgbuTEeyOg8wFipIJcg">
    <annotations xmi:id="_EAjGwbuTEeyOg8wFipIJcg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_EAnYMLuTEeyOg8wFipIJcg" base_Element="_EAmxILuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EAn_QbuTEeyOg8wFipIJcg" base_Element="_EAn_QLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EAte0buTEeyOg8wFipIJcg" base_Element="_EAs3w7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EAte0ruTEeyOg8wFipIJcg" base_Element="_EAs3w7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_EAte07uTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EAuF4buTEeyOg8wFipIJcg" base_Element="_EAte1LuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EAuF4ruTEeyOg8wFipIJcg" base_Element="_EAte1LuTEeyOg8wFipIJcg">
    <annotations xmi:id="_EAuF47uTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EAus8buTEeyOg8wFipIJcg" base_Element="_EAuF5LuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EAus8ruTEeyOg8wFipIJcg" base_Element="_EAuF5LuTEeyOg8wFipIJcg">
    <annotations xmi:id="_EAus87uTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_EBW_ELuTEeyOg8wFipIJcg" genericsValue="User" base_Element="_EBWYAruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Generics xmi:id="_EBXmILuTEeyOg8wFipIJcg" genericsValue="User" base_Element="_EBW_EruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Generics xmi:id="_EBfh8ruTEeyOg8wFipIJcg" genericsValue="User" base_Element="_EBfh8buTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBgJALuTEeyOg8wFipIJcg" base_Element="_EBfh8buTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBgJAbuTEeyOg8wFipIJcg" base_Element="_EBfh8buTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBgJAruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBgwELuTEeyOg8wFipIJcg" base_Element="_EBgJA7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBgwEbuTEeyOg8wFipIJcg" base_Element="_EBgJA7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBgwEruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBgwFLuTEeyOg8wFipIJcg" base_Element="_EBgwE7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBhXILuTEeyOg8wFipIJcg" base_Element="_EBgwE7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBhXIbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBhXI7uTEeyOg8wFipIJcg" base_Element="_EBhXIruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBhXJLuTEeyOg8wFipIJcg" base_Element="_EBhXIruTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBhXJbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBh-MbuTEeyOg8wFipIJcg" base_Element="_EBh-MLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBh-MruTEeyOg8wFipIJcg" base_Element="_EBh-MLuTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBh-M7uTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_EBilQLuTEeyOg8wFipIJcg" genericsValue="User" base_Element="_EBh-NLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBilQruTEeyOg8wFipIJcg" base_Element="_EBh-NLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Generics xmi:id="_EBjMULuTEeyOg8wFipIJcg" genericsValue="User" base_Element="_EBilQ7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBjMUbuTEeyOg8wFipIJcg" base_Element="_EBilQ7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBjzYLuTEeyOg8wFipIJcg" base_Element="_EBjMUruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Generics xmi:id="_EBlBgLuTEeyOg8wFipIJcg" genericsValue="Album" base_Element="_EBkacruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBlBgruTEeyOg8wFipIJcg" base_Element="_EBkacruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Generics xmi:id="_EBlokLuTEeyOg8wFipIJcg" genericsValue="Photo" base_Element="_EBlBg7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBlokruTEeyOg8wFipIJcg" base_Element="_EBlBg7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBlolLuTEeyOg8wFipIJcg" base_Element="_EBlok7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Generics xmi:id="_EBmPobuTEeyOg8wFipIJcg" genericsValue="User" base_Element="_EBmPoLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBmPoruTEeyOg8wFipIJcg" base_Element="_EBmPoLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Generics xmi:id="_EBm2sLuTEeyOg8wFipIJcg" genericsValue="Album" base_Element="_EBmPo7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBm2sbuTEeyOg8wFipIJcg" base_Element="_EBmPo7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBm2sruTEeyOg8wFipIJcg" base_Element="_EBmPo7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBm2s7uTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBndwbuTEeyOg8wFipIJcg" base_Element="_EBndwLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBndwruTEeyOg8wFipIJcg" base_Element="_EBndwLuTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBndw7uTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBoE0LuTEeyOg8wFipIJcg" base_Element="_EBndxLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBoE0buTEeyOg8wFipIJcg" base_Element="_EBndxLuTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBoE0ruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBoE1LuTEeyOg8wFipIJcg" base_Element="_EBoE07uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBor4LuTEeyOg8wFipIJcg" base_Element="_EBoE07uTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBor4buTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBor47uTEeyOg8wFipIJcg" base_Element="_EBor4ruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBpS8LuTEeyOg8wFipIJcg" base_Element="_EBor4ruTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBpS8buTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBpS87uTEeyOg8wFipIJcg" base_Element="_EBpS8ruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBpS9LuTEeyOg8wFipIJcg" base_Element="_EBpS8ruTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBpS9buTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBp6ALuTEeyOg8wFipIJcg" base_Element="_EBpS9ruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBp6AbuTEeyOg8wFipIJcg" base_Element="_EBpS9ruTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBp6AruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBqhELuTEeyOg8wFipIJcg" base_Element="_EBp6A7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBqhEbuTEeyOg8wFipIJcg" base_Element="_EBp6A7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBqhEruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBqhFLuTEeyOg8wFipIJcg" base_Element="_EBqhE7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBrIILuTEeyOg8wFipIJcg" base_Element="_EBqhE7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBrIIbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBrvMLuTEeyOg8wFipIJcg" base_Element="_EBrIIruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBrvMbuTEeyOg8wFipIJcg" base_Element="_EBrIIruTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBrvMruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBrvNLuTEeyOg8wFipIJcg" base_Element="_EBrvM7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBsWQLuTEeyOg8wFipIJcg" base_Element="_EBrvM7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBsWQbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBsWQ7uTEeyOg8wFipIJcg" base_Element="_EBsWQruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBs9ULuTEeyOg8wFipIJcg" base_Element="_EBsWQruTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBs9UbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBs9U7uTEeyOg8wFipIJcg" base_Element="_EBs9UruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBtkYLuTEeyOg8wFipIJcg" base_Element="_EBs9UruTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBtkYbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBtkY7uTEeyOg8wFipIJcg" base_Element="_EBtkYruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBuLcLuTEeyOg8wFipIJcg" base_Element="_EBtkYruTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBuLcbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBuLc7uTEeyOg8wFipIJcg" base_Element="_EBuLcruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBuLdLuTEeyOg8wFipIJcg" base_Element="_EBuLcruTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBuLdbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBuygbuTEeyOg8wFipIJcg" base_Element="_EBuygLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBuygruTEeyOg8wFipIJcg" base_Element="_EBuygLuTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBuyg7uTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBuyhbuTEeyOg8wFipIJcg" base_Element="_EBuyhLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBvZkLuTEeyOg8wFipIJcg" base_Element="_EBuyhLuTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBvZkbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBvZk7uTEeyOg8wFipIJcg" base_Element="_EBvZkruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBvZlLuTEeyOg8wFipIJcg" base_Element="_EBvZkruTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBvZlbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBwAoLuTEeyOg8wFipIJcg" base_Element="_EBvZlruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBwAobuTEeyOg8wFipIJcg" base_Element="_EBvZlruTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBwAoruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBwApLuTEeyOg8wFipIJcg" base_Element="_EBwAo7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBwnsLuTEeyOg8wFipIJcg" base_Element="_EBwAo7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBwnsbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBwns7uTEeyOg8wFipIJcg" base_Element="_EBwnsruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBwntLuTEeyOg8wFipIJcg" base_Element="_EBwnsruTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBwntbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBxOwLuTEeyOg8wFipIJcg" base_Element="_EBwntruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBxOwbuTEeyOg8wFipIJcg" base_Element="_EBwntruTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBxOwruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBxOxLuTEeyOg8wFipIJcg" base_Element="_EBxOw7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBx10LuTEeyOg8wFipIJcg" base_Element="_EBxOw7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBx10buTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EByc4LuTEeyOg8wFipIJcg" base_Element="_EBx10ruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EByc4buTEeyOg8wFipIJcg" base_Element="_EBx10ruTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBzD8LuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBzD8ruTEeyOg8wFipIJcg" base_Element="_EBzD8buTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBzrALuTEeyOg8wFipIJcg" base_Element="_EBzD8buTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBzrAbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EBzrA7uTEeyOg8wFipIJcg" base_Element="_EBzrAruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EBzrBLuTEeyOg8wFipIJcg" base_Element="_EBzrAruTEeyOg8wFipIJcg">
    <annotations xmi:id="_EBzrBbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB0SELuTEeyOg8wFipIJcg" base_Element="_EBzrBruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EB0SEbuTEeyOg8wFipIJcg" base_Element="_EBzrBruTEeyOg8wFipIJcg">
    <annotations xmi:id="_EB0SEruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB05ILuTEeyOg8wFipIJcg" base_Element="_EB0SE7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB05IruTEeyOg8wFipIJcg" base_Element="_EB05IbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB05JLuTEeyOg8wFipIJcg" base_Element="_EB05I7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB2HQbuTEeyOg8wFipIJcg" base_Element="_EB2HQLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EB2HQruTEeyOg8wFipIJcg" base_Element="_EB2HQLuTEeyOg8wFipIJcg">
    <annotations xmi:id="_EB2HQ7uTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB2uULuTEeyOg8wFipIJcg" base_Element="_EB2HRLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EB2uUbuTEeyOg8wFipIJcg" base_Element="_EB2HRLuTEeyOg8wFipIJcg">
    <annotations xmi:id="_EB2uUruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB2uVLuTEeyOg8wFipIJcg" base_Element="_EB2uU7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EB2uVbuTEeyOg8wFipIJcg" base_Element="_EB2uU7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_EB2uVruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB3VYLuTEeyOg8wFipIJcg" base_Element="_EB2uV7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EB3VYbuTEeyOg8wFipIJcg" base_Element="_EB2uV7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_EB3VYruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB3VZLuTEeyOg8wFipIJcg" base_Element="_EB3VY7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EB38cLuTEeyOg8wFipIJcg" base_Element="_EB3VY7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_EB38cbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB38c7uTEeyOg8wFipIJcg" base_Element="_EB38cruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Generics xmi:id="_EB38dbuTEeyOg8wFipIJcg" genericsValue="User" base_Element="_EB38dLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB4jgbuTEeyOg8wFipIJcg" base_Element="_EB38dLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB4jhLuTEeyOg8wFipIJcg" base_Element="_EB4jgruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB5KkbuTEeyOg8wFipIJcg" base_Element="_EB5KkLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EB5KkruTEeyOg8wFipIJcg" base_Element="_EB5KkLuTEeyOg8wFipIJcg">
    <annotations xmi:id="_EB5Kk7uTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB5xoLuTEeyOg8wFipIJcg" base_Element="_EB5KlLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EB5xobuTEeyOg8wFipIJcg" base_Element="_EB5KlLuTEeyOg8wFipIJcg">
    <annotations xmi:id="_EB5xoruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB5xpLuTEeyOg8wFipIJcg" base_Element="_EB5xo7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EB5xpbuTEeyOg8wFipIJcg" base_Element="_EB5xo7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_EB6YsLuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB6YsruTEeyOg8wFipIJcg" base_Element="_EB6YsbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EB6Ys7uTEeyOg8wFipIJcg" base_Element="_EB6YsbuTEeyOg8wFipIJcg">
    <annotations xmi:id="_EB6YtLuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB6YtruTEeyOg8wFipIJcg" base_Element="_EB6YtbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EB6_wLuTEeyOg8wFipIJcg" base_Element="_EB6YtbuTEeyOg8wFipIJcg">
    <annotations xmi:id="_EB6_wbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB6_w7uTEeyOg8wFipIJcg" base_Element="_EB6_wruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EB6_xLuTEeyOg8wFipIJcg" base_Element="_EB6_wruTEeyOg8wFipIJcg">
    <annotations xmi:id="_EB6_xbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB7m0LuTEeyOg8wFipIJcg" base_Element="_EB6_xruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EB7m0buTEeyOg8wFipIJcg" base_Element="_EB6_xruTEeyOg8wFipIJcg">
    <annotations xmi:id="_EB7m0ruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB7m1buTEeyOg8wFipIJcg" base_Element="_EB7m07uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB8N4buTEeyOg8wFipIJcg" base_Element="_EB7m1ruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB808LuTEeyOg8wFipIJcg" base_Element="_EB8N4ruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EB808buTEeyOg8wFipIJcg" base_Element="_EB8N4ruTEeyOg8wFipIJcg">
    <annotations xmi:id="_EB808ruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB809LuTEeyOg8wFipIJcg" base_Element="_EB8087uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EB9cALuTEeyOg8wFipIJcg" base_Element="_EB8087uTEeyOg8wFipIJcg">
    <annotations xmi:id="_EB9cAbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB9cA7uTEeyOg8wFipIJcg" base_Element="_EB9cAruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EB9cBLuTEeyOg8wFipIJcg" base_Element="_EB9cAruTEeyOg8wFipIJcg">
    <annotations xmi:id="_EB9cBbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB-DELuTEeyOg8wFipIJcg" base_Element="_EB9cBruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EB-DEbuTEeyOg8wFipIJcg" base_Element="_EB9cBruTEeyOg8wFipIJcg">
    <annotations xmi:id="_EB-DEruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB-DFLuTEeyOg8wFipIJcg" base_Element="_EB-DE7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EB-DFbuTEeyOg8wFipIJcg" base_Element="_EB-DE7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_EB-DFruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB-qIbuTEeyOg8wFipIJcg" base_Element="_EB-qILuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EB-qIruTEeyOg8wFipIJcg" base_Element="_EB-qILuTEeyOg8wFipIJcg">
    <annotations xmi:id="_EB-qI7uTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB-qJbuTEeyOg8wFipIJcg" base_Element="_EB-qJLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EB_RMLuTEeyOg8wFipIJcg" base_Element="_EB-qJLuTEeyOg8wFipIJcg">
    <annotations xmi:id="_EB_RMbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB_RM7uTEeyOg8wFipIJcg" base_Element="_EB_RMruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EB_RNLuTEeyOg8wFipIJcg" base_Element="_EB_RMruTEeyOg8wFipIJcg">
    <annotations xmi:id="_EB_RNbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB_4QLuTEeyOg8wFipIJcg" base_Element="_EB_RNruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EB_4QbuTEeyOg8wFipIJcg" base_Element="_EB_RNruTEeyOg8wFipIJcg">
    <annotations xmi:id="_EB_4QruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EB_4RLuTEeyOg8wFipIJcg" base_Element="_EB_4Q7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_EB_4RbuTEeyOg8wFipIJcg" base_Element="_EB_4Q7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_EB_4RruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECAfUbuTEeyOg8wFipIJcg" base_Element="_ECAfULuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECAfUruTEeyOg8wFipIJcg" base_Element="_ECAfULuTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECAfU7uTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECBGYLuTEeyOg8wFipIJcg" base_Element="_ECAfVLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECBGYbuTEeyOg8wFipIJcg" base_Element="_ECAfVLuTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECBGYruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECBGZLuTEeyOg8wFipIJcg" base_Element="_ECBGY7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECBGZbuTEeyOg8wFipIJcg" base_Element="_ECBGY7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECBGZruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECBtcLuTEeyOg8wFipIJcg" base_Element="_ECBGZ7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECBtcbuTEeyOg8wFipIJcg" base_Element="_ECBGZ7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECBtcruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECBtdLuTEeyOg8wFipIJcg" base_Element="_ECBtc7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECBtdbuTEeyOg8wFipIJcg" base_Element="_ECBtc7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECBtdruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECCUgbuTEeyOg8wFipIJcg" base_Element="_ECCUgLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECCUgruTEeyOg8wFipIJcg" base_Element="_ECCUgLuTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECCUg7uTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECC7kLuTEeyOg8wFipIJcg" base_Element="_ECCUhLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECC7kbuTEeyOg8wFipIJcg" base_Element="_ECCUhLuTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECC7kruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECC7lLuTEeyOg8wFipIJcg" base_Element="_ECC7k7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECC7lbuTEeyOg8wFipIJcg" base_Element="_ECC7k7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECC7lruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECDioLuTEeyOg8wFipIJcg" base_Element="_ECC7l7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECDiobuTEeyOg8wFipIJcg" base_Element="_ECC7l7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECDioruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECDipLuTEeyOg8wFipIJcg" base_Element="_ECDio7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECDipbuTEeyOg8wFipIJcg" base_Element="_ECDio7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECDipruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECEJsLuTEeyOg8wFipIJcg" base_Element="_ECDip7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECEJsbuTEeyOg8wFipIJcg" base_Element="_ECDip7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECEJsruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECEJtLuTEeyOg8wFipIJcg" base_Element="_ECEJs7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECEJtbuTEeyOg8wFipIJcg" base_Element="_ECEJs7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECEJtruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECEwwbuTEeyOg8wFipIJcg" base_Element="_ECEwwLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECEwwruTEeyOg8wFipIJcg" base_Element="_ECEwwLuTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECEww7uTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECEwxbuTEeyOg8wFipIJcg" base_Element="_ECEwxLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECEwxruTEeyOg8wFipIJcg" base_Element="_ECEwxLuTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECEwx7uTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECFX0buTEeyOg8wFipIJcg" base_Element="_ECFX0LuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECFX0ruTEeyOg8wFipIJcg" base_Element="_ECFX0LuTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECFX07uTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECFX1buTEeyOg8wFipIJcg" base_Element="_ECFX1LuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECF-4LuTEeyOg8wFipIJcg" base_Element="_ECFX1LuTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECF-4buTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECF-47uTEeyOg8wFipIJcg" base_Element="_ECF-4ruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Generics xmi:id="_ECGl8LuTEeyOg8wFipIJcg" genericsValue="Photo" base_Element="_ECF-5LuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECHNALuTEeyOg8wFipIJcg" base_Element="_ECF-5LuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Generics xmi:id="_ECH0ELuTEeyOg8wFipIJcg" genericsValue="Album" base_Element="_ECHNAbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECH0EruTEeyOg8wFipIJcg" base_Element="_ECHNAbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Generics xmi:id="_ECIbIbuTEeyOg8wFipIJcg" genericsValue="Photo" base_Element="_ECIbILuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECIbI7uTEeyOg8wFipIJcg" base_Element="_ECIbILuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Generics xmi:id="_ECJCMLuTEeyOg8wFipIJcg" genericsValue="User" base_Element="_ECIbJLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECJCMruTEeyOg8wFipIJcg" base_Element="_ECIbJLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECJpQbuTEeyOg8wFipIJcg" base_Element="_ECJCM7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECK3YLuTEeyOg8wFipIJcg" base_Element="_ECKQULuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECLecLuTEeyOg8wFipIJcg" base_Element="_ECK3YbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECLecbuTEeyOg8wFipIJcg" base_Element="_ECK3YbuTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECLecruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECLedLuTEeyOg8wFipIJcg" base_Element="_ECLec7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECMFgLuTEeyOg8wFipIJcg" base_Element="_ECLec7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECMFgbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECMFg7uTEeyOg8wFipIJcg" base_Element="_ECMFgruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECMFhLuTEeyOg8wFipIJcg" base_Element="_ECMFgruTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECMFhbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECMskLuTEeyOg8wFipIJcg" base_Element="_ECMFhruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECMskbuTEeyOg8wFipIJcg" base_Element="_ECMFhruTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECMskruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECMslLuTEeyOg8wFipIJcg" base_Element="_ECMsk7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECMslbuTEeyOg8wFipIJcg" base_Element="_ECMsk7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECMslruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECNTobuTEeyOg8wFipIJcg" base_Element="_ECNToLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECNToruTEeyOg8wFipIJcg" base_Element="_ECNToLuTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECNTo7uTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECNTpbuTEeyOg8wFipIJcg" base_Element="_ECNTpLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECN6sLuTEeyOg8wFipIJcg" base_Element="_ECNTpLuTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECN6sbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECN6s7uTEeyOg8wFipIJcg" base_Element="_ECN6sruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECN6tLuTEeyOg8wFipIJcg" base_Element="_ECN6sruTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECN6tbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECOhwLuTEeyOg8wFipIJcg" base_Element="_ECN6truTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECOhwbuTEeyOg8wFipIJcg" base_Element="_ECN6truTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECOhwruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECOhxLuTEeyOg8wFipIJcg" base_Element="_ECOhw7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECOhxbuTEeyOg8wFipIJcg" base_Element="_ECOhw7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECOhxruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECPI0LuTEeyOg8wFipIJcg" base_Element="_ECOhx7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECPI0buTEeyOg8wFipIJcg" base_Element="_ECOhx7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECPI0ruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECPI1LuTEeyOg8wFipIJcg" base_Element="_ECPI07uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECPI1buTEeyOg8wFipIJcg" base_Element="_ECPI07uTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECPI1ruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECPv4LuTEeyOg8wFipIJcg" base_Element="_ECPI17uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECPv4buTEeyOg8wFipIJcg" base_Element="_ECPI17uTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECPv4ruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECPv5LuTEeyOg8wFipIJcg" base_Element="_ECPv47uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECQW8LuTEeyOg8wFipIJcg" base_Element="_ECPv47uTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECQW8buTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECQW87uTEeyOg8wFipIJcg" base_Element="_ECQW8ruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECQW9LuTEeyOg8wFipIJcg" base_Element="_ECQW8ruTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECQW9buTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECQ-AbuTEeyOg8wFipIJcg" base_Element="_ECQ-ALuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECQ-AruTEeyOg8wFipIJcg" base_Element="_ECQ-ALuTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECQ-A7uTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECQ-BbuTEeyOg8wFipIJcg" base_Element="_ECQ-BLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECQ-BruTEeyOg8wFipIJcg" base_Element="_ECQ-BLuTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECRlELuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECRlEruTEeyOg8wFipIJcg" base_Element="_ECRlEbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECRlE7uTEeyOg8wFipIJcg" base_Element="_ECRlEbuTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECRlFLuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECRlFruTEeyOg8wFipIJcg" base_Element="_ECRlFbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECSMILuTEeyOg8wFipIJcg" base_Element="_ECRlFbuTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECSMIbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECSMI7uTEeyOg8wFipIJcg" base_Element="_ECSMIruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECSMJLuTEeyOg8wFipIJcg" base_Element="_ECSMIruTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECSMJbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECSMJ7uTEeyOg8wFipIJcg" base_Element="_ECSMJruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECSzMLuTEeyOg8wFipIJcg" base_Element="_ECSMJruTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECSzMbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECSzM7uTEeyOg8wFipIJcg" base_Element="_ECSzMruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECSzNLuTEeyOg8wFipIJcg" base_Element="_ECSzMruTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECSzNbuTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECTaQLuTEeyOg8wFipIJcg" base_Element="_ECSzNruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECTaQbuTEeyOg8wFipIJcg" base_Element="_ECSzNruTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECTaQruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECTaRLuTEeyOg8wFipIJcg" base_Element="_ECTaQ7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECTaRbuTEeyOg8wFipIJcg" base_Element="_ECTaQ7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECTaRruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECUBULuTEeyOg8wFipIJcg" base_Element="_ECTaR7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECUBUbuTEeyOg8wFipIJcg" base_Element="_ECTaR7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECUBUruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECUBVLuTEeyOg8wFipIJcg" base_Element="_ECUBU7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Annotations xmi:id="_ECUBVbuTEeyOg8wFipIJcg" base_Element="_ECUBU7uTEeyOg8wFipIJcg">
    <annotations xmi:id="_ECUBVruTEeyOg8wFipIJcg" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECUoYbuTEeyOg8wFipIJcg" base_Element="_ECUoYLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECUoY7uTEeyOg8wFipIJcg" base_Element="_ECUoYruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Generics xmi:id="_ECVPcLuTEeyOg8wFipIJcg" genericsValue="User" base_Element="_ECUoZLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECVPcbuTEeyOg8wFipIJcg" base_Element="_ECUoZLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECVPdLuTEeyOg8wFipIJcg" base_Element="_ECVPcruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECV2gbuTEeyOg8wFipIJcg" base_Element="_ECV2gLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Generics xmi:id="_ECXrsLuTEeyOg8wFipIJcg" genericsValue="Photo" base_Element="_ECXEoruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Generics xmi:id="_ECY50ruTEeyOg8wFipIJcg" genericsValue="Tag" base_Element="_ECY50buTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Generics xmi:id="_ECZg4buTEeyOg8wFipIJcg" genericsValue="Album" base_Element="_ECZg4LuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ECavALuTEeyOg8wFipIJcg" base_Element="_ECaH8LuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Generics xmi:id="_ECckMLuTEeyOg8wFipIJcg" genericsValue="Album" base_Element="_ECb9I7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDBzALuTEeyOg8wFipIJcg" base_Element="_EDBL8LuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDCaELuTEeyOg8wFipIJcg" base_Element="_EDBzAbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDCaE7uTEeyOg8wFipIJcg" base_Element="_EDCaEbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDDBIruTEeyOg8wFipIJcg" base_Element="_EDDBILuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDDoMLuTEeyOg8wFipIJcg" base_Element="_EDDBI7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDDoM7uTEeyOg8wFipIJcg" base_Element="_EDDoMbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDEPQruTEeyOg8wFipIJcg" base_Element="_EDEPQLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDE2UruTEeyOg8wFipIJcg" base_Element="_EDE2ULuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDFdYLuTEeyOg8wFipIJcg" base_Element="_EDE2U7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDGEcLuTEeyOg8wFipIJcg" base_Element="_EDFdYbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDGEc7uTEeyOg8wFipIJcg" base_Element="_EDGEcbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDGrgLuTEeyOg8wFipIJcg" base_Element="_EDGEdLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDGrg7uTEeyOg8wFipIJcg" base_Element="_EDGrgbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDHSkLuTEeyOg8wFipIJcg" base_Element="_EDGrhLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDH5oLuTEeyOg8wFipIJcg" base_Element="_EDHSkbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDH5o7uTEeyOg8wFipIJcg" base_Element="_EDH5obuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDIgsLuTEeyOg8wFipIJcg" base_Element="_EDH5pLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDIgs7uTEeyOg8wFipIJcg" base_Element="_EDIgsbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDJHwLuTEeyOg8wFipIJcg" base_Element="_EDIgtLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDJu0LuTEeyOg8wFipIJcg" base_Element="_EDJHwbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDJu07uTEeyOg8wFipIJcg" base_Element="_EDJu0buTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDKV4LuTEeyOg8wFipIJcg" base_Element="_EDJu1LuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDKV47uTEeyOg8wFipIJcg" base_Element="_EDKV4buTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDK88ruTEeyOg8wFipIJcg" base_Element="_EDK88LuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDLkALuTEeyOg8wFipIJcg" base_Element="_EDK887uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDLkA7uTEeyOg8wFipIJcg" base_Element="_EDLkAbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDMLELuTEeyOg8wFipIJcg" base_Element="_EDLkBLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDMyILuTEeyOg8wFipIJcg" base_Element="_EDMLEbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDMyI7uTEeyOg8wFipIJcg" base_Element="_EDMyIbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDNZMLuTEeyOg8wFipIJcg" base_Element="_EDMyJLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDOAQLuTEeyOg8wFipIJcg" base_Element="_EDNZMbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDOAQ7uTEeyOg8wFipIJcg" base_Element="_EDOAQbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDOnULuTEeyOg8wFipIJcg" base_Element="_EDOARLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDOnU7uTEeyOg8wFipIJcg" base_Element="_EDOnUbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDPOYLuTEeyOg8wFipIJcg" base_Element="_EDOnVLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDPOY7uTEeyOg8wFipIJcg" base_Element="_EDPOYbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDPOZruTEeyOg8wFipIJcg" base_Element="_EDPOZLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDP1cLuTEeyOg8wFipIJcg" base_Element="_EDPOZ7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDP1c7uTEeyOg8wFipIJcg" base_Element="_EDP1cbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDQcgLuTEeyOg8wFipIJcg" base_Element="_EDP1dLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDQcg7uTEeyOg8wFipIJcg" base_Element="_EDQcgbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDRDkLuTEeyOg8wFipIJcg" base_Element="_EDQchLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDRDk7uTEeyOg8wFipIJcg" base_Element="_EDRDkbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDRDlruTEeyOg8wFipIJcg" base_Element="_EDRDlLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDRqoruTEeyOg8wFipIJcg" base_Element="_EDRqoLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDRqpbuTEeyOg8wFipIJcg" base_Element="_EDRqo7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDSRsLuTEeyOg8wFipIJcg" base_Element="_EDRqpruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDSRs7uTEeyOg8wFipIJcg" base_Element="_EDSRsbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDS4wLuTEeyOg8wFipIJcg" base_Element="_EDSRtLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDS4w7uTEeyOg8wFipIJcg" base_Element="_EDS4wbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDS4xruTEeyOg8wFipIJcg" base_Element="_EDS4xLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDTf0ruTEeyOg8wFipIJcg" base_Element="_EDTf0LuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDTf1buTEeyOg8wFipIJcg" base_Element="_EDTf07uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDUG4LuTEeyOg8wFipIJcg" base_Element="_EDTf1ruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDUG47uTEeyOg8wFipIJcg" base_Element="_EDUG4buTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDUt8LuTEeyOg8wFipIJcg" base_Element="_EDUG5LuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDUt87uTEeyOg8wFipIJcg" base_Element="_EDUt8buTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDUt9ruTEeyOg8wFipIJcg" base_Element="_EDUt9LuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDVVAruTEeyOg8wFipIJcg" base_Element="_EDVVALuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDVVBbuTEeyOg8wFipIJcg" base_Element="_EDVVA7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDV8ELuTEeyOg8wFipIJcg" base_Element="_EDVVBruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDV8E7uTEeyOg8wFipIJcg" base_Element="_EDV8EbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDWjILuTEeyOg8wFipIJcg" base_Element="_EDV8FLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDWjI7uTEeyOg8wFipIJcg" base_Element="_EDWjIbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDWjJruTEeyOg8wFipIJcg" base_Element="_EDWjJLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDXKMLuTEeyOg8wFipIJcg" base_Element="_EDWjJ7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDXKM7uTEeyOg8wFipIJcg" base_Element="_EDXKMbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDXxQLuTEeyOg8wFipIJcg" base_Element="_EDXKNLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDYYULuTEeyOg8wFipIJcg" base_Element="_EDXxQbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDY_YLuTEeyOg8wFipIJcg" base_Element="_EDYYUbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDY_Y7uTEeyOg8wFipIJcg" base_Element="_EDY_YbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDZmcLuTEeyOg8wFipIJcg" base_Element="_EDY_ZLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDZmc7uTEeyOg8wFipIJcg" base_Element="_EDZmcbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDaNgLuTEeyOg8wFipIJcg" base_Element="_EDZmdLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDaNg7uTEeyOg8wFipIJcg" base_Element="_EDaNgbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDaNhruTEeyOg8wFipIJcg" base_Element="_EDaNhLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDa0kLuTEeyOg8wFipIJcg" base_Element="_EDaNh7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDa0k7uTEeyOg8wFipIJcg" base_Element="_EDa0kbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDbboLuTEeyOg8wFipIJcg" base_Element="_EDa0lLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDbbo7uTEeyOg8wFipIJcg" base_Element="_EDbbobuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDcCsLuTEeyOg8wFipIJcg" base_Element="_EDbbpLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDcCs7uTEeyOg8wFipIJcg" base_Element="_EDcCsbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDcpwLuTEeyOg8wFipIJcg" base_Element="_EDcCtLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDcpw7uTEeyOg8wFipIJcg" base_Element="_EDcpwbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDcpxruTEeyOg8wFipIJcg" base_Element="_EDcpxLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDdQ0ruTEeyOg8wFipIJcg" base_Element="_EDdQ0LuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDd34LuTEeyOg8wFipIJcg" base_Element="_EDdQ07uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDd347uTEeyOg8wFipIJcg" base_Element="_EDd34buTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDd35ruTEeyOg8wFipIJcg" base_Element="_EDd35LuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDee8LuTEeyOg8wFipIJcg" base_Element="_EDd357uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDee87uTEeyOg8wFipIJcg" base_Element="_EDee8buTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDfGALuTEeyOg8wFipIJcg" base_Element="_EDee9LuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDfGA7uTEeyOg8wFipIJcg" base_Element="_EDfGAbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDftELuTEeyOg8wFipIJcg" base_Element="_EDfGBLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDftE7uTEeyOg8wFipIJcg" base_Element="_EDftEbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDftFruTEeyOg8wFipIJcg" base_Element="_EDftFLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDgUILuTEeyOg8wFipIJcg" base_Element="_EDftF7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDgUI7uTEeyOg8wFipIJcg" base_Element="_EDgUIbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDg7MLuTEeyOg8wFipIJcg" base_Element="_EDgUJLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDg7M7uTEeyOg8wFipIJcg" base_Element="_EDg7MbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDhiQLuTEeyOg8wFipIJcg" base_Element="_EDg7NLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDhiQ7uTEeyOg8wFipIJcg" base_Element="_EDhiQbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDiJUruTEeyOg8wFipIJcg" base_Element="_EDiJULuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDiJVbuTEeyOg8wFipIJcg" base_Element="_EDiJU7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDiwYLuTEeyOg8wFipIJcg" base_Element="_EDiJVruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDiwY7uTEeyOg8wFipIJcg" base_Element="_EDiwYbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDjXcLuTEeyOg8wFipIJcg" base_Element="_EDiwZLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDjXc7uTEeyOg8wFipIJcg" base_Element="_EDjXcbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDj-gLuTEeyOg8wFipIJcg" base_Element="_EDjXdLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDj-g7uTEeyOg8wFipIJcg" base_Element="_EDj-gbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDj-hruTEeyOg8wFipIJcg" base_Element="_EDj-hLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDklkruTEeyOg8wFipIJcg" base_Element="_EDklkLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDkllbuTEeyOg8wFipIJcg" base_Element="_EDklk7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDlMoLuTEeyOg8wFipIJcg" base_Element="_EDkllruTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDlMo7uTEeyOg8wFipIJcg" base_Element="_EDlMobuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDlzsLuTEeyOg8wFipIJcg" base_Element="_EDlMpLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDlzs7uTEeyOg8wFipIJcg" base_Element="_EDlzsbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDlztruTEeyOg8wFipIJcg" base_Element="_EDlztLuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDmawLuTEeyOg8wFipIJcg" base_Element="_EDlzt7uTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDmaw7uTEeyOg8wFipIJcg" base_Element="_EDmawbuTEeyOg8wFipIJcg"/>
  <UMLLabProfile:Reference xmi:id="_EDnB0LuTEeyOg8wFipIJcg" base_Element="_EDmaxLuTEeyOg8wFipIJcg"/>
</xmi:XMI>
